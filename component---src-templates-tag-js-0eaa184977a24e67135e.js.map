{"version":3,"sources":["webpack:///./src/templates/tag.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/utils/typography.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/layout.js"],"names":["Tags","_ref","pageContext","data","tag","_data$allMarkdownRema","allMarkdownRemark","edges","totalCount","tagHeader","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","_components_layout__WEBPACK_IMPORTED_MODULE_3__","map","_ref2","node","slug","fields","title","frontmatter","key","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","pageQuery","m","module","exports","require","default","loader","enqueue","StaticQueryContext","React","createContext","StaticQueryDataRenderer","staticQueryData","query","render","finalData","react__WEBPACK_IMPORTED_MODULE_1___default","a","Fragment","StaticQuery","props","children","Consumer","__webpack_require__","d","__webpack_exports__","rhythm","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","n","typography_theme_kirkham__WEBPACK_IMPORTED_MODULE_1__","typography_theme_kirkham__WEBPACK_IMPORTED_MODULE_1___default","typography","Typography","kirkhamTheme","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","assign","json","gatsby__WEBPACK_IMPORTED_MODULE_3__","css","site","siteMetadata","_public_static_d_538645758_json__WEBPACK_IMPORTED_MODULE_1__"],"mappings":"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","file":"component---src-templates-tag-js-0eaa184977a24e67135e.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\n\n// Components\nimport { Link, graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\n\nconst Tags = ({ pageContext, data }) => {\n  const { tag } = pageContext\n  const { edges, totalCount } = data.allMarkdownRemark\n  const tagHeader = `${totalCount} post${\n    totalCount === 1 ? \"\" : \"s\"\n  } tagged with \"${tag}\"`\n\n  return (\n    <Layout>\n        <div>\n        <h1>{tagHeader}</h1>\n        <ul>\n            {edges.map(({ node }) => {\n            const { slug } = node.fields\n            const { title } = node.frontmatter\n            return (\n                <li key={slug}>\n                <Link to={slug}>{title}</Link>\n                </li>\n            )\n            })}\n        </ul>\n        {/*\n                This links to a page that does not yet exist.\n                We'll come back to it!\n                */}\n        <Link to=\"/tags\">All tags</Link>\n        </div>\n    </Layout>\n  )\n}\n\nTags.propTypes = {\n  pageContext: PropTypes.shape({\n    tag: PropTypes.string.isRequired,\n  }),\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      totalCount: PropTypes.number.isRequired,\n      edges: PropTypes.arrayOf(\n        PropTypes.shape({\n          node: PropTypes.shape({\n            frontmatter: PropTypes.shape({\n              title: PropTypes.string.isRequired,\n            }),\n            fields: PropTypes.shape({\n              slug: PropTypes.string.isRequired,\n            }),\n          }),\n        }).isRequired\n      ),\n    }),\n  }),\n}\n\nexport default Tags\n\nexport const pageQuery = graphql`\n  query($tag: String) {\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n          }\n        }\n      }\n    }\n  }\n`","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import Typography from \"typography\"\nimport kirkhamTheme from \"typography-theme-kirkham\"\n\nconst typography = new Typography(kirkhamTheme)\n\nexport default typography\nexport const rhythm = typography.rhythm","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\nimport { css } from \"@emotion/core\"\nimport { StaticQuery, Link, graphql } from \"gatsby\"\n\nimport { rhythm } from \"../utils/typography\"\n\nexport default ({ children }) => (\n    <StaticQuery\n        query={\n          graphql`\n            query {\n              site {\n                siteMetadata {\n                  title\n                }\n              }\n            }\n          `}\n    render={data => (\n      <div css={css`\n                margin: 0 auto;\n                max-width: 800px;\n                padding: ${rhythm(2)};\n                padding-top: ${rhythm(1.5)};`}>\n          <Link to={`/`}>\n              <h3 css={css`\n                      margin-bottom: ${rhythm(2)};\n                      display: inline-block;\n                      font-style: normal;`}>\n                  {data.site.siteMetadata.title}\n              </h3>\n          </Link>\n          <Link to={`/about/`}\n                css={css`\n                    float: right;`}>\n              about\n          </Link>\n          {children}\n      </div>\n  )}\n  />\n)"],"sourceRoot":""}