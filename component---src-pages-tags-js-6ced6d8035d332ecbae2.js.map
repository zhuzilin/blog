{"version":3,"sources":["webpack:///./src/pages/tags.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/utils/typography.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/layout.js"],"names":["TagsPage","_ref","_ref$data","data","group","allMarkdownRemark","title","site","siteMetadata","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","_components_layout__WEBPACK_IMPORTED_MODULE_5__","react_helmet__WEBPACK_IMPORTED_MODULE_3__","map","tag","key","fieldValue","gatsby__WEBPACK_IMPORTED_MODULE_4__","to","_","kebabCase","totalCount","pageQuery","m","module","exports","require","default","loader","enqueue","StaticQueryContext","React","createContext","StaticQueryDataRenderer","staticQueryData","query","render","finalData","react__WEBPACK_IMPORTED_MODULE_1___default","a","Fragment","StaticQuery","props","children","Consumer","__webpack_require__","d","__webpack_exports__","rhythm","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","n","typography_theme_kirkham__WEBPACK_IMPORTED_MODULE_1__","typography_theme_kirkham__WEBPACK_IMPORTED_MODULE_1___default","typography","Typography","kirkhamTheme","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","assign","json","_ref2","gatsby__WEBPACK_IMPORTED_MODULE_3__","css","react_helmet__WEBPACK_IMPORTED_MODULE_4__","charSet","_public_static_d_538645758_json__WEBPACK_IMPORTED_MODULE_1__"],"mappings":"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","file":"component---src-pages-tags-js-6ced6d8035d332ecbae2.js","sourcesContent":["import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\n\r\n// Utilities\r\nimport _ from \"lodash\";\r\n\r\n// Components\r\nimport { Helmet } from \"react-helmet\"\r\nimport { Link, graphql } from \"gatsby\"\r\nimport Layout from \"../components/layout\"\r\n\r\nconst TagsPage = ({\r\n  data: {\r\n    allMarkdownRemark: { group },\r\n    site: {\r\n      siteMetadata: { title },\r\n    },\r\n  },\r\n}) => (\r\n    <Layout>\r\n        <div>\r\n        <Helmet title={title} />\r\n        <div>\r\n        <h1>Tags</h1>\r\n        <ul>\r\n            {group.map(tag => (\r\n            <li key={tag.fieldValue}>\r\n                <Link to={`/tags/${_.kebabCase(tag.fieldValue)}/`}>\r\n                {tag.fieldValue} ({tag.totalCount})\r\n                </Link>\r\n            </li>\r\n            ))}\r\n        </ul>\r\n        </div>\r\n    </div>\r\n    </Layout>\r\n)\r\n\r\nTagsPage.propTypes = {\r\n  data: PropTypes.shape({\r\n    allMarkdownRemark: PropTypes.shape({\r\n      group: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n          fieldValue: PropTypes.string.isRequired,\r\n          totalCount: PropTypes.number.isRequired,\r\n        }).isRequired\r\n      ),\r\n    }),\r\n    site: PropTypes.shape({\r\n      siteMetadata: PropTypes.shape({\r\n        title: PropTypes.string.isRequired,\r\n      }),\r\n    }),\r\n  }),\r\n}\r\n\r\nexport default TagsPage\r\n\r\nexport const pageQuery = graphql`\r\n  query {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    allMarkdownRemark(limit: 2000) {\r\n      group(field: frontmatter___tags) {\r\n        fieldValue\r\n        totalCount\r\n      }\r\n    }\r\n  }\r\n`","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import Typography from \"typography\"\r\nimport kirkhamTheme from \"typography-theme-kirkham\"\r\n\r\nconst typography = new Typography(kirkhamTheme)\r\n\r\nexport default typography\r\nexport const rhythm = typography.rhythm","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\r\nimport { css } from \"@emotion/core\"\r\nimport { StaticQuery, Link, graphql } from \"gatsby\"\r\nimport { Helmet } from \"react-helmet\"\r\nimport { rhythm } from \"../utils/typography\"\r\n\r\nexport default ({ children }) => (\r\n    <StaticQuery\r\n        query={\r\n          graphql`\r\n            query {\r\n              site {\r\n                siteMetadata {\r\n                  title\r\n                }\r\n              }\r\n            }\r\n          `}\r\n    render={data => (\r\n      <div css={css`\r\n                margin: 0 auto;\r\n                max-width: 900px;\r\n                padding: ${rhythm(2)};\r\n                padding-top: ${rhythm(1.5)};`}>\r\n          <Helmet>\r\n              <meta charSet=\"utf-8\" />\r\n              <title>Zilin's Blog</title>\r\n          </Helmet>\r\n          <Link to={`/`}>\r\n              <h3 css={css`\r\n                      margin-bottom: ${rhythm(2)};\r\n                      display: inline-block;\r\n                      font-style: normal;`}>\r\n                  {data.site.siteMetadata.title}\r\n              </h3>\r\n          </Link>\r\n          <Link to={`/about/`}\r\n                css={css`\r\n                    float: right;`}>\r\n              about\r\n          </Link>\r\n          {children}\r\n      </div>\r\n  )}\r\n  />\r\n)"],"sourceRoot":""}