{"data":{"markdownRemark":{"html":"<h2>module</h2>\n<p>From the document, the definition of module in python is</p>\n<blockquote>\n<p>A module is a file containing Python definitions and statements. The file name is the module name with the suffix <code class=\"language-text\">.py</code> appended.</p>\n</blockquote>\n<p>The use of modules saves the authors of different modules from having to worry about each other’s global variable names.</p>\n<h3>__name__</h3>\n<blockquote>\n<p>Within a module, the module’s name (as a string) is available as the value of the global variable<code class=\"language-text\">__name__</code></p>\n</blockquote>\n<p>Therefore, any <code class=\"language-text\">.py</code> file is a module.  And any module can be imported by the <code class=\"language-text\">import</code> statement with its <code class=\"language-text\">__name__</code>.</p>\n<h2>package</h2>\n<p>Also from the document, a package is:</p>\n<blockquote>\n<p>Packages are a way of structuring Python’s module namespace by using “dotted module names”. For example, the module name <code class=\"language-text\">A.B</code> designates a submodule named <code class=\"language-text\">B</code> in a package named <code class=\"language-text\">A</code>.</p>\n</blockquote>\n<p>It is possible and convenient that we could have the same module name in different package.</p>\n<blockquote>\n<p>You can think of packages as the directories on a file system and modules as files within directories, but don’t take this analogy too literally since packages and modules need not originate from the file system.</p>\n</blockquote>\n<h3>__main__.py</h3>\n<p>Many may have heard of <code class=\"language-text\">__init__.py</code> but I believe few have heard of <code class=\"language-text\">__main__.py</code>. This file would be run as the entrance of a directory. For example, if the file directory is (to show the directory, use <a href=\"https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/tree\">tree</a>)</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">hello\n    hello.py\n    __main__.py</code></pre></div>\n<p>With the code:</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># __main__.py</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"This is __main__\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># hello.py</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hello world\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>And we run python on the </p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ python hello/\nThis is __main__</code></pre></div>\n<p>If we delete the <code class=\"language-text\">__main__.py</code> and run again, the result would be</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ python hello/\nXXX: can<span class=\"token string\">'t find '</span>__main__<span class=\"token string\">' module in '</span>hello'</code></pre></div>\n<h2>python -m</h2>\n<blockquote>\n<p>Search <a href=\"https://docs.python.org/3/library/sys.html#sys.path\"><code class=\"language-text\">sys.path</code></a> for the named module and execute its contents as the <a href=\"https://docs.python.org/3/library/__main__.html#module-__main__\"><code class=\"language-text\">__main__</code></a> module.</p>\n</blockquote>\n<p>This is the function of the <code class=\"language-text\">-m</code> flag from the <a href=\"https://docs.python.org/3/using/cmdline.html\">document</a>. And we could think this the same as run python on a directory</p>\n<h2>Reference</h2>\n<ol>\n<li><a href=\"https://stackoverflow.com/questions/471191/why-compile-python-code\">https://stackoverflow.com/questions/471191/why-compile-python-code</a></li>\n<li><a href=\"https://blog.csdn.net/yjk13703623757/article/details/77918633\">https://blog.csdn.net/yjk13703623757/article/details/77918633</a></li>\n<li><a href=\"https://docs.python.org/3/using/cmdline.html\">https://docs.python.org/3/using/cmdline.html</a></li>\n</ol>","frontmatter":{"title":"About Python modularity"}}},"pageContext":{"slug":"/about-python-modularity/"}}