{"data":{"markdownRemark":{"html":"<p>从今天开始打算跟着MIT 6.828学习操作系统，做一下相关的lab。配置环境有点麻烦，在这里记录一下，也用来方便后人。</p>\n<h2>环境</h2>\n<p>Ubuntu 18.04</p>\n<h2>安装方式</h2>\n<p>首先运行</p>\n\n    <div class=\"gatsby-highlight\" data-language=\"bash\">\n      <pre class=\" cm-s-default\"\n      ><code><span>$ objdump -i</span></code></pre>\n    </div>\n<p>如果第二行不是<code>elf32-i386</code>, 说明不是32位系统，需要安装</p>\n\n    <div class=\"gatsby-highlight\" data-language=\"bash\">\n      <pre class=\" cm-s-default\"\n      ><code><span>$ sudo apt-get install gcc-multilib</span></code></pre>\n    </div>\n<p>然后安装QEMU：</p>\n\n    <div class=\"gatsby-highlight\" data-language=\"bash\">\n      <pre class=\" cm-s-default\"\n      ><code><span>sudo apt install libsdl1.2-dev libtool-bin libglib2.0-dev libz-dev libpixman-1-dev\nsudo apt install flex bison\ncd your/path/6.828/\ngit clone https://github.com/mit-pdos/6.828-qemu.git qemu\ncd qemu\n./configure --disable-kvm --target-list=\"i386-softmmu x86_64-softmmu\" --disable-werror --python=/your/python2.7/interpreter/path\nsudo make && sudo make install</span></code></pre>\n    </div>\n<p>默认安装地址是<code>/user/local/share</code>, 如果需要更改安装地址，可自行查询MIT提供的方法，主要是在<code>./config</code>这行加入<code>--prefix</code>.</p>\n<p>如果不知道python解释器的位置，可以运行如下代码：</p>\n\n    <div class=\"gatsby-highlight\" data-language=\"python\">\n      <pre class=\" cm-s-default\"\n      ><code><span class=\"cm-keyword\">import</span><span> </span><span class=\"cm-variable\">sys</span><span>\n</span><span class=\"cm-builtin\">print</span><span>(</span><span class=\"cm-variable\">sys</span><span>.</span><span class=\"cm-property\">executable</span><span>)</span></code></pre>\n    </div>\n<p>安装完毕之后，下载JOS:</p>\n\n    <div class=\"gatsby-highlight\" data-language=\"bash\">\n      <pre class=\" cm-s-default\"\n      ><code><span>cd /your/path/6.828\ngit clone https://pdos.csail.mit.edu/6.828/2018/jos.git lab\ncd lab\nmake</span></code></pre>\n    </div>\n<p>显示内容应与lab 1相同。</p>\n<p>测试QEMU：</p>\n\n    <div class=\"gatsby-highlight\" data-language=\"bash\">\n      <pre class=\" cm-s-default\"\n      ><code><span>cd /your/path/6.828/lab\nmake qemu</span></code></pre>\n    </div>\n<p>应跳出窗口，窗口显示与lab1相同。</p>\n<p>连接gdb，打开两个terminal，在第一个中：</p>\n\n    <div class=\"gatsby-highlight\" data-language=\"null\">\n      <pre class=\" cm-s-default\"\n      ><code><span>cd /your/path/6.828/lab\nmake qemu-gdb</span></code></pre>\n    </div>\n<p>应当跳出和刚刚类似的窗口，但是显示stopping。</p>\n<p>在第二个中：</p>\n\n    <div class=\"gatsby-highlight\" data-language=\"bash\">\n      <pre class=\" cm-s-default\"\n      ><code><span>cd your/path/6.828/lab\ngdb</span></code></pre>\n    </div>\n<p>注意第一次运行的时候gdb会提示把某一行加入<code>~/.gdbinit</code>中，其内容类似</p>\n\n    <div class=\"gatsby-highlight\" data-language=\"null\">\n      <pre class=\" cm-s-default\"\n      ><code><span>add-auto-load-safe-path /your/path/6.828/xv6-public/.gdbinit</span></code></pre>\n    </div>\n<p>加入后重新进行上面的操作（重新打开两个terminal并运行指令），会发现在gdb的文字提示中出现：</p>\n\n    <div class=\"gatsby-highlight\" data-language=\"null\">\n      <pre class=\" cm-s-default\"\n      ><code><span>+ target remote localhost:26000</span></code></pre>\n    </div>\n<p>就说明连接成功，可以继续用lab1测试其内容是否正确。</p>","frontmatter":{"title":"6.828 系统配置"}}},"pageContext":{"slug":"/6.828-set-up/"}}