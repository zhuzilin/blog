{"data":{"markdownRemark":{"html":"<p>这里会记录阅读6.828课程lecture note的我的个人笔记。可能会中英混杂，不是很适合外人阅读，也请见谅。</p>\n<h2>Lecture 1: O/S overview</h2>\n<p>操作系统的主要目的是：</p>\n<ul>\n<li>支持应用</li>\n<li>为了便捷对硬件进行抽象</li>\n<li>为多种应用multiplexing the hardware</li>\n<li>为避免bug对各个应用进行隔离</li>\n<li>提供高性能</li>\n</ul>\n<p>设计方式是：</p>\n<ul>\n<li>微观看，一个管理硬件的library</li>\n<li>宏观看，将物理机虚拟为一个有着更好性质的虚拟机</li>\n</ul>\n<p>整体组织，层状结构：硬件 -> kernel -> 用户应用</p>\n<p>OS提供的主要服务：</p>\n<ul>\n<li>process</li>\n<li>memory allocation</li>\n<li>file contents</li>\n<li>directories and file names</li>\n<li>security</li>\n<li>many others: users, IPC, network, time, terminal...</li>\n</ul>\n<p>所谓抽象，即为应用只能通过system call来使用某种功能。</p>\n<h3>Introduction to system calls</h3>\n<p>6.828 is largely about design and implementation of system call interface.</p>\n<p>对于ls，我们可以使用如下命令来看它使用了哪些命令：</p>\n\n    <div class=\"gatsby-highlight\" data-language=\"null\">\n      <pre class=\" cm-s-ambiance\"\n      ><code><span>strace /bin/ls</span></code></pre>\n    </div>\n<p>会显示其一步一步都调用了哪些system call。</p>\n<p>example <code>copy.c</code></p>\n<p>没有找到代码，所以只好自己写了一个：</p>\n\n    <div class=\"gatsby-highlight\" data-language=\"c\">\n      <pre class=\" cm-s-ambiance\"\n      ><code><span>#include <unistd.h>\n#include <sys/types.h>\n\nint main() {\n  char buf[128];\n  size_t len = read(0, buf, sizeof(buf));\n  write(1, buf, len);\n}</span></code></pre>\n    </div>\n<p>运行的结果为：</p>\n\n    <div class=\"gatsby-highlight\" data-language=\"bash\">\n      <pre class=\" cm-s-ambiance\"\n      ><code><span>$ strace ./copy\n...\nread(0, \"123\\n\", 128)                   = 4\nwrite(1, \"123\\n\", 4)                    = 4\n...</span></code></pre>\n    </div>\n<p>注意因为需要输入变量，所以这里是整理过的输出。</p>\n<p>example: <code>open.c</code></p>\n<p>还是自己写了一个：</p>\n\n    <div class=\"gatsby-highlight\" data-language=\"c\">\n      <pre class=\" cm-s-ambiance\"\n      ><code><span>#include <fcntl.h>\n#include <unistd.h>\n\nint main() {\n  int fd;\n  mode_t mode = S_IRUSR | S_IWUSR | S_IRGRP | S_IROTH;\n  char *filename = \"output.txt\";\n  fd = creat(filename, mode); // notice, there is no 'e'\n  char buf[13] = \"hello world\\n\";\n  write(fd, buf, sizeof(buf));\n}</span></code></pre>\n    </div>\n<p>运行的结果为：</p>\n\n    <div class=\"gatsby-highlight\" data-language=\"bash\">\n      <pre class=\" cm-s-ambiance\"\n      ><code><span>$ strace ./open\n...\ncreat(\"output.txt\", 0644)               = 3\nwrite(3, \"hello world\\n\\0\", 13)         = 13\n...</span></code></pre>\n    </div>\n<p>注意这里fd就是3</p>\n<p>example: <code>redirect.c</code></p>\n<p>不知道要写什么样的代码。。。</p>\n<p>Unix shell</p>\n<p>因为<code>sh.c</code>在之后的作业里要用，就不在这里细说了。</p>\n<p>example: <code>pipe1.c</code>, <code>pipe2.c</code> 都不知道是什么样的代码。。。</p>","frontmatter":{"title":"6.828 笔记1"}}},"pageContext":{"slug":"/6.828-note1/"}}