{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/utils/typography.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/layout.js"],"names":["__webpack_exports__","_ref4","data","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","_components_layout__WEBPACK_IMPORTED_MODULE_4__","css","_ref","site","siteMetadata","title","allMarkdownRemark","totalCount","edges","map","_ref5","node","key","id","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","fields","slug","_ref2","rhythm","frontmatter","_ref3","date","excerpt","query","m","module","exports","require","default","loader","enqueue","StaticQueryContext","React","createContext","StaticQueryDataRenderer","staticQueryData","render","finalData","react__WEBPACK_IMPORTED_MODULE_1___default","a","Fragment","StaticQuery","props","children","Consumer","theme","baseFontSize","baseLineHeight","scaleRatio","blockMarginBottom","headerFontFamily","bodyFontFamily","googleFonts","name","styles","headerColor","bodyColor","headerWeight","bodyWeight","boldWeight","overrideStyles","options","adjustFontSizeTo","scale","color","blockquote","gray","paddingLeft","marginLeft","borderLeft","blockquote > :last-child","marginBottom","blockquote cite","assign","fontWeight","blockquote cite:before","content","MOBILE_MEDIA_QUERY","marginRight","typography","Typography","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","json","gatsby__WEBPACK_IMPORTED_MODULE_3__","react_helmet__WEBPACK_IMPORTED_MODULE_4__","charSet","_public_static_d_2048793728_json__WEBPACK_IMPORTED_MODULE_1__"],"mappings":"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","file":"component---src-pages-index-js-1e7b9ce4ccfeb546ea87.js","sourcesContent":["import React from \"react\"\nimport { css } from \"@emotion/core\"\nimport { Link, graphql } from \"gatsby\"\nimport { rhythm } from \"../utils/typography\"\nimport Layout from \"../components/layout\"\n\nexport default ({ data }) => {\n  return (\n    <Layout>\n      <div>\n        <h1 css={css`\n              display: inline-block;\n            `}>\n          {data.site.siteMetadata.title}\n        </h1>\n        <h4>{data.allMarkdownRemark.totalCount} Posts</h4>\n        {data.allMarkdownRemark.edges.map(({ node }) => (\n          <div key={node.id}>\n            <Link to={node.fields.slug}\n                css={css`\n                  text-decoration: none;\n                  color: inherit;\n                `}>\n              <h3 css={css`margin-bottom: ${rhythm(1 / 4)};`}>\n                {node.frontmatter.title}{\" \"}\n                <span css={css`color: #bbb;`}>\n                  â€” {node.frontmatter.date}\n                </span>\n              </h3>\n              <p>{node.excerpt}</p>\n            </Link>\n          </div>\n        ))}\n      </div>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query {\n    site {\n      siteMetadata { title }\n    }\n    allMarkdownRemark(\n      filter: { fields: { draft: { eq: false } } }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      totalCount\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date(formatString: \"DD MMMM, YYYY\")\n          }\n          fields { slug }\n          excerpt(truncate: true)\n        }\n      }\n    }\n  }\n`","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import Typography from \"typography\"\n\nimport gray from \"gray-percentage\"\nimport {\n  MOBILE_MEDIA_QUERY,\n  TABLET_MEDIA_QUERY,\n} from \"typography-breakpoint-constants\"\n\nconst theme = {\n  title: \"Kirkham\",\n  baseFontSize: \"18px\",\n  baseLineHeight: 1.44,\n  scaleRatio: 2.15,\n  blockMarginBottom: 0.75,\n  headerFontFamily: [\"SimHei\", \"Quattrocento Sans\", \"sans-serif\"],\n  bodyFontFamily: [\"SimSun\", \"Quattrocento Sans\", \"serif\"],\n  googleFonts: [\n    {\n      name: \"Quattrocento Sans\",\n      styles: [\"Regular 400\", \"Bold 700\"],\n    }\n  ],\n  headerColor: \"hsla(0,0%,0%,1)\",\n  bodyColor: \"hsla(0,0%,0%,0.8)\",\n  headerWeight: 500,\n  bodyWeight: 400,\n  boldWeight: 700,\n  overrideStyles: ({ adjustFontSizeTo, scale, rhythm }, options) => ({\n    a: {\n      color: \"#9f392b\",\n    },\n    blockquote: {\n      color: gray(41),\n      paddingLeft: rhythm(13 / 16),\n      marginLeft: 0,\n      borderLeft: `${rhythm(3 / 16)} solid ${gray(80)}`,\n    },\n    \"blockquote > :last-child\": {\n      marginBottom: 0,\n    },\n    \"blockquote cite\": {\n      ...adjustFontSizeTo(options.baseFontSize),\n      color: options.bodyColor,\n      fontWeight: options.bodyWeight,\n    },\n    \"blockquote cite:before\": {\n      content: '\"â€” \"',\n    },\n    [MOBILE_MEDIA_QUERY]: {\n      blockquote: {\n        marginLeft: rhythm(-3 / 4),\n        marginRight: 0,\n        paddingLeft: rhythm(9 / 16),\n      },\n    },\n  }),\n}\n\nconst typography = new Typography(theme)\n\nexport default typography\nexport const rhythm = typography.rhythm","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\nimport { css } from \"@emotion/core\"\nimport { StaticQuery, Link, graphql } from \"gatsby\"\nimport { Helmet } from \"react-helmet\"\nimport { rhythm } from \"../utils/typography\"\n\nexport default ({ children }) => (\n  <StaticQuery\n    query={\n      graphql`\n      query {\n        site {\n        siteMetadata {\n          title\n        }\n        }\n      }\n      `}\n  render={data => (\n    <div css={css`\n        margin: 0 auto;\n        max-width: 900px;\n        padding: ${rhythm(2)};\n        padding-top: ${rhythm(1.5)};`}>\n      <Helmet>\n        <meta charSet=\"utf-8\" />\n        <title>zhuzilin's Blog</title>\n      </Helmet>\n      <Link to={`/`}>\n        <h3 css={css`\n            margin-bottom: ${rhythm(2)};\n            display: inline-block;\n            font-style: normal;`}>\n          {data.site.siteMetadata.title}\n        </h3>\n      </Link>\n      <Link to={`/about/`} css={css`float: right`}>\n        <h4 css={css`\n            margin-bottom: ${rhythm(2)};\n            display: inline-block;\n            font-style: normal;\n            color: #9f392b`}>\n          about\n        </h4>\n      </Link>\n      {children}\n    </div>\n  )}\n  />\n)"],"sourceRoot":""}