{"expireTime":9007200818315813000,"key":"transformer-remark-markdown-html-ast-42fe9c26f3cc792cd3699f404a16ddb7-gatsby-remark-katexgatsby-remark-prismjs-","val":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"这次的作业和之前的system call那次的作业非常像，这次是加入一个叫alarm的system call。其主要的功能是每间隔若干个cpu tick就触法一次handle函数。所以这里不再赘述如何创建一个system call，而是关注于不同的地方。","position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":128,"offset":128}}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":128,"offset":128}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"作业中给的测试代码如下：","position":{"start":{"line":4,"column":1,"offset":130},"end":{"line":4,"column":13,"offset":142}}}],"position":{"start":{"line":4,"column":1,"offset":130},"end":{"line":4,"column":13,"offset":142}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\"><span class=\"token comment\">// alarmtest.c</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"types.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"stat.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"user.h\"</span></span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">periodic</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">int</span>\n<span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> argc<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>argv<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">int</span> i<span class=\"token punctuation\">;</span>\n  <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"alarmtest starting\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">alarm</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> periodic<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">25</span><span class=\"token operator\">*</span><span class=\"token number\">500000</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">%</span> <span class=\"token number\">250000</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n      <span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\".\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span>\n<span class=\"token function\">periodic</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n  <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"alarm!\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":6,"column":1,"offset":144},"end":{"line":32,"column":4,"offset":491}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"注意到period是调用的定义在","position":{"start":{"line":34,"column":1,"offset":493},"end":{"line":34,"column":17,"offset":509}}},{"type":"raw","value":"<code class=\"language-text\">user.h</code>","position":{"start":{"line":34,"column":17,"offset":509},"end":{"line":34,"column":25,"offset":517}}},{"type":"text","value":"中的","position":{"start":{"line":34,"column":25,"offset":517},"end":{"line":34,"column":27,"offset":519}}},{"type":"raw","value":"<code class=\"language-text\">printf</code>","position":{"start":{"line":34,"column":27,"offset":519},"end":{"line":34,"column":35,"offset":527}}},{"type":"text","value":"这个函数是用户函数，而不是kernel函数，也就是kernel是不能调用这个函数的，所以只能在","position":{"start":{"line":34,"column":35,"offset":527},"end":{"line":34,"column":82,"offset":574}}},{"type":"raw","value":"<code class=\"language-text\">trap</code>","position":{"start":{"line":34,"column":82,"offset":574},"end":{"line":34,"column":88,"offset":580}}},{"type":"text","value":"中把","position":{"start":{"line":34,"column":88,"offset":580},"end":{"line":34,"column":90,"offset":582}}},{"type":"raw","value":"<code class=\"language-text\">eip</code>","position":{"start":{"line":34,"column":90,"offset":582},"end":{"line":34,"column":95,"offset":587}}},{"type":"text","value":"指向这个函数，返回让其在用户环境中运行。所以在","position":{"start":{"line":34,"column":95,"offset":587},"end":{"line":34,"column":118,"offset":610}}},{"type":"raw","value":"<code class=\"language-text\">trap.c</code>","position":{"start":{"line":34,"column":118,"offset":610},"end":{"line":34,"column":126,"offset":618}}},{"type":"text","value":"中，需要加入的代码是：","position":{"start":{"line":34,"column":126,"offset":618},"end":{"line":34,"column":137,"offset":629}}}],"position":{"start":{"line":34,"column":1,"offset":493},"end":{"line":34,"column":137,"offset":629}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\">  <span class=\"token keyword\">case</span> T_IRQ0 <span class=\"token operator\">+</span> IRQ_TIMER<span class=\"token operator\">:</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">myproc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>tf<span class=\"token operator\">-></span>cs <span class=\"token operator\">&amp;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">myproc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span>alarmcountdown<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">myproc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span>alarmcountdown <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">myproc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span>alarmcountdown <span class=\"token operator\">=</span> <span class=\"token function\">myproc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span>alarmticks<span class=\"token punctuation\">;</span>\n        tf<span class=\"token operator\">-></span>esp <span class=\"token operator\">-=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>\n        <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>uint <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> tf<span class=\"token operator\">-></span>esp <span class=\"token operator\">=</span> tf<span class=\"token operator\">-></span>eip<span class=\"token punctuation\">;</span>\n        tf<span class=\"token operator\">-></span>eip <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>uint<span class=\"token punctuation\">)</span><span class=\"token function\">myproc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span>alarmhandler<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">cpuid</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n      <span class=\"token function\">acquire</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>tickslock<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      ticks<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n      <span class=\"token function\">wakeup</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>ticks<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token function\">release</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>tickslock<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token function\">lapiceoi</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":36,"column":1,"offset":631},"end":{"line":55,"column":4,"offset":1111}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"注意，只加入了中间的一部分，后面的是原来就有的。相当于是认为的为handler创建了一个frame，或者说用c实现了汇编中的","position":{"start":{"line":57,"column":1,"offset":1113},"end":{"line":57,"column":63,"offset":1175}}},{"type":"raw","value":"<code class=\"language-text\">call</code>","position":{"start":{"line":57,"column":63,"offset":1175},"end":{"line":57,"column":69,"offset":1181}}},{"type":"text","value":"。为什么这么做而不是在kernel里面直接调用函数在下面有讲解。","position":{"start":{"line":57,"column":69,"offset":1181},"end":{"line":57,"column":101,"offset":1213}}}],"position":{"start":{"line":57,"column":1,"offset":1113},"end":{"line":57,"column":101,"offset":1213}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"下面我们跟着lecture 8，对我们的代码进行测试，首先加入断点并运行","position":{"start":{"line":59,"column":1,"offset":1215},"end":{"line":59,"column":37,"offset":1251}}},{"type":"raw","value":"<code class=\"language-text\">alarmtest</code>","position":{"start":{"line":59,"column":37,"offset":1251},"end":{"line":59,"column":48,"offset":1262}}}],"position":{"start":{"line":59,"column":1,"offset":1215},"end":{"line":59,"column":48,"offset":1262}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token punctuation\">(</span>gdb<span class=\"token punctuation\">)</span> <span class=\"token keyword\">break</span> sys_alarm</code></pre></div>","position":{"start":{"line":61,"column":1,"offset":1264},"end":{"line":63,"column":4,"offset":1297}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"首先，我们来看syscall是怎么知道用的是哪一个system call，在","position":{"start":{"line":65,"column":1,"offset":1299},"end":{"line":65,"column":39,"offset":1337}}}],"position":{"start":{"line":65,"column":1,"offset":1299},"end":{"line":65,"column":39,"offset":1337}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token punctuation\">(</span>gdb<span class=\"token punctuation\">)</span> print myproc<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>-<span class=\"token operator\">></span>tf-<span class=\"token operator\">></span>eax\n<span class=\"token variable\">$1</span> <span class=\"token operator\">=</span> 23</code></pre></div>","position":{"start":{"line":67,"column":1,"offset":1339},"end":{"line":70,"column":4,"offset":1388}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"这里的","position":{"start":{"line":72,"column":1,"offset":1390},"end":{"line":72,"column":4,"offset":1393}}},{"type":"raw","value":"<code class=\"language-text\">tf-&gt;eax</code>","position":{"start":{"line":72,"column":4,"offset":1393},"end":{"line":72,"column":13,"offset":1402}}},{"type":"text","value":"保存了vector number。","position":{"start":{"line":72,"column":13,"offset":1402},"end":{"line":72,"column":30,"offset":1419}}}],"position":{"start":{"line":72,"column":1,"offset":1390},"end":{"line":72,"column":30,"offset":1419}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"然后我们来看看stack","position":{"start":{"line":74,"column":1,"offset":1421},"end":{"line":74,"column":13,"offset":1433}}}],"position":{"start":{"line":74,"column":1,"offset":1421},"end":{"line":74,"column":13,"offset":1433}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token punctuation\">(</span>gdb<span class=\"token punctuation\">)</span> x/4x myproc<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>-<span class=\"token operator\">></span>tf-<span class=\"token operator\">></span>esp\n0x2fac: 0x00000034      0x00000003      0x00000080      0x00000000</code></pre></div>","position":{"start":{"line":76,"column":1,"offset":1435},"end":{"line":79,"column":4,"offset":1542}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"结合","position":{"start":{"line":81,"column":1,"offset":1544},"end":{"line":81,"column":3,"offset":1546}}},{"type":"raw","value":"<code class=\"language-text\">alarmtest.asm</code>","position":{"start":{"line":81,"column":3,"offset":1546},"end":{"line":81,"column":18,"offset":1561}}},{"type":"text","value":"：","position":{"start":{"line":81,"column":18,"offset":1561},"end":{"line":81,"column":19,"offset":1562}}}],"position":{"start":{"line":81,"column":1,"offset":1544},"end":{"line":81,"column":19,"offset":1562}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"assembly\"><pre class=\"language-assembly\"><code class=\"language-assembly\">...\n  28:\t68 80 00 00 00       \tpush   $0x80\n  2d:\t6a 03                \tpush   $0x3\n  2f:\te8 66 03 00 00       \tcall   39a &lt;alarm&gt;\n  34:\t83 c4 10             \tadd    $0x10,%esp\n...</code></pre></div>","position":{"start":{"line":83,"column":1,"offset":1564},"end":{"line":90,"column":4,"offset":1761}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"可以知道","position":{"start":{"line":92,"column":1,"offset":1763},"end":{"line":92,"column":5,"offset":1767}}},{"type":"raw","value":"<code class=\"language-text\">0x34</code>","position":{"start":{"line":92,"column":5,"offset":1767},"end":{"line":92,"column":11,"offset":1773}}},{"type":"text","value":"是return address，","position":{"start":{"line":92,"column":11,"offset":1773},"end":{"line":92,"column":27,"offset":1789}}},{"type":"raw","value":"<code class=\"language-text\">0x3</code>","position":{"start":{"line":92,"column":27,"offset":1789},"end":{"line":92,"column":32,"offset":1794}}},{"type":"text","value":"和","position":{"start":{"line":92,"column":32,"offset":1794},"end":{"line":92,"column":33,"offset":1795}}},{"type":"raw","value":"<code class=\"language-text\">0x80</code>","position":{"start":{"line":92,"column":33,"offset":1795},"end":{"line":92,"column":39,"offset":1801}}},{"type":"text","value":"都是","position":{"start":{"line":92,"column":39,"offset":1801},"end":{"line":92,"column":41,"offset":1803}}},{"type":"raw","value":"<code class=\"language-text\">alarm</code>","position":{"start":{"line":92,"column":41,"offset":1803},"end":{"line":92,"column":48,"offset":1810}}},{"type":"text","value":"的参数。","position":{"start":{"line":92,"column":48,"offset":1810},"end":{"line":92,"column":52,"offset":1814}}}],"position":{"start":{"line":92,"column":1,"offset":1763},"end":{"line":92,"column":52,"offset":1814}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"我们再来看","position":{"start":{"line":94,"column":1,"offset":1816},"end":{"line":94,"column":6,"offset":1821}}},{"type":"raw","value":"<code class=\"language-text\">alarmhandler</code>","position":{"start":{"line":94,"column":6,"offset":1821},"end":{"line":94,"column":20,"offset":1835}}},{"type":"text","value":"：","position":{"start":{"line":94,"column":20,"offset":1835},"end":{"line":94,"column":21,"offset":1836}}}],"position":{"start":{"line":94,"column":1,"offset":1816},"end":{"line":94,"column":21,"offset":1836}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token punctuation\">(</span>gdb<span class=\"token punctuation\">)</span> print myproc<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>-<span class=\"token operator\">></span>alarmhandler\n<span class=\"token variable\">$2</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>void <span class=\"token punctuation\">(</span>*<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">))</span> 0x80</code></pre></div>","position":{"start":{"line":96,"column":1,"offset":1838},"end":{"line":99,"column":4,"offset":1907}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"对应的就是","position":{"start":{"line":101,"column":1,"offset":1909},"end":{"line":101,"column":6,"offset":1914}}},{"type":"raw","value":"<code class=\"language-text\">alarmtest.asm</code>","position":{"start":{"line":101,"column":6,"offset":1914},"end":{"line":101,"column":21,"offset":1929}}},{"type":"text","value":"中","position":{"start":{"line":101,"column":21,"offset":1929},"end":{"line":101,"column":22,"offset":1930}}},{"type":"raw","value":"<code class=\"language-text\">periodic</code>","position":{"start":{"line":101,"column":22,"offset":1930},"end":{"line":101,"column":32,"offset":1940}}},{"type":"text","value":"函数的起始位置。","position":{"start":{"line":101,"column":32,"offset":1940},"end":{"line":101,"column":40,"offset":1948}}}],"position":{"start":{"line":101,"column":1,"offset":1909},"end":{"line":101,"column":40,"offset":1948}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"为什么我们不在","position":{"start":{"line":103,"column":1,"offset":1950},"end":{"line":103,"column":8,"offset":1957}}},{"type":"raw","value":"<code class=\"language-text\">trap</code>","position":{"start":{"line":103,"column":8,"offset":1957},"end":{"line":103,"column":14,"offset":1963}}},{"type":"text","value":"中直接调用","position":{"start":{"line":103,"column":14,"offset":1963},"end":{"line":103,"column":19,"offset":1968}}},{"type":"raw","value":"<code class=\"language-text\">alarmhandler</code>","position":{"start":{"line":103,"column":19,"offset":1968},"end":{"line":103,"column":33,"offset":1982}}},{"type":"text","value":"呢？","position":{"start":{"line":103,"column":33,"offset":1982},"end":{"line":103,"column":35,"offset":1984}}}],"position":{"start":{"line":103,"column":1,"offset":1950},"end":{"line":103,"column":35,"offset":1984}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"不能这么做！因为这样会在kernel mode下运行user代码，让user有可能修改kernel stack，直接导致隔离失败，非常危险。","position":{"start":{"line":105,"column":3,"offset":1988},"end":{"line":105,"column":73,"offset":2058}}}],"position":{"start":{"line":105,"column":1,"offset":1986},"end":{"line":106,"column":1,"offset":2059}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"试过之后，会发现并不会crash，只会显示","position":{"start":{"line":107,"column":3,"offset":2062},"end":{"line":107,"column":24,"offset":2083}}},{"type":"raw","value":"<code class=\"language-text\">.</code>","position":{"start":{"line":107,"column":24,"offset":2083},"end":{"line":107,"column":27,"offset":2086}}},{"type":"text","value":"而不会显示","position":{"start":{"line":107,"column":27,"offset":2086},"end":{"line":107,"column":32,"offset":2091}}},{"type":"raw","value":"<code class=\"language-text\">alarm</code>","position":{"start":{"line":107,"column":32,"offset":2091},"end":{"line":107,"column":39,"offset":2098}}},{"type":"text","value":"。即使是在","position":{"start":{"line":107,"column":39,"offset":2098},"end":{"line":107,"column":44,"offset":2103}}},{"type":"raw","value":"<code class=\"language-text\">sys_alarm</code>","position":{"start":{"line":107,"column":44,"offset":2103},"end":{"line":107,"column":55,"offset":2114}}},{"type":"text","value":"里面调用","position":{"start":{"line":107,"column":55,"offset":2114},"end":{"line":107,"column":59,"offset":2118}}},{"type":"raw","value":"<code class=\"language-text\">alarmhandler</code>","position":{"start":{"line":107,"column":59,"offset":2118},"end":{"line":107,"column":73,"offset":2132}}},{"type":"text","value":"也会出现问题。如果我们在","position":{"start":{"line":107,"column":73,"offset":2132},"end":{"line":107,"column":85,"offset":2144}}},{"type":"raw","value":"<code class=\"language-text\">sys_write</code>","position":{"start":{"line":107,"column":85,"offset":2144},"end":{"line":107,"column":96,"offset":2155}}},{"type":"text","value":"里面加断点可以发现：在","position":{"start":{"line":107,"column":96,"offset":2155},"end":{"line":107,"column":107,"offset":2166}}},{"type":"raw","value":"<code class=\"language-text\">alarmhandle</code>","position":{"start":{"line":107,"column":107,"offset":2166},"end":{"line":107,"column":120,"offset":2179}}},{"type":"text","value":"里面调用的","position":{"start":{"line":107,"column":120,"offset":2179},"end":{"line":107,"column":125,"offset":2184}}},{"type":"raw","value":"<code class=\"language-text\">sys_write</code>","position":{"start":{"line":107,"column":125,"offset":2184},"end":{"line":107,"column":136,"offset":2195}}},{"type":"text","value":"里","position":{"start":{"line":107,"column":136,"offset":2195},"end":{"line":107,"column":137,"offset":2196}}}],"position":{"start":{"line":107,"column":3,"offset":2062},"end":{"line":107,"column":137,"offset":2196}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token punctuation\">(</span>gdb<span class=\"token punctuation\">)</span> print myproc<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>-<span class=\"token operator\">></span>tf-<span class=\"token operator\">></span>eax\n<span class=\"token variable\">$2</span> <span class=\"token operator\">=</span> 16\n<span class=\"token punctuation\">(</span>gdb<span class=\"token punctuation\">)</span> x/4x myproc<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>-<span class=\"token operator\">></span>tf-<span class=\"token operator\">></span>esp\n0x495:  0x8310c483      0xb60f01c6      0xdb84ff5e      0xff857774</code></pre></div>","position":{"start":{"line":109,"column":3,"offset":2200},"end":{"line":114,"column":6,"offset":2355}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"也就是说","position":{"start":{"line":116,"column":3,"offset":2359},"end":{"line":116,"column":7,"offset":2363}}},{"type":"raw","value":"<code class=\"language-text\">sys_write</code>","position":{"start":{"line":116,"column":7,"offset":2363},"end":{"line":116,"column":18,"offset":2374}}},{"type":"text","value":"里面的","position":{"start":{"line":116,"column":18,"offset":2374},"end":{"line":116,"column":21,"offset":2377}}},{"type":"raw","value":"<code class=\"language-text\">%esp</code>","position":{"start":{"line":116,"column":21,"offset":2377},"end":{"line":116,"column":27,"offset":2383}}},{"type":"text","value":"并没有保存write需要的参数，但是正确保存了","position":{"start":{"line":116,"column":27,"offset":2383},"end":{"line":116,"column":50,"offset":2406}}},{"type":"raw","value":"<code class=\"language-text\">%eax</code>","position":{"start":{"line":116,"column":50,"offset":2406},"end":{"line":116,"column":56,"offset":2412}}},{"type":"text","value":"，说明trapframe还是正确地被保存了的。所以问题就在于esp。原因应该是从CPL=0到CPL=0的中断中硬件并没有切换stack，所以就没有保存","position":{"start":{"line":116,"column":56,"offset":2412},"end":{"line":116,"column":131,"offset":2487}}},{"type":"raw","value":"<code class=\"language-text\">%esp</code>","position":{"start":{"line":116,"column":131,"offset":2487},"end":{"line":116,"column":137,"offset":2493}}},{"type":"text","value":"，所以","position":{"start":{"line":116,"column":137,"offset":2493},"end":{"line":116,"column":140,"offset":2496}}},{"type":"raw","value":"<code class=\"language-text\">%esp</code>","position":{"start":{"line":116,"column":140,"offset":2496},"end":{"line":116,"column":146,"offset":2502}}},{"type":"text","value":"中有垃圾。详情可以见","position":{"start":{"line":116,"column":146,"offset":2502},"end":{"line":116,"column":156,"offset":2512}}},{"type":"raw","value":"<code class=\"language-text\">x86.h</code>","position":{"start":{"line":116,"column":156,"offset":2512},"end":{"line":116,"column":163,"offset":2519}}},{"type":"text","value":"中","position":{"start":{"line":116,"column":163,"offset":2519},"end":{"line":116,"column":164,"offset":2520}}},{"type":"raw","value":"<code class=\"language-text\">trapframe</code>","position":{"start":{"line":116,"column":164,"offset":2520},"end":{"line":116,"column":175,"offset":2531}}},{"type":"text","value":"最下面的注释：","position":{"start":{"line":116,"column":175,"offset":2531},"end":{"line":116,"column":182,"offset":2538}}}],"position":{"start":{"line":116,"column":3,"offset":2359},"end":{"line":116,"column":182,"offset":2538}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\"><span class=\"token keyword\">struct</span> <span class=\"token class-name\">trapframe</span> <span class=\"token punctuation\">{</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token comment\">// below here only when crossing rings, such as from user to kernel</span>\nuint esp<span class=\"token punctuation\">;</span>\nushort ss<span class=\"token punctuation\">;</span>\nushort padding6<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":118,"column":3,"offset":2542},"end":{"line":126,"column":6,"offset":2708}}},{"type":"text","value":"\n"}],"position":{"start":{"line":107,"column":1,"offset":2060},"end":{"line":126,"column":6,"offset":2708}}},{"type":"text","value":"\n"}],"position":{"start":{"line":105,"column":1,"offset":1986},"end":{"line":126,"column":6,"offset":2708}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"虽然不能正常运行，能够在kernel里面直接调用","position":{"start":{"line":128,"column":1,"offset":2710},"end":{"line":128,"column":25,"offset":2734}}},{"type":"raw","value":"<code class=\"language-text\">alarmhandler</code>","position":{"start":{"line":128,"column":25,"offset":2734},"end":{"line":128,"column":39,"offset":2748}}},{"type":"text","value":"是一件很讨厌的事。这说明kernel可以直接跳到user instruction里去，那么user就可以更改kernel stack，而且神奇的是system call(","position":{"start":{"line":128,"column":39,"offset":2748},"end":{"line":128,"column":124,"offset":2833}}},{"type":"raw","value":"<code class=\"language-text\">INT</code>","position":{"start":{"line":128,"column":124,"offset":2833},"end":{"line":128,"column":129,"offset":2838}}},{"type":"text","value":"指令)竟然可以在kernel里面运行。这些都是在设计xv6的时候不希望发生的事！","position":{"start":{"line":128,"column":129,"offset":2838},"end":{"line":128,"column":169,"offset":2878}}}],"position":{"start":{"line":128,"column":1,"offset":2710},"end":{"line":128,"column":169,"offset":2878}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"出现上述现象是因为x86的硬件不提供isolation","position":{"start":{"line":130,"column":1,"offset":2880},"end":{"line":130,"column":28,"offset":2907}}}],"position":{"start":{"line":130,"column":1,"offset":2880},"end":{"line":130,"column":28,"offset":2907}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"x86提供的很多相互独立的feature（page table, INT, &c）之间是可能被隔离的，但这不是默认设置！","position":{"start":{"line":132,"column":5,"offset":2913},"end":{"line":132,"column":65,"offset":2973}}}],"position":{"start":{"line":132,"column":5,"offset":2913},"end":{"line":132,"column":65,"offset":2973}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"（不知道可不可以这么理解，就是x86允许你这么写代码，也就是不会报错，但是设计人员应当避免这种写法。）","position":{"start":{"line":134,"column":5,"offset":2979},"end":{"line":134,"column":56,"offset":3030}}}],"position":{"start":{"line":134,"column":5,"offset":2979},"end":{"line":134,"column":56,"offset":3030}}},{"type":"text","value":"\n"}],"position":{"start":{"line":132,"column":1,"offset":2909},"end":{"line":134,"column":56,"offset":3030}}},{"type":"text","value":"\n"}],"position":{"start":{"line":132,"column":1,"offset":2909},"end":{"line":134,"column":56,"offset":3030}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"如果","position":{"start":{"line":136,"column":1,"offset":3032},"end":{"line":136,"column":3,"offset":3034}}},{"type":"raw","value":"<code class=\"language-text\">trap</code>","position":{"start":{"line":136,"column":3,"offset":3034},"end":{"line":136,"column":9,"offset":3040}}},{"type":"text","value":"不检查","position":{"start":{"line":136,"column":9,"offset":3040},"end":{"line":136,"column":12,"offset":3043}}},{"type":"raw","value":"<code class=\"language-text\">CPL==3</code>","position":{"start":{"line":136,"column":12,"offset":3043},"end":{"line":136,"column":20,"offset":3051}}},{"type":"text","value":"会出现什么？","position":{"start":{"line":136,"column":20,"offset":3051},"end":{"line":136,"column":26,"offset":3057}}}],"position":{"start":{"line":136,"column":1,"offset":3032},"end":{"line":136,"column":26,"offset":3057}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"虽然lectue-note里面说seems to work，但是我这里是会卡住的","position":{"start":{"line":138,"column":3,"offset":3061},"end":{"line":138,"column":43,"offset":3101}}}],"position":{"start":{"line":138,"column":1,"offset":3059},"end":{"line":138,"column":43,"offset":3101}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"对于","position":{"start":{"line":139,"column":3,"offset":3104},"end":{"line":139,"column":5,"offset":3106}}},{"type":"raw","value":"<code class=\"language-text\">CPL == 0</code>","position":{"start":{"line":139,"column":5,"offset":3106},"end":{"line":139,"column":15,"offset":3116}}},{"type":"text","value":"的状态，因为是从CPL=0到CPL=0的中断，所以不会保存","position":{"start":{"line":139,"column":15,"offset":3116},"end":{"line":139,"column":44,"offset":3145}}},{"type":"raw","value":"<code class=\"language-text\">%esp</code>","position":{"start":{"line":139,"column":44,"offset":3145},"end":{"line":139,"column":50,"offset":3151}}},{"type":"text","value":"，","position":{"start":{"line":139,"column":50,"offset":3151},"end":{"line":139,"column":51,"offset":3152}}},{"type":"raw","value":"<code class=\"language-text\">esp</code>","position":{"start":{"line":139,"column":51,"offset":3152},"end":{"line":139,"column":56,"offset":3157}}},{"type":"text","value":"中会有垃圾，会出现奇怪的现象。","position":{"start":{"line":139,"column":56,"offset":3157},"end":{"line":139,"column":71,"offset":3172}}}],"position":{"start":{"line":139,"column":1,"offset":3102},"end":{"line":139,"column":71,"offset":3172}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"不过从这个实验中我们可以得知，在kernel状态下仍然是可以有中断的。","position":{"start":{"line":140,"column":3,"offset":3175},"end":{"line":140,"column":38,"offset":3210}}}],"position":{"start":{"line":140,"column":1,"offset":3173},"end":{"line":140,"column":38,"offset":3210}}},{"type":"text","value":"\n"}],"position":{"start":{"line":138,"column":1,"offset":3059},"end":{"line":140,"column":38,"offset":3210}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"如果用户给的handler指向了合适的kernel 地址，就可以运行kernel中的指令。","position":{"start":{"line":142,"column":1,"offset":3212},"end":{"line":142,"column":46,"offset":3257}}}],"position":{"start":{"line":142,"column":1,"offset":3212},"end":{"line":142,"column":46,"offset":3257}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"如果运行handler之时有一个time interrupt出现了该怎么办？","position":{"start":{"line":144,"column":1,"offset":3259},"end":{"line":144,"column":39,"offset":3297}}}],"position":{"start":{"line":144,"column":1,"offset":3259},"end":{"line":144,"column":39,"offset":3297}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"可能work，但是会非常令人困惑，并且会导致user stack爆栈（这个不理解...）","position":{"start":{"line":146,"column":3,"offset":3301},"end":{"line":146,"column":47,"offset":3345}}}],"position":{"start":{"line":146,"column":1,"offset":3299},"end":{"line":146,"column":47,"offset":3345}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"或许在完成handler之前，kernel应该关闭timer","position":{"start":{"line":147,"column":3,"offset":3348},"end":{"line":147,"column":33,"offset":3378}}}],"position":{"start":{"line":147,"column":1,"offset":3346},"end":{"line":147,"column":33,"offset":3378}}},{"type":"text","value":"\n"}],"position":{"start":{"line":146,"column":1,"offset":3299},"end":{"line":147,"column":33,"offset":3378}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"如果handler修改寄存器的话，应该在调用之前保存寄存器状态。","position":{"start":{"line":149,"column":1,"offset":3380},"end":{"line":149,"column":33,"offset":3412}}}],"position":{"start":{"line":149,"column":1,"offset":3380},"end":{"line":149,"column":33,"offset":3412}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":149,"column":33,"offset":3412}}}}