{"expireTime":9007200818315814000,"key":"transformer-remark-markdown-html-ast-ef2be30531ecb5bd27e3a84495697775-gatsby-remark-katexgatsby-remark-prismjs-","val":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"这里会记录阅读6.828课程lecture note的我的个人笔记。可能会中英混杂，不是很适合外人阅读，也请见谅。","position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":58,"offset":58}}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":58,"offset":58}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Lecture 9: Locking","position":{"start":{"line":4,"column":4,"offset":63},"end":{"line":4,"column":22,"offset":81}}}],"position":{"start":{"line":4,"column":1,"offset":60},"end":{"line":4,"column":22,"offset":81}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"lock的简单抽象：","position":{"start":{"line":6,"column":1,"offset":83},"end":{"line":6,"column":11,"offset":93}}}],"position":{"start":{"line":6,"column":1,"offset":83},"end":{"line":6,"column":11,"offset":93}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  lock l\n  acquire(l)\n    x = x + 1 -- &quot;critical section&quot;\n  release(l)</code></pre></div>","position":{"start":{"line":8,"column":1,"offset":95},"end":{"line":13,"column":4,"offset":173}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"lock就是一个object，如果多个线程调用","position":{"start":{"line":15,"column":1,"offset":175},"end":{"line":15,"column":24,"offset":198}}},{"type":"raw","value":"<code class=\"language-text\">acquire</code>","position":{"start":{"line":15,"column":24,"offset":198},"end":{"line":15,"column":33,"offset":207}}},{"type":"text","value":"，只有一个thread能拿到，其他的就需要等待","position":{"start":{"line":15,"column":33,"offset":207},"end":{"line":15,"column":56,"offset":230}}},{"type":"raw","value":"<code class=\"language-text\">release</code>","position":{"start":{"line":15,"column":56,"offset":230},"end":{"line":15,"column":65,"offset":239}}},{"type":"text","value":"。","position":{"start":{"line":15,"column":65,"offset":239},"end":{"line":15,"column":66,"offset":240}}}],"position":{"start":{"line":15,"column":1,"offset":175},"end":{"line":15,"column":66,"offset":240}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"程序经常有很多数据，也就对应很多锁，不同的数据对应不同的锁。不过注意，锁并不是和数据绑定的，而是在和数据相关的critical region使用的。","position":{"start":{"line":17,"column":1,"offset":242},"end":{"line":17,"column":75,"offset":316}}}],"position":{"start":{"line":17,"column":1,"offset":242},"end":{"line":17,"column":75,"offset":316}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"那我们什么时候需要锁呢？","position":{"start":{"line":19,"column":1,"offset":318},"end":{"line":19,"column":13,"offset":330}}}],"position":{"start":{"line":19,"column":1,"offset":318},"end":{"line":19,"column":13,"offset":330}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"当2个或更多的线程触及到内存时。","position":{"start":{"line":21,"column":3,"offset":334},"end":{"line":21,"column":19,"offset":350}}}],"position":{"start":{"line":21,"column":1,"offset":332},"end":{"line":21,"column":19,"offset":350}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"当至少一个线程写入时。","position":{"start":{"line":22,"column":3,"offset":353},"end":{"line":22,"column":14,"offset":364}}}],"position":{"start":{"line":22,"column":1,"offset":351},"end":{"line":22,"column":14,"offset":364}}},{"type":"text","value":"\n"}],"position":{"start":{"line":21,"column":1,"offset":332},"end":{"line":22,"column":14,"offset":364}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"执行上述的规则时，太过保守或是太过自由都不好。有的时候故意有一些race没关系。","position":{"start":{"line":24,"column":1,"offset":366},"end":{"line":24,"column":41,"offset":406}}}],"position":{"start":{"line":24,"column":1,"offset":366},"end":{"line":24,"column":41,"offset":406}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"那我们能不能自动加锁呢？比如说每个数据都自动的和一个锁相连。","position":{"start":{"line":26,"column":1,"offset":408},"end":{"line":26,"column":31,"offset":438}}}],"position":{"start":{"line":26,"column":1,"offset":408},"end":{"line":26,"column":31,"offset":438}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"这样太死板，会出现问题，比如说","position":{"start":{"line":28,"column":1,"offset":440},"end":{"line":28,"column":16,"offset":455}}},{"type":"raw","value":"<code class=\"language-text\">rename(&quot;d1/x&quot;, &quot;d2/y&quot;)</code>","position":{"start":{"line":28,"column":16,"offset":455},"end":{"line":28,"column":40,"offset":479}}},{"type":"text","value":"，实行的步骤就会是","position":{"start":{"line":28,"column":40,"offset":479},"end":{"line":28,"column":49,"offset":488}}}],"position":{"start":{"line":28,"column":1,"offset":440},"end":{"line":28,"column":49,"offset":488}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"lock d1, erase x, unlock d1","position":{"start":{"line":30,"column":4,"offset":493},"end":{"line":30,"column":31,"offset":520}}}],"position":{"start":{"line":30,"column":1,"offset":490},"end":{"line":30,"column":31,"offset":520}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"lock d2 add y unlock d2","position":{"start":{"line":31,"column":4,"offset":524},"end":{"line":31,"column":27,"offset":547}}}],"position":{"start":{"line":31,"column":1,"offset":521},"end":{"line":31,"column":27,"offset":547}}},{"type":"text","value":"\n"}],"position":{"start":{"line":30,"column":1,"offset":490},"end":{"line":31,"column":27,"offset":547}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"这样会导致有一段时间文件消失了，那么信息也就没了...我们需要的是：","position":{"start":{"line":33,"column":1,"offset":549},"end":{"line":33,"column":35,"offset":583}}}],"position":{"start":{"line":33,"column":1,"offset":549},"end":{"line":33,"column":35,"offset":583}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"lock d1; lock d2;","position":{"start":{"line":35,"column":4,"offset":588},"end":{"line":35,"column":21,"offset":605}}}],"position":{"start":{"line":35,"column":1,"offset":585},"end":{"line":35,"column":21,"offset":605}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"erase x, add y","position":{"start":{"line":36,"column":4,"offset":609},"end":{"line":36,"column":18,"offset":623}}}],"position":{"start":{"line":36,"column":1,"offset":606},"end":{"line":36,"column":18,"offset":623}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"unlock d2; unlock d1","position":{"start":{"line":37,"column":4,"offset":627},"end":{"line":37,"column":24,"offset":647}}}],"position":{"start":{"line":37,"column":1,"offset":624},"end":{"line":37,"column":24,"offset":647}}},{"type":"text","value":"\n"}],"position":{"start":{"line":35,"column":1,"offset":585},"end":{"line":37,"column":24,"offset":647}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"也就是说程序员需要能够控制中间过程。","position":{"start":{"line":39,"column":1,"offset":649},"end":{"line":39,"column":19,"offset":667}}}],"position":{"start":{"line":39,"column":1,"offset":649},"end":{"line":39,"column":19,"offset":667}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"我们可以把锁想想成如下几点：","position":{"start":{"line":41,"column":1,"offset":669},"end":{"line":41,"column":15,"offset":683}}}],"position":{"start":{"line":41,"column":1,"offset":669},"end":{"line":41,"column":15,"offset":683}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"avoid lost update","position":{"start":{"line":43,"column":4,"offset":688},"end":{"line":43,"column":21,"offset":705}}}],"position":{"start":{"line":43,"column":1,"offset":685},"end":{"line":43,"column":21,"offset":705}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"create atomic multi-step operations  -- hide intermediate states","position":{"start":{"line":44,"column":4,"offset":709},"end":{"line":44,"column":68,"offset":773}}}],"position":{"start":{"line":44,"column":1,"offset":706},"end":{"line":44,"column":68,"offset":773}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"maintain invariants on a data structure","position":{"start":{"line":45,"column":4,"offset":777},"end":{"line":45,"column":43,"offset":816}}}],"position":{"start":{"line":45,"column":1,"offset":774},"end":{"line":45,"column":43,"offset":816}}},{"type":"text","value":"\n"}],"position":{"start":{"line":43,"column":1,"offset":685},"end":{"line":45,"column":43,"offset":816}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"deadlock","position":{"start":{"line":47,"column":5,"offset":822},"end":{"line":47,"column":13,"offset":830}}}],"position":{"start":{"line":47,"column":1,"offset":818},"end":{"line":47,"column":13,"offset":830}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"对于上面的那个","position":{"start":{"line":49,"column":1,"offset":832},"end":{"line":49,"column":8,"offset":839}}},{"type":"raw","value":"<code class=\"language-text\">rename</code>","position":{"start":{"line":49,"column":8,"offset":839},"end":{"line":49,"column":16,"offset":847}}},{"type":"text","value":"，对于有2个锁的方案，如果同时运行","position":{"start":{"line":49,"column":16,"offset":847},"end":{"line":49,"column":33,"offset":864}}},{"type":"raw","value":"<code class=\"language-text\">rename(d1/x, d2/y)</code>","position":{"start":{"line":49,"column":33,"offset":864},"end":{"line":49,"column":53,"offset":884}}},{"type":"text","value":"和","position":{"start":{"line":49,"column":53,"offset":884},"end":{"line":49,"column":54,"offset":885}}},{"type":"raw","value":"<code class=\"language-text\">rename(d2/a, d1/b)</code>","position":{"start":{"line":49,"column":54,"offset":885},"end":{"line":49,"column":74,"offset":905}}},{"type":"text","value":"就会发生死锁。","position":{"start":{"line":49,"column":74,"offset":905},"end":{"line":49,"column":81,"offset":912}}}],"position":{"start":{"line":49,"column":1,"offset":832},"end":{"line":49,"column":81,"offset":912}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"解决方案就是让程序员给所有的锁制定一个顺序，并让代码遵循这个顺序。显然这是很复杂的。。。","position":{"start":{"line":51,"column":1,"offset":914},"end":{"line":51,"column":45,"offset":958}}}],"position":{"start":{"line":51,"column":1,"offset":914},"end":{"line":51,"column":45,"offset":958}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"lock vs modularity tradeoff","position":{"start":{"line":53,"column":5,"offset":964},"end":{"line":53,"column":32,"offset":991}}}],"position":{"start":{"line":53,"column":1,"offset":960},"end":{"line":53,"column":32,"offset":991}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"同时这个解决方案会出现一个tradeoff，因为为了避免死锁，我们需要知道函数里面是怎么上锁的。或者说locks are often not the provate business of individual modules。所以一些时候，我们就 粗暴的在函数两端上锁来使其变为单线程运行的。","position":{"start":{"line":55,"column":1,"offset":993},"end":{"line":55,"column":148,"offset":1140}}}],"position":{"start":{"line":55,"column":1,"offset":993},"end":{"line":55,"column":148,"offset":1140}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Locks and parallleism","position":{"start":{"line":57,"column":5,"offset":1146},"end":{"line":57,"column":26,"offset":1167}}}],"position":{"start":{"line":57,"column":1,"offset":1142},"end":{"line":57,"column":26,"offset":1167}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"锁实际上是在避免并行操作。而符合分割数据和锁，或者说设计\"fine grained locks\"是很难的。所以一般从一个单独的大锁开始，如果有需要再分为多个锁。","position":{"start":{"line":59,"column":1,"offset":1169},"end":{"line":59,"column":81,"offset":1249}}}],"position":{"start":{"line":59,"column":1,"offset":1169},"end":{"line":59,"column":81,"offset":1249}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"lock in xv6","position":{"start":{"line":61,"column":5,"offset":1255},"end":{"line":61,"column":16,"offset":1266}}}],"position":{"start":{"line":61,"column":1,"offset":1251},"end":{"line":61,"column":16,"offset":1266}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"比如","position":{"start":{"line":63,"column":1,"offset":1268},"end":{"line":63,"column":3,"offset":1270}}},{"type":"raw","value":"<code class=\"language-text\">ide.c</code>","position":{"start":{"line":63,"column":3,"offset":1270},"end":{"line":63,"column":10,"offset":1277}}},{"type":"text","value":"，里面只有","position":{"start":{"line":63,"column":10,"offset":1277},"end":{"line":63,"column":15,"offset":1282}}},{"type":"raw","value":"<code class=\"language-text\">idelock</code>","position":{"start":{"line":63,"column":15,"offset":1282},"end":{"line":63,"column":24,"offset":1291}}},{"type":"text","value":"这一个锁。","position":{"start":{"line":63,"column":24,"offset":1291},"end":{"line":63,"column":29,"offset":1296}}}],"position":{"start":{"line":63,"column":1,"offset":1268},"end":{"line":63,"column":29,"offset":1296}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"implement locks","position":{"start":{"line":65,"column":5,"offset":1302},"end":{"line":65,"column":20,"offset":1317}}}],"position":{"start":{"line":65,"column":1,"offset":1298},"end":{"line":65,"column":20,"offset":1317}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"下面的这种实现方法为什么不对呢？","position":{"start":{"line":67,"column":1,"offset":1319},"end":{"line":67,"column":17,"offset":1335}}}],"position":{"start":{"line":67,"column":1,"offset":1319},"end":{"line":67,"column":17,"offset":1335}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\">  why not<span class=\"token operator\">:</span>\n    <span class=\"token keyword\">struct</span> <span class=\"token class-name\">lock</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">int</span> locked<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token function\">acquire</span><span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>l<span class=\"token operator\">-></span>locked <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> <span class=\"token comment\">// A</span>\n          l<span class=\"token operator\">-></span>locked <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// B</span>\n          <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":69,"column":1,"offset":1337},"end":{"line":80,"column":4,"offset":1529}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"因为有两个程序先后运行到A，而从而都获取了锁。所以我们应该把A,B变得atomic","position":{"start":{"line":82,"column":1,"offset":1531},"end":{"line":82,"column":42,"offset":1572}}}],"position":{"start":{"line":82,"column":1,"offset":1531},"end":{"line":82,"column":42,"offset":1572}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"在x86中，有一个指令","position":{"start":{"line":84,"column":1,"offset":1574},"end":{"line":84,"column":12,"offset":1585}}},{"type":"raw","value":"<code class=\"language-text\">xchg</code>","position":{"start":{"line":84,"column":12,"offset":1585},"end":{"line":84,"column":18,"offset":1591}}},{"type":"text","value":"就是用来做这个的，从而使得锁的实现变为：","position":{"start":{"line":84,"column":18,"offset":1591},"end":{"line":84,"column":38,"offset":1611}}}],"position":{"start":{"line":84,"column":1,"offset":1574},"end":{"line":84,"column":38,"offset":1611}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\">  <span class=\"token function\">acquire</span><span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">xchg</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>l<span class=\"token operator\">-></span>locked<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">break</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":86,"column":1,"offset":1613},"end":{"line":94,"column":4,"offset":1717}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"xv6的实际代码是（","position":{"start":{"line":96,"column":1,"offset":1719},"end":{"line":96,"column":11,"offset":1729}}},{"type":"raw","value":"<code class=\"language-text\">spinlock.c</code>","position":{"start":{"line":96,"column":11,"offset":1729},"end":{"line":96,"column":23,"offset":1741}}},{"type":"text","value":"）：","position":{"start":{"line":96,"column":23,"offset":1741},"end":{"line":96,"column":25,"offset":1743}}}],"position":{"start":{"line":96,"column":1,"offset":1719},"end":{"line":96,"column":25,"offset":1743}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\"><span class=\"token keyword\">void</span>\n<span class=\"token function\">acquire</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">struct</span> <span class=\"token class-name\">spinlock</span> <span class=\"token operator\">*</span>lk<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n  <span class=\"token function\">pushcli</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// disable interrupts to avoid deadlock.</span>\n  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">holding</span><span class=\"token punctuation\">(</span>lk<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token function\">panic</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"acquire\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// The xchg is atomic.</span>\n  <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token function\">xchg</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>lk<span class=\"token operator\">-></span>locked<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Tell the C compiler and the processor to not move loads or stores</span>\n  <span class=\"token comment\">// past this point, to ensure that the critical section's memory</span>\n  <span class=\"token comment\">// references happen after the lock is acquired.</span>\n  <span class=\"token function\">__sync_synchronize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Record info about lock acquisition for debugging.</span>\n  lk<span class=\"token operator\">-></span>cpu <span class=\"token operator\">=</span> <span class=\"token function\">mycpu</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">getcallerpcs</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>lk<span class=\"token punctuation\">,</span> lk<span class=\"token operator\">-></span>pcs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":98,"column":1,"offset":1745},"end":{"line":119,"column":4,"offset":2273}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"注意出了使用了","position":{"start":{"line":121,"column":1,"offset":2275},"end":{"line":121,"column":8,"offset":2282}}},{"type":"raw","value":"<code class=\"language-text\">xchg</code>","position":{"start":{"line":121,"column":8,"offset":2282},"end":{"line":121,"column":14,"offset":2288}}},{"type":"text","value":"，还使用了","position":{"start":{"line":121,"column":14,"offset":2288},"end":{"line":121,"column":19,"offset":2293}}},{"type":"raw","value":"<code class=\"language-text\">pushcli</code>","position":{"start":{"line":121,"column":19,"offset":2293},"end":{"line":121,"column":28,"offset":2302}}},{"type":"text","value":"，也就是关闭了中断机制，因为中断可能会导致死锁。","position":{"start":{"line":121,"column":28,"offset":2302},"end":{"line":121,"column":52,"offset":2326}}}],"position":{"start":{"line":121,"column":1,"offset":2275},"end":{"line":121,"column":52,"offset":2326}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">release</code>","position":{"start":{"line":123,"column":1,"offset":2328},"end":{"line":123,"column":10,"offset":2337}}},{"type":"text","value":"的代码就简单的多：","position":{"start":{"line":123,"column":10,"offset":2337},"end":{"line":123,"column":19,"offset":2346}}}],"position":{"start":{"line":123,"column":1,"offset":2328},"end":{"line":123,"column":19,"offset":2346}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\"><span class=\"token keyword\">void</span>\n<span class=\"token function\">release</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">struct</span> <span class=\"token class-name\">spinlock</span> <span class=\"token operator\">*</span>lk<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">holding</span><span class=\"token punctuation\">(</span>lk<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token function\">panic</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"release\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  lk<span class=\"token operator\">-></span>pcs<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  lk<span class=\"token operator\">-></span>cpu <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Tell the C compiler and the processor to not move loads or stores</span>\n  <span class=\"token comment\">// past this point, to ensure that all the stores in the critical</span>\n  <span class=\"token comment\">// section are visible to other cores before the lock is released.</span>\n  <span class=\"token comment\">// Both the C compiler and the hardware may re-order loads and</span>\n  <span class=\"token comment\">// stores; __sync_synchronize() tells them both not to.</span>\n  <span class=\"token function\">__sync_synchronize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Release the lock, equivalent to lk->locked = 0.</span>\n  <span class=\"token comment\">// This code can't use a C assignment, since it might</span>\n  <span class=\"token comment\">// not be atomic. A real OS would use C atomics here.</span>\n  <span class=\"token keyword\">asm</span> <span class=\"token keyword\">volatile</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"movl $0, %0\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"+m\"</span> <span class=\"token punctuation\">(</span>lk<span class=\"token operator\">-></span>locked<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">popcli</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":125,"column":1,"offset":2348},"end":{"line":149,"column":4,"offset":3058}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"这里之所以要调用","position":{"start":{"line":151,"column":1,"offset":3060},"end":{"line":151,"column":9,"offset":3068}}},{"type":"raw","value":"<code class=\"language-text\">__sync_synchronize()</code>","position":{"start":{"line":151,"column":9,"offset":3068},"end":{"line":151,"column":31,"offset":3090}}},{"type":"text","value":"，就是因为编译器可能会在优化的时候更改指令顺序。如，虽然我们写的是：","position":{"start":{"line":151,"column":31,"offset":3090},"end":{"line":151,"column":65,"offset":3124}}}],"position":{"start":{"line":151,"column":1,"offset":3060},"end":{"line":151,"column":65,"offset":3124}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\">  Core A<span class=\"token operator\">:</span>          Core B<span class=\"token operator\">:</span>\n    locked <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n    x <span class=\"token operator\">=</span> x <span class=\"token operator\">+</span> <span class=\"token number\">1</span>      <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>locked <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n    locked <span class=\"token operator\">=</span> <span class=\"token number\">0</span>       <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n                   locked <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n                   x <span class=\"token operator\">=</span> x <span class=\"token operator\">+</span> <span class=\"token number\">1</span>\n                   locked <span class=\"token operator\">=</span> <span class=\"token number\">0</span></code></pre></div>","position":{"start":{"line":153,"column":1,"offset":3126},"end":{"line":161,"column":4,"offset":3328}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"但是有可能会被优化为：","position":{"start":{"line":163,"column":1,"offset":3330},"end":{"line":163,"column":12,"offset":3341}}}],"position":{"start":{"line":163,"column":1,"offset":3330},"end":{"line":163,"column":12,"offset":3341}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\">      locked <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n      locked <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n      x <span class=\"token operator\">=</span> x <span class=\"token operator\">+</span> <span class=\"token number\">1</span></code></pre></div>","position":{"start":{"line":165,"column":1,"offset":3343},"end":{"line":169,"column":4,"offset":3401}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"这样就让锁失效了。","position":{"start":{"line":171,"column":1,"offset":3403},"end":{"line":171,"column":10,"offset":3412}}},{"type":"raw","value":"<code class=\"language-text\">__sync_synchronize()</code>","position":{"start":{"line":171,"column":10,"offset":3412},"end":{"line":171,"column":32,"offset":3434}}},{"type":"text","value":"就是有这样的作用，让编译器不会move a memory reference past it. 事实上","position":{"start":{"line":171,"column":32,"offset":3434},"end":{"line":171,"column":83,"offset":3485}}},{"type":"raw","value":"<code class=\"language-text\">xchg</code>","position":{"start":{"line":171,"column":83,"offset":3485},"end":{"line":171,"column":89,"offset":3491}}},{"type":"text","value":"也会有同样的效果（intel保证的）。","position":{"start":{"line":171,"column":89,"offset":3491},"end":{"line":171,"column":108,"offset":3510}}}],"position":{"start":{"line":171,"column":1,"offset":3403},"end":{"line":171,"column":108,"offset":3510}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"因为上述的存在，在用锁的情况下，不需要考虑memory ordering rules，只有在写exotic \"lock-free\"的代码的时候才需要。","position":{"start":{"line":173,"column":1,"offset":3512},"end":{"line":173,"column":76,"offset":3587}}}],"position":{"start":{"line":173,"column":1,"offset":3512},"end":{"line":173,"column":76,"offset":3587}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"我们会发现spinlock会阻塞cpu，那么其只适合短时间的锁。我们之后会讨论和spinlock不太一样的一种锁，在等待的时候会让出CPU。","position":{"start":{"line":175,"column":1,"offset":3589},"end":{"line":175,"column":71,"offset":3659}}}],"position":{"start":{"line":175,"column":1,"offset":3589},"end":{"line":175,"column":71,"offset":3659}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"关于用锁的几点建议： ","position":{"start":{"line":177,"column":1,"offset":3661},"end":{"line":177,"column":12,"offset":3672}}}],"position":{"start":{"line":177,"column":1,"offset":3661},"end":{"line":177,"column":12,"offset":3672}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"don't share if you don't have to","position":{"start":{"line":179,"column":3,"offset":3676},"end":{"line":179,"column":35,"offset":3708}}}],"position":{"start":{"line":179,"column":1,"offset":3674},"end":{"line":179,"column":35,"offset":3708}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"start with a few coarse-grained locks","position":{"start":{"line":180,"column":3,"offset":3711},"end":{"line":180,"column":40,"offset":3748}}}],"position":{"start":{"line":180,"column":1,"offset":3709},"end":{"line":180,"column":40,"offset":3748}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"instrument your code -- which locks are preventing parallelism?","position":{"start":{"line":181,"column":3,"offset":3751},"end":{"line":181,"column":66,"offset":3814}}}],"position":{"start":{"line":181,"column":1,"offset":3749},"end":{"line":181,"column":66,"offset":3814}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"use fine-grained locks only as needed for parallel performance","position":{"start":{"line":182,"column":3,"offset":3817},"end":{"line":182,"column":65,"offset":3879}}}],"position":{"start":{"line":182,"column":1,"offset":3815},"end":{"line":182,"column":65,"offset":3879}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"use an automated race detector","position":{"start":{"line":183,"column":3,"offset":3882},"end":{"line":183,"column":33,"offset":3912}}}],"position":{"start":{"line":183,"column":1,"offset":3880},"end":{"line":183,"column":33,"offset":3912}}},{"type":"text","value":"\n"}],"position":{"start":{"line":179,"column":1,"offset":3674},"end":{"line":183,"column":33,"offset":3912}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":183,"column":33,"offset":3912}}}}