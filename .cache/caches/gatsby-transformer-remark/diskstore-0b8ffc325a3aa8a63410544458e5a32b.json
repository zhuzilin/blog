{"expireTime":9007200818315813000,"key":"transformer-remark-markdown-ast-f2cccca4d0bcc565ff5089413729a7a6-gatsby-remark-katexgatsby-remark-prismjs-","val":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"这里会记录阅读6.828课程lecture note的我的个人笔记。可能会中英混杂，不是很适合外人阅读，也请见谅。","position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":58,"offset":58},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":58,"offset":58},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Lecture 11: Coordination (sleep&wakeup)","position":{"start":{"line":4,"column":4,"offset":63},"end":{"line":4,"column":43,"offset":102},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":60},"end":{"line":4,"column":43,"offset":102},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"sequence coordination","position":{"start":{"line":6,"column":5,"offset":108},"end":{"line":6,"column":26,"offset":129},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":104},"end":{"line":6,"column":26,"offset":129},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"有的时候线程需要等待某些事件，比如","position":{"start":{"line":8,"column":1,"offset":131},"end":{"line":8,"column":18,"offset":148},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":131},"end":{"line":8,"column":18,"offset":148},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"disk的读写","position":{"start":{"line":10,"column":3,"offset":152},"end":{"line":10,"column":10,"offset":159},"indent":[]}}],"position":{"start":{"line":10,"column":3,"offset":152},"end":{"line":10,"column":10,"offset":159},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":150},"end":{"line":10,"column":10,"offset":159},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"pipe reader to make space in pipe","position":{"start":{"line":11,"column":3,"offset":162},"end":{"line":11,"column":36,"offset":195},"indent":[]}}],"position":{"start":{"line":11,"column":3,"offset":162},"end":{"line":11,"column":36,"offset":195},"indent":[]}}],"position":{"start":{"line":11,"column":1,"offset":160},"end":{"line":11,"column":36,"offset":195},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"child exit(","position":{"start":{"line":12,"column":3,"offset":198},"end":{"line":12,"column":14,"offset":209},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">wait</code>","position":{"start":{"line":12,"column":14,"offset":209},"end":{"line":12,"column":20,"offset":215},"indent":[]}},{"type":"text","value":")。","position":{"start":{"line":12,"column":20,"offset":215},"end":{"line":12,"column":22,"offset":217},"indent":[]}}],"position":{"start":{"line":12,"column":3,"offset":198},"end":{"line":12,"column":22,"offset":217},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":196},"end":{"line":12,"column":22,"offset":217},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":150},"end":{"line":12,"column":22,"offset":217},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"对于这些事件，如果就是用一个spinlock显然太浪费了。更好的解决方法是用一些可以原生的coordination primitives来把CPU yield出来，这些primitives包括：","position":{"start":{"line":14,"column":1,"offset":219},"end":{"line":14,"column":98,"offset":316},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":219},"end":{"line":14,"column":98,"offset":316},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"sleep & wakeup (xv6)","position":{"start":{"line":16,"column":3,"offset":320},"end":{"line":16,"column":23,"offset":340},"indent":[]}}],"position":{"start":{"line":16,"column":3,"offset":320},"end":{"line":16,"column":23,"offset":340},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":318},"end":{"line":16,"column":23,"offset":340},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"condition variables (homework)","position":{"start":{"line":17,"column":3,"offset":343},"end":{"line":17,"column":33,"offset":373},"indent":[]}}],"position":{"start":{"line":17,"column":3,"offset":343},"end":{"line":17,"column":33,"offset":373},"indent":[]}}],"position":{"start":{"line":17,"column":1,"offset":341},"end":{"line":17,"column":33,"offset":373},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"barriers (homework)","position":{"start":{"line":18,"column":3,"offset":376},"end":{"line":18,"column":22,"offset":395},"indent":[]}}],"position":{"start":{"line":18,"column":3,"offset":376},"end":{"line":18,"column":22,"offset":395},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":374},"end":{"line":18,"column":22,"offset":395},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":318},"end":{"line":18,"column":22,"offset":395},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"等等（注意sleep & wake的condition variable实际上有异曲同工之妙）","position":{"start":{"line":20,"column":1,"offset":397},"end":{"line":20,"column":48,"offset":444},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":397},"end":{"line":20,"column":48,"offset":444},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"sleep & wakeup","position":{"start":{"line":22,"column":5,"offset":450},"end":{"line":22,"column":19,"offset":464},"indent":[]}}],"position":{"start":{"line":22,"column":1,"offset":446},"end":{"line":22,"column":19,"offset":464},"indent":[]}},{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">sleep</code>","position":{"start":{"line":24,"column":1,"offset":466},"end":{"line":24,"column":8,"offset":473},"indent":[]}}],"position":{"start":{"line":24,"column":1,"offset":466},"end":{"line":24,"column":8,"offset":473},"indent":[]}},{"type":"html","lang":"c","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\"><span class=\"token comment\">// Atomically release lock and sleep on chan.</span>\n<span class=\"token comment\">// Reacquires lock when awakened.</span>\n<span class=\"token keyword\">void</span>\n<span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span> <span class=\"token operator\">*</span>chan<span class=\"token punctuation\">,</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">spinlock</span> <span class=\"token operator\">*</span>lk<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">struct</span> <span class=\"token class-name\">proc</span> <span class=\"token operator\">*</span>p <span class=\"token operator\">=</span> <span class=\"token function\">myproc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  \n  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>p <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n    <span class=\"token function\">panic</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"sleep\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>lk <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n    <span class=\"token function\">panic</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"sleep without lk\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Must acquire ptable.lock in order to</span>\n  <span class=\"token comment\">// change p->state and then call sched.</span>\n  <span class=\"token comment\">// Once we hold ptable.lock, we can be</span>\n  <span class=\"token comment\">// guaranteed that we won't miss any wakeup</span>\n  <span class=\"token comment\">// (wakeup runs with ptable.lock locked),</span>\n  <span class=\"token comment\">// so it's okay to release lk.</span>\n  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>lk <span class=\"token operator\">!=</span> <span class=\"token operator\">&amp;</span>ptable<span class=\"token punctuation\">.</span>lock<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>  <span class=\"token comment\">//DOC: sleeplock0</span>\n    <span class=\"token function\">acquire</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>ptable<span class=\"token punctuation\">.</span>lock<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//DOC: sleeplock1</span>\n    <span class=\"token function\">release</span><span class=\"token punctuation\">(</span>lk<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token comment\">// Go to sleep.</span>\n  p<span class=\"token operator\">-></span>chan <span class=\"token operator\">=</span> chan<span class=\"token punctuation\">;</span>\n  p<span class=\"token operator\">-></span>state <span class=\"token operator\">=</span> SLEEPING<span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">sched</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Tidy up.</span>\n  p<span class=\"token operator\">-></span>chan <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Reacquire original lock.</span>\n  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>lk <span class=\"token operator\">!=</span> <span class=\"token operator\">&amp;</span>ptable<span class=\"token punctuation\">.</span>lock<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>  <span class=\"token comment\">//DOC: sleeplock2</span>\n    <span class=\"token function\">release</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>ptable<span class=\"token punctuation\">.</span>lock<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">acquire</span><span class=\"token punctuation\">(</span>lk<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":26,"column":1,"offset":475},"end":{"line":64,"column":4,"offset":1308},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">sleep</code>","position":{"start":{"line":66,"column":1,"offset":1310},"end":{"line":66,"column":8,"offset":1317},"indent":[]}},{"type":"text","value":"的思路很简单，就是把","position":{"start":{"line":66,"column":8,"offset":1317},"end":{"line":66,"column":18,"offset":1327},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">p-&gt;state</code>","position":{"start":{"line":66,"column":18,"offset":1327},"end":{"line":66,"column":28,"offset":1337},"indent":[]}},{"type":"text","value":"设置为","position":{"start":{"line":66,"column":28,"offset":1337},"end":{"line":66,"column":31,"offset":1340},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">SLEEPING</code>","position":{"start":{"line":66,"column":31,"offset":1340},"end":{"line":66,"column":41,"offset":1350},"indent":[]}},{"type":"text","value":"然后释放掉当前的锁，把","position":{"start":{"line":66,"column":41,"offset":1350},"end":{"line":66,"column":52,"offset":1361},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">p-&gt;chan</code>","position":{"start":{"line":66,"column":52,"offset":1361},"end":{"line":66,"column":61,"offset":1370},"indent":[]}},{"type":"text","value":"设置为传入的channel，然后调用","position":{"start":{"line":66,"column":61,"offset":1370},"end":{"line":66,"column":79,"offset":1388},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">sched</code>","position":{"start":{"line":66,"column":79,"offset":1388},"end":{"line":66,"column":86,"offset":1395},"indent":[]}},{"type":"text","value":"也就是进行context switch。在返回的时候重新","position":{"start":{"line":66,"column":86,"offset":1395},"end":{"line":66,"column":114,"offset":1423},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">acquire</code>","position":{"start":{"line":66,"column":114,"offset":1423},"end":{"line":66,"column":123,"offset":1432},"indent":[]}},{"type":"text","value":"那个锁。","position":{"start":{"line":66,"column":123,"offset":1432},"end":{"line":66,"column":127,"offset":1436},"indent":[]}}],"position":{"start":{"line":66,"column":1,"offset":1310},"end":{"line":66,"column":127,"offset":1436},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"注意","position":{"start":{"line":68,"column":3,"offset":1440},"end":{"line":68,"column":5,"offset":1442},"indent":[]}}],"position":{"start":{"line":68,"column":1,"offset":1438},"end":{"line":68,"column":7,"offset":1444},"indent":[]}},{"type":"text","value":"，在返回的时候应当是在","position":{"start":{"line":68,"column":7,"offset":1444},"end":{"line":68,"column":18,"offset":1455},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">ptable.lock</code>","position":{"start":{"line":68,"column":18,"offset":1455},"end":{"line":68,"column":31,"offset":1468},"indent":[]}},{"type":"text","value":"是被aquire的状态的，所以直到锁重新被获取前是不会有中断的。这也是实现sleep的非常重要的一点。","position":{"start":{"line":68,"column":31,"offset":1468},"end":{"line":68,"column":82,"offset":1519},"indent":[]}}],"position":{"start":{"line":68,"column":1,"offset":1438},"end":{"line":68,"column":82,"offset":1519},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"然后是","position":{"start":{"line":70,"column":1,"offset":1521},"end":{"line":70,"column":4,"offset":1524},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">wakeup</code>","position":{"start":{"line":70,"column":4,"offset":1524},"end":{"line":70,"column":12,"offset":1532},"indent":[]}}],"position":{"start":{"line":70,"column":1,"offset":1521},"end":{"line":70,"column":12,"offset":1532},"indent":[]}},{"type":"html","lang":"c","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\"><span class=\"token comment\">// Wake up all processes sleeping on chan.</span>\n<span class=\"token keyword\">void</span>\n<span class=\"token function\">wakeup</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span> <span class=\"token operator\">*</span>chan<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n  <span class=\"token function\">acquire</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>ptable<span class=\"token punctuation\">.</span>lock<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">wakeup1</span><span class=\"token punctuation\">(</span>chan<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">release</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>ptable<span class=\"token punctuation\">.</span>lock<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Wake up all processes sleeping on chan.</span>\n<span class=\"token comment\">// The ptable lock must be held.</span>\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span>\n<span class=\"token function\">wakeup1</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span> <span class=\"token operator\">*</span>chan<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">struct</span> <span class=\"token class-name\">proc</span> <span class=\"token operator\">*</span>p<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>p <span class=\"token operator\">=</span> ptable<span class=\"token punctuation\">.</span>proc<span class=\"token punctuation\">;</span> p <span class=\"token operator\">&lt;</span> <span class=\"token operator\">&amp;</span>ptable<span class=\"token punctuation\">.</span>proc<span class=\"token punctuation\">[</span>NPROC<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> p<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>p<span class=\"token operator\">-></span>state <span class=\"token operator\">==</span> SLEEPING <span class=\"token operator\">&amp;&amp;</span> p<span class=\"token operator\">-></span>chan <span class=\"token operator\">==</span> chan<span class=\"token punctuation\">)</span>\n      p<span class=\"token operator\">-></span>state <span class=\"token operator\">=</span> RUNNABLE<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":72,"column":1,"offset":1534},"end":{"line":93,"column":4,"offset":1940},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">wakeup</code>","position":{"start":{"line":95,"column":1,"offset":1942},"end":{"line":95,"column":9,"offset":1950},"indent":[]}},{"type":"text","value":"就更简单了，把所有的在某个channel上的sleeping的channel的状态都改为","position":{"start":{"line":95,"column":9,"offset":1950},"end":{"line":95,"column":53,"offset":1994},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">RUNNABLE</code>","position":{"start":{"line":95,"column":53,"offset":1994},"end":{"line":95,"column":63,"offset":2004},"indent":[]}},{"type":"text","value":"。","position":{"start":{"line":95,"column":63,"offset":2004},"end":{"line":95,"column":64,"offset":2005},"indent":[]}}],"position":{"start":{"line":95,"column":1,"offset":1942},"end":{"line":95,"column":64,"offset":2005},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"注意有可能一次会有多个进程被唤醒了。比如说pipe对应的好几个进程都被唤醒了，但是只有1个能继续运行，对于其他的进行来说，最好继续","position":{"start":{"line":97,"column":1,"offset":2007},"end":{"line":97,"column":66,"offset":2072},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">sleep</code>","position":{"start":{"line":97,"column":66,"offset":2072},"end":{"line":97,"column":73,"offset":2079},"indent":[]}},{"type":"text","value":"，所以","position":{"start":{"line":97,"column":73,"offset":2079},"end":{"line":97,"column":76,"offset":2082},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">sleep</code>","position":{"start":{"line":97,"column":76,"offset":2082},"end":{"line":97,"column":83,"offset":2089},"indent":[]}},{"type":"text","value":"往往是用一个循环来进行的，来防止这种spurious wakeup。","position":{"start":{"line":97,"column":83,"offset":2089},"end":{"line":97,"column":117,"offset":2123},"indent":[]}}],"position":{"start":{"line":97,"column":1,"offset":2007},"end":{"line":97,"column":117,"offset":2123},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"sleep和wakeup的两个问题是","position":{"start":{"line":99,"column":1,"offset":2125},"end":{"line":99,"column":19,"offset":2143},"indent":[]}}],"position":{"start":{"line":99,"column":1,"offset":2125},"end":{"line":99,"column":19,"offset":2143},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"lost wakeup","position":{"start":{"line":101,"column":3,"offset":2147},"end":{"line":101,"column":14,"offset":2158},"indent":[]}}],"position":{"start":{"line":101,"column":3,"offset":2147},"end":{"line":101,"column":14,"offset":2158},"indent":[]}}],"position":{"start":{"line":101,"column":1,"offset":2145},"end":{"line":101,"column":14,"offset":2158},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"termination while sleeping","position":{"start":{"line":102,"column":3,"offset":2161},"end":{"line":102,"column":29,"offset":2187},"indent":[]}}],"position":{"start":{"line":102,"column":3,"offset":2161},"end":{"line":102,"column":29,"offset":2187},"indent":[]}}],"position":{"start":{"line":102,"column":1,"offset":2159},"end":{"line":102,"column":29,"offset":2187},"indent":[]}}],"position":{"start":{"line":101,"column":1,"offset":2145},"end":{"line":102,"column":29,"offset":2187},"indent":[1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"xv6 usage example","position":{"start":{"line":104,"column":5,"offset":2193},"end":{"line":104,"column":22,"offset":2210},"indent":[]}}],"position":{"start":{"line":104,"column":1,"offset":2189},"end":{"line":104,"column":22,"offset":2210},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"我们来看一个xv6里面的例子，","position":{"start":{"line":106,"column":1,"offset":2212},"end":{"line":106,"column":16,"offset":2227},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">iderw</code>","position":{"start":{"line":106,"column":16,"offset":2227},"end":{"line":106,"column":23,"offset":2234},"indent":[]}},{"type":"text","value":"和","position":{"start":{"line":106,"column":23,"offset":2234},"end":{"line":106,"column":24,"offset":2235},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">ideintr</code>","position":{"start":{"line":106,"column":24,"offset":2235},"end":{"line":106,"column":33,"offset":2244},"indent":[]}},{"type":"text","value":"。这里IDE指Integrated Drive Electronics，可以理解成和硬盘的接口。","position":{"start":{"line":106,"column":33,"offset":2244},"end":{"line":106,"column":81,"offset":2292},"indent":[]}}],"position":{"start":{"line":106,"column":1,"offset":2212},"end":{"line":106,"column":81,"offset":2292},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"在看这两个函数之前，需要清楚","position":{"start":{"line":108,"column":1,"offset":2294},"end":{"line":108,"column":15,"offset":2308},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">ide.c</code>","position":{"start":{"line":108,"column":15,"offset":2308},"end":{"line":108,"column":22,"offset":2315},"indent":[]}},{"type":"text","value":"中最重要的一个变量是","position":{"start":{"line":108,"column":22,"offset":2315},"end":{"line":108,"column":32,"offset":2325},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">idequeue</code>","position":{"start":{"line":108,"column":32,"offset":2325},"end":{"line":108,"column":42,"offset":2335},"indent":[]}},{"type":"text","value":"，其保存了当前在处理的buffer queue，就是说会先处理","position":{"start":{"line":108,"column":42,"offset":2335},"end":{"line":108,"column":73,"offset":2366},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">idequeue</code>","position":{"start":{"line":108,"column":73,"offset":2366},"end":{"line":108,"column":83,"offset":2376},"indent":[]}},{"type":"text","value":"对应的buffer，之后是","position":{"start":{"line":108,"column":83,"offset":2376},"end":{"line":108,"column":96,"offset":2389},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">idequeue-&gt;qnext</code>","position":{"start":{"line":108,"column":96,"offset":2389},"end":{"line":108,"column":113,"offset":2406},"indent":[]}},{"type":"text","value":"的，一次类推。在在使用这个队列的时候不许要hold ","position":{"start":{"line":108,"column":113,"offset":2406},"end":{"line":108,"column":139,"offset":2432},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">idelock</code>","position":{"start":{"line":108,"column":139,"offset":2432},"end":{"line":108,"column":148,"offset":2441},"indent":[]}},{"type":"text","value":"。","position":{"start":{"line":108,"column":148,"offset":2441},"end":{"line":108,"column":149,"offset":2442},"indent":[]}}],"position":{"start":{"line":108,"column":1,"offset":2294},"end":{"line":108,"column":149,"offset":2442},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"下面我们来看这两个函数，","position":{"start":{"line":110,"column":1,"offset":2444},"end":{"line":110,"column":13,"offset":2456},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">iderw</code>","position":{"start":{"line":110,"column":13,"offset":2456},"end":{"line":110,"column":20,"offset":2463},"indent":[]}},{"type":"text","value":"表示对buffer进行读写处理。","position":{"start":{"line":110,"column":20,"offset":2463},"end":{"line":110,"column":36,"offset":2479},"indent":[]}}],"position":{"start":{"line":110,"column":1,"offset":2444},"end":{"line":110,"column":36,"offset":2479},"indent":[]}},{"type":"html","lang":"c","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\"><span class=\"token comment\">// Sync buf with disk.</span>\n<span class=\"token comment\">// If B_DIRTY is set, write buf to disk, clear B_DIRTY, set B_VALID.</span>\n<span class=\"token comment\">// Else if B_VALID is not set, read buf from disk, set B_VALID.</span>\n<span class=\"token keyword\">void</span>\n<span class=\"token function\">iderw</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">struct</span> <span class=\"token class-name\">buf</span> <span class=\"token operator\">*</span>b<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">struct</span> <span class=\"token class-name\">buf</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span>pp<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">holdingsleep</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>b<span class=\"token operator\">-></span>lock<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token function\">panic</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"iderw: buf not locked\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>b<span class=\"token operator\">-></span>flags <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">(</span>B_VALID<span class=\"token operator\">|</span>B_DIRTY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> B_VALID<span class=\"token punctuation\">)</span>\n    <span class=\"token function\">panic</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"iderw: nothing to do\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>b<span class=\"token operator\">-></span>dev <span class=\"token operator\">!=</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>havedisk1<span class=\"token punctuation\">)</span>\n    <span class=\"token function\">panic</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"iderw: ide disk 1 not present\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">acquire</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>idelock<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//DOC:acquire-lock</span>\n\n  <span class=\"token comment\">// Append b to idequeue.</span>\n  b<span class=\"token operator\">-></span>qnext <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>pp<span class=\"token operator\">=</span><span class=\"token operator\">&amp;</span>idequeue<span class=\"token punctuation\">;</span> <span class=\"token operator\">*</span>pp<span class=\"token punctuation\">;</span> pp<span class=\"token operator\">=</span><span class=\"token operator\">&amp;</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>pp<span class=\"token punctuation\">)</span><span class=\"token operator\">-></span>qnext<span class=\"token punctuation\">)</span>  <span class=\"token comment\">//DOC:insert-queue</span>\n    <span class=\"token punctuation\">;</span>\n  <span class=\"token operator\">*</span>pp <span class=\"token operator\">=</span> b<span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Start disk if necessary.</span>\n  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>idequeue <span class=\"token operator\">==</span> b<span class=\"token punctuation\">)</span>\n    <span class=\"token function\">idestart</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Wait for request to finish.</span>\n  <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>b<span class=\"token operator\">-></span>flags <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">(</span>B_VALID<span class=\"token operator\">|</span>B_DIRTY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> B_VALID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>idelock<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">release</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>idelock<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":112,"column":1,"offset":2481},"end":{"line":146,"column":4,"offset":3290},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"就是把","position":{"start":{"line":148,"column":1,"offset":3292},"end":{"line":148,"column":4,"offset":3295},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">buf *b</code>","position":{"start":{"line":148,"column":4,"offset":3295},"end":{"line":148,"column":12,"offset":3303},"indent":[]}},{"type":"text","value":"放在","position":{"start":{"line":148,"column":12,"offset":3303},"end":{"line":148,"column":14,"offset":3305},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">idequeue</code>","position":{"start":{"line":148,"column":14,"offset":3305},"end":{"line":148,"column":24,"offset":3315},"indent":[]}},{"type":"text","value":"的最后面，如果不能马上处理这个buffer，就","position":{"start":{"line":148,"column":24,"offset":3315},"end":{"line":148,"column":47,"offset":3338},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">sleep</code>","position":{"start":{"line":148,"column":47,"offset":3338},"end":{"line":148,"column":54,"offset":3345},"indent":[]}},{"type":"text","value":"，用的锁是","position":{"start":{"line":148,"column":54,"offset":3345},"end":{"line":148,"column":59,"offset":3350},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">idelock</code>","position":{"start":{"line":148,"column":59,"offset":3350},"end":{"line":148,"column":68,"offset":3359},"indent":[]}},{"type":"text","value":"，channel是","position":{"start":{"line":148,"column":68,"offset":3359},"end":{"line":148,"column":77,"offset":3368},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">b</code>","position":{"start":{"line":148,"column":77,"offset":3368},"end":{"line":148,"column":80,"offset":3371},"indent":[]}},{"type":"text","value":"。注意这里就用了前面说到的循环。","position":{"start":{"line":148,"column":80,"offset":3371},"end":{"line":148,"column":96,"offset":3387},"indent":[]}}],"position":{"start":{"line":148,"column":1,"offset":3292},"end":{"line":148,"column":96,"offset":3387},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"当disk read完成了的时候就会调用","position":{"start":{"line":150,"column":1,"offset":3389},"end":{"line":150,"column":21,"offset":3409},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">ideintr</code>","position":{"start":{"line":150,"column":21,"offset":3409},"end":{"line":150,"column":30,"offset":3418},"indent":[]}},{"type":"text","value":"。","position":{"start":{"line":150,"column":30,"offset":3418},"end":{"line":150,"column":31,"offset":3419},"indent":[]}}],"position":{"start":{"line":150,"column":1,"offset":3389},"end":{"line":150,"column":31,"offset":3419},"indent":[]}},{"type":"html","lang":"c","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\"><span class=\"token comment\">// Interrupt handler.</span>\n<span class=\"token keyword\">void</span>\n<span class=\"token function\">ideintr</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">struct</span> <span class=\"token class-name\">buf</span> <span class=\"token operator\">*</span>b<span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// First queued buffer is the active request.</span>\n  <span class=\"token function\">acquire</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>idelock<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>b <span class=\"token operator\">=</span> idequeue<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token function\">release</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>idelock<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  idequeue <span class=\"token operator\">=</span> b<span class=\"token operator\">-></span>qnext<span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Read data if needed.</span>\n  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span>b<span class=\"token operator\">-></span>flags <span class=\"token operator\">&amp;</span> B_DIRTY<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">idewait</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n    <span class=\"token function\">insl</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x1f0</span><span class=\"token punctuation\">,</span> b<span class=\"token operator\">-></span>data<span class=\"token punctuation\">,</span> BSIZE<span class=\"token operator\">/</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Wake process waiting for this buf.</span>\n  b<span class=\"token operator\">-></span>flags <span class=\"token operator\">|=</span> B_VALID<span class=\"token punctuation\">;</span>\n  b<span class=\"token operator\">-></span>flags <span class=\"token operator\">&amp;=</span> <span class=\"token operator\">~</span>B_DIRTY<span class=\"token punctuation\">;</span>\n  <span class=\"token function\">wakeup</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Start disk on next buf in queue.</span>\n  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>idequeue <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n    <span class=\"token function\">idestart</span><span class=\"token punctuation\">(</span>idequeue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">release</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>idelock<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":152,"column":1,"offset":3421},"end":{"line":183,"column":4,"offset":3966},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"就是把读写完的东西处理完之后调用","position":{"start":{"line":185,"column":1,"offset":3968},"end":{"line":185,"column":17,"offset":3984},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">wakeup(b)</code>","position":{"start":{"line":185,"column":17,"offset":3984},"end":{"line":185,"column":28,"offset":3995},"indent":[]}},{"type":"text","value":"。","position":{"start":{"line":185,"column":28,"offset":3995},"end":{"line":185,"column":29,"offset":3996},"indent":[]}}],"position":{"start":{"line":185,"column":1,"offset":3968},"end":{"line":185,"column":29,"offset":3996},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"lost wakeup","position":{"start":{"line":187,"column":5,"offset":4002},"end":{"line":187,"column":16,"offset":4013},"indent":[]}}],"position":{"start":{"line":187,"column":1,"offset":3998},"end":{"line":187,"column":16,"offset":4013},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"如果","position":{"start":{"line":189,"column":1,"offset":4015},"end":{"line":189,"column":3,"offset":4017},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">iderw</code>","position":{"start":{"line":189,"column":3,"offset":4017},"end":{"line":189,"column":10,"offset":4024},"indent":[]}},{"type":"text","value":"在调用","position":{"start":{"line":189,"column":10,"offset":4024},"end":{"line":189,"column":13,"offset":4027},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">sleep</code>","position":{"start":{"line":189,"column":13,"offset":4027},"end":{"line":189,"column":20,"offset":4034},"indent":[]}},{"type":"text","value":"之前私自释放了","position":{"start":{"line":189,"column":20,"offset":4034},"end":{"line":189,"column":27,"offset":4041},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">idelock</code>","position":{"start":{"line":189,"column":27,"offset":4041},"end":{"line":189,"column":36,"offset":4050},"indent":[]}},{"type":"text","value":"，那么在","position":{"start":{"line":189,"column":36,"offset":4050},"end":{"line":189,"column":40,"offset":4054},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">sleep</code>","position":{"start":{"line":189,"column":40,"offset":4054},"end":{"line":189,"column":47,"offset":4061},"indent":[]}},{"type":"text","value":"之前，就有可能调用了","position":{"start":{"line":189,"column":47,"offset":4061},"end":{"line":189,"column":57,"offset":4071},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">ideintr</code>","position":{"start":{"line":189,"column":57,"offset":4071},"end":{"line":189,"column":66,"offset":4080},"indent":[]}},{"type":"text","value":"，调用","position":{"start":{"line":189,"column":66,"offset":4080},"end":{"line":189,"column":69,"offset":4083},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">sleep</code>","position":{"start":{"line":189,"column":69,"offset":4083},"end":{"line":189,"column":76,"offset":4090},"indent":[]}},{"type":"text","value":"之后就不会有","position":{"start":{"line":189,"column":76,"offset":4090},"end":{"line":189,"column":82,"offset":4096},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">wakeup</code>","position":{"start":{"line":189,"column":82,"offset":4096},"end":{"line":189,"column":90,"offset":4104},"indent":[]}},{"type":"text","value":"了，这就导致了\"lost wakeup\"。","position":{"start":{"line":189,"column":90,"offset":4104},"end":{"line":189,"column":111,"offset":4125},"indent":[]}}],"position":{"start":{"line":189,"column":1,"offset":4015},"end":{"line":189,"column":111,"offset":4125},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"xv6 lost wakeup solution","position":{"start":{"line":191,"column":5,"offset":4131},"end":{"line":191,"column":29,"offset":4155},"indent":[]}}],"position":{"start":{"line":191,"column":1,"offset":4127},"end":{"line":191,"column":29,"offset":4155},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"目标：","position":{"start":{"line":193,"column":1,"offset":4157},"end":{"line":193,"column":4,"offset":4160},"indent":[]}}],"position":{"start":{"line":193,"column":1,"offset":4157},"end":{"line":193,"column":4,"offset":4160},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"对于","position":{"start":{"line":195,"column":3,"offset":4164},"end":{"line":195,"column":5,"offset":4166},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">sleep</code>","position":{"start":{"line":195,"column":5,"offset":4166},"end":{"line":195,"column":12,"offset":4173},"indent":[]}},{"type":"text","value":"的循环，不要在释放条件锁和","position":{"start":{"line":195,"column":12,"offset":4173},"end":{"line":195,"column":25,"offset":4186},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">p-&gt;state = SLEEPING</code>","position":{"start":{"line":195,"column":25,"offset":4186},"end":{"line":195,"column":46,"offset":4207},"indent":[]}},{"type":"text","value":"之间调用","position":{"start":{"line":195,"column":46,"offset":4207},"end":{"line":195,"column":50,"offset":4211},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">wakeup</code>","position":{"start":{"line":195,"column":50,"offset":4211},"end":{"line":195,"column":58,"offset":4219},"indent":[]}},{"type":"text","value":"。","position":{"start":{"line":195,"column":58,"offset":4219},"end":{"line":195,"column":59,"offset":4220},"indent":[]}}],"position":{"start":{"line":195,"column":3,"offset":4164},"end":{"line":195,"column":59,"offset":4220},"indent":[]}}],"position":{"start":{"line":195,"column":1,"offset":4162},"end":{"line":195,"column":59,"offset":4220},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"在","position":{"start":{"line":196,"column":3,"offset":4223},"end":{"line":196,"column":4,"offset":4224},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">SLEEPING</code>","position":{"start":{"line":196,"column":4,"offset":4224},"end":{"line":196,"column":14,"offset":4234},"indent":[]}},{"type":"text","value":"状态下释放condition lock","position":{"start":{"line":196,"column":14,"offset":4234},"end":{"line":196,"column":33,"offset":4253},"indent":[]}}],"position":{"start":{"line":196,"column":3,"offset":4223},"end":{"line":196,"column":33,"offset":4253},"indent":[]}}],"position":{"start":{"line":196,"column":1,"offset":4221},"end":{"line":196,"column":33,"offset":4253},"indent":[]}}],"position":{"start":{"line":195,"column":1,"offset":4162},"end":{"line":196,"column":33,"offset":4253},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"xv6的策略：","position":{"start":{"line":198,"column":1,"offset":4255},"end":{"line":198,"column":8,"offset":4262},"indent":[]}}],"position":{"start":{"line":198,"column":1,"offset":4255},"end":{"line":198,"column":8,"offset":4262},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">wakeup</code>","position":{"start":{"line":200,"column":3,"offset":4266},"end":{"line":200,"column":11,"offset":4274},"indent":[]}},{"type":"text","value":"要hold ","position":{"start":{"line":200,"column":11,"offset":4274},"end":{"line":200,"column":17,"offset":4280},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">ptable.lock</code>","position":{"start":{"line":200,"column":17,"offset":4280},"end":{"line":200,"column":30,"offset":4293},"indent":[]}},{"type":"text","value":"和条件锁。","position":{"start":{"line":200,"column":30,"offset":4293},"end":{"line":200,"column":35,"offset":4298},"indent":[]}}],"position":{"start":{"line":200,"column":3,"offset":4266},"end":{"line":200,"column":35,"offset":4298},"indent":[]}}],"position":{"start":{"line":200,"column":1,"offset":4264},"end":{"line":200,"column":35,"offset":4298},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"sleeper任何时候都hold  ","position":{"start":{"line":201,"column":3,"offset":4301},"end":{"line":201,"column":21,"offset":4319},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">ptable.lock</code>","position":{"start":{"line":201,"column":21,"offset":4319},"end":{"line":201,"column":34,"offset":4332},"indent":[]}},{"type":"text","value":"或条件锁","position":{"start":{"line":201,"column":34,"offset":4332},"end":{"line":201,"column":38,"offset":4336},"indent":[]}}],"position":{"start":{"line":201,"column":3,"offset":4301},"end":{"line":201,"column":38,"offset":4336},"indent":[]}}],"position":{"start":{"line":201,"column":1,"offset":4299},"end":{"line":201,"column":38,"offset":4336},"indent":[]}}],"position":{"start":{"line":200,"column":1,"offset":4264},"end":{"line":201,"column":38,"offset":4336},"indent":[1]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  diagram:\n    |----idelock----|\n                  |---ptable.lock---|\n                                     |----idelock----|\n                                      |-ptable.lock-|</code></pre></div>","position":{"start":{"line":203,"column":1,"offset":4338},"end":{"line":209,"column":4,"offset":4525},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"从而让这两个东西不能同时运行。这也是为什么需要","position":{"start":{"line":211,"column":1,"offset":4527},"end":{"line":211,"column":24,"offset":4550},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">sleep</code>","position":{"start":{"line":211,"column":24,"offset":4550},"end":{"line":211,"column":31,"offset":4557},"indent":[]}},{"type":"text","value":"有一个lock argument。","position":{"start":{"line":211,"column":31,"offset":4557},"end":{"line":211,"column":48,"offset":4574},"indent":[]}}],"position":{"start":{"line":211,"column":1,"offset":4527},"end":{"line":211,"column":48,"offset":4574},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"人们还发明了不少sequence coordination primitives，它们都需要解决wakeup problem。如：","position":{"start":{"line":213,"column":1,"offset":4576},"end":{"line":213,"column":66,"offset":4641},"indent":[]}}],"position":{"start":{"line":213,"column":1,"offset":4576},"end":{"line":213,"column":66,"offset":4641},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"condition variables (similar to sleep/wakeup)","position":{"start":{"line":215,"column":3,"offset":4645},"end":{"line":215,"column":48,"offset":4690},"indent":[]}}],"position":{"start":{"line":215,"column":3,"offset":4645},"end":{"line":215,"column":48,"offset":4690},"indent":[]}}],"position":{"start":{"line":215,"column":1,"offset":4643},"end":{"line":215,"column":48,"offset":4690},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"counting semaphores","position":{"start":{"line":216,"column":3,"offset":4693},"end":{"line":216,"column":22,"offset":4712},"indent":[]}}],"position":{"start":{"line":216,"column":3,"offset":4693},"end":{"line":216,"column":22,"offset":4712},"indent":[]}}],"position":{"start":{"line":216,"column":1,"offset":4691},"end":{"line":216,"column":22,"offset":4712},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"wait queue (linux kernel)","position":{"start":{"line":217,"column":3,"offset":4715},"end":{"line":217,"column":28,"offset":4740},"indent":[]}}],"position":{"start":{"line":217,"column":3,"offset":4715},"end":{"line":217,"column":28,"offset":4740},"indent":[]}}],"position":{"start":{"line":217,"column":1,"offset":4713},"end":{"line":217,"column":28,"offset":4740},"indent":[]}}],"position":{"start":{"line":215,"column":1,"offset":4643},"end":{"line":217,"column":28,"offset":4740},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"another xv6 usage example","position":{"start":{"line":219,"column":5,"offset":4746},"end":{"line":219,"column":30,"offset":4771},"indent":[]}}],"position":{"start":{"line":219,"column":1,"offset":4742},"end":{"line":219,"column":30,"offset":4771},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"除了上面IDE的例子，另外一个使用了sleep & wakeup的是","position":{"start":{"line":221,"column":1,"offset":4773},"end":{"line":221,"column":35,"offset":4807},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">pipe</code>","position":{"start":{"line":221,"column":35,"offset":4807},"end":{"line":221,"column":41,"offset":4813},"indent":[]}},{"type":"text","value":"。我们在","position":{"start":{"line":221,"column":41,"offset":4813},"end":{"line":221,"column":45,"offset":4817},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">shell</code>","position":{"start":{"line":221,"column":45,"offset":4817},"end":{"line":221,"column":52,"offset":4824},"indent":[]}},{"type":"text","value":"的那次作业中使用过其接口，现在来看看其内部是如何实现的。","position":{"start":{"line":221,"column":52,"offset":4824},"end":{"line":221,"column":80,"offset":4852},"indent":[]}}],"position":{"start":{"line":221,"column":1,"offset":4773},"end":{"line":221,"column":80,"offset":4852},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"一个pipe的数据结构是这样的：","position":{"start":{"line":223,"column":1,"offset":4854},"end":{"line":223,"column":17,"offset":4870},"indent":[]}}],"position":{"start":{"line":223,"column":1,"offset":4854},"end":{"line":223,"column":17,"offset":4870},"indent":[]}},{"type":"html","lang":"c","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\"><span class=\"token keyword\">struct</span> <span class=\"token class-name\">pipe</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">struct</span> <span class=\"token class-name\">spinlock</span> lock<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">char</span> data<span class=\"token punctuation\">[</span>PIPESIZE<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  uint nread<span class=\"token punctuation\">;</span>     <span class=\"token comment\">// number of bytes read</span>\n  uint nwrite<span class=\"token punctuation\">;</span>    <span class=\"token comment\">// number of bytes written</span>\n  <span class=\"token keyword\">int</span> readopen<span class=\"token punctuation\">;</span>   <span class=\"token comment\">// read fd is still open</span>\n  <span class=\"token keyword\">int</span> writeopen<span class=\"token punctuation\">;</span>  <span class=\"token comment\">// write fd is still open</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":225,"column":1,"offset":4872},"end":{"line":234,"column":4,"offset":5118},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"我们直接来看","position":{"start":{"line":236,"column":1,"offset":5120},"end":{"line":236,"column":7,"offset":5126},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">piperead</code>","position":{"start":{"line":236,"column":7,"offset":5126},"end":{"line":236,"column":17,"offset":5136},"indent":[]}},{"type":"text","value":"和","position":{"start":{"line":236,"column":17,"offset":5136},"end":{"line":236,"column":18,"offset":5137},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">pipewrite</code>","position":{"start":{"line":236,"column":18,"offset":5137},"end":{"line":236,"column":29,"offset":5148},"indent":[]}},{"type":"text","value":":","position":{"start":{"line":236,"column":29,"offset":5148},"end":{"line":236,"column":30,"offset":5149},"indent":[]}}],"position":{"start":{"line":236,"column":1,"offset":5120},"end":{"line":236,"column":30,"offset":5149},"indent":[]}},{"type":"html","lang":"c","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\"><span class=\"token keyword\">int</span>\n<span class=\"token function\">pipewrite</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">struct</span> <span class=\"token class-name\">pipe</span> <span class=\"token operator\">*</span>p<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>addr<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">int</span> i<span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">acquire</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>p<span class=\"token operator\">-></span>lock<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>p<span class=\"token operator\">-></span>nwrite <span class=\"token operator\">==</span> p<span class=\"token operator\">-></span>nread <span class=\"token operator\">+</span> PIPESIZE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>  <span class=\"token comment\">//DOC: pipewrite-full</span>\n      <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>p<span class=\"token operator\">-></span>readopen <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> <span class=\"token function\">myproc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span>killed<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token function\">release</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>p<span class=\"token operator\">-></span>lock<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n      <span class=\"token function\">wakeup</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>p<span class=\"token operator\">-></span>nread<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>p<span class=\"token operator\">-></span>nwrite<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>p<span class=\"token operator\">-></span>lock<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//DOC: pipewrite-sleep</span>\n    <span class=\"token punctuation\">}</span>\n    p<span class=\"token operator\">-></span>data<span class=\"token punctuation\">[</span>p<span class=\"token operator\">-></span>nwrite<span class=\"token operator\">++</span> <span class=\"token operator\">%</span> PIPESIZE<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> addr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">wakeup</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>p<span class=\"token operator\">-></span>nread<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//DOC: pipewrite-wakeup1</span>\n  <span class=\"token function\">release</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>p<span class=\"token operator\">-></span>lock<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> n<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">int</span>\n<span class=\"token function\">piperead</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">struct</span> <span class=\"token class-name\">pipe</span> <span class=\"token operator\">*</span>p<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>addr<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">int</span> i<span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">acquire</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>p<span class=\"token operator\">-></span>lock<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>p<span class=\"token operator\">-></span>nread <span class=\"token operator\">==</span> p<span class=\"token operator\">-></span>nwrite <span class=\"token operator\">&amp;&amp;</span> p<span class=\"token operator\">-></span>writeopen<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>  <span class=\"token comment\">//DOC: pipe-empty</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">myproc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span>killed<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n      <span class=\"token function\">release</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>p<span class=\"token operator\">-></span>lock<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>p<span class=\"token operator\">-></span>nread<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>p<span class=\"token operator\">-></span>lock<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//DOC: piperead-sleep</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>  <span class=\"token comment\">//DOC: piperead-copy</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>p<span class=\"token operator\">-></span>nread <span class=\"token operator\">==</span> p<span class=\"token operator\">-></span>nwrite<span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n    addr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> p<span class=\"token operator\">-></span>data<span class=\"token punctuation\">[</span>p<span class=\"token operator\">-></span>nread<span class=\"token operator\">++</span> <span class=\"token operator\">%</span> PIPESIZE<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">wakeup</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>p<span class=\"token operator\">-></span>nwrite<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//DOC: piperead-wakeup</span>\n  <span class=\"token function\">release</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>p<span class=\"token operator\">-></span>lock<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> i<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":238,"column":1,"offset":5151},"end":{"line":281,"column":4,"offset":6161},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"感觉就是一个1 writer 1 reader的writer reader problem。通过","position":{"start":{"line":283,"column":1,"offset":6163},"end":{"line":283,"column":49,"offset":6211},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">sleep</code>","position":{"start":{"line":283,"column":49,"offset":6211},"end":{"line":283,"column":56,"offset":6218},"indent":[]}},{"type":"text","value":"和","position":{"start":{"line":283,"column":56,"offset":6218},"end":{"line":283,"column":57,"offset":6219},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">wakeup</code>","position":{"start":{"line":283,"column":57,"offset":6219},"end":{"line":283,"column":65,"offset":6227},"indent":[]}},{"type":"text","value":"实现需要的blocking。","position":{"start":{"line":283,"column":65,"offset":6227},"end":{"line":283,"column":79,"offset":6241},"indent":[]}}],"position":{"start":{"line":283,"column":1,"offset":6163},"end":{"line":283,"column":79,"offset":6241},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"注意这里的","position":{"start":{"line":285,"column":1,"offset":6243},"end":{"line":285,"column":6,"offset":6248},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">sleep</code>","position":{"start":{"line":285,"column":6,"offset":6248},"end":{"line":285,"column":13,"offset":6255},"indent":[]}},{"type":"text","value":"对应的channel，以及在","position":{"start":{"line":285,"column":13,"offset":6255},"end":{"line":285,"column":27,"offset":6269},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">piperead</code>","position":{"start":{"line":285,"column":27,"offset":6269},"end":{"line":285,"column":37,"offset":6279},"indent":[]}},{"type":"text","value":"的最后仍然是要","position":{"start":{"line":285,"column":37,"offset":6279},"end":{"line":285,"column":44,"offset":6286},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">wakeup(&amp;p-&gt;nwrite)</code>","position":{"start":{"line":285,"column":44,"offset":6286},"end":{"line":285,"column":64,"offset":6306},"indent":[]}},{"type":"text","value":"的。这是因为在读之前有可能","position":{"start":{"line":285,"column":64,"offset":6306},"end":{"line":285,"column":77,"offset":6319},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">p-&gt;data</code>","position":{"start":{"line":285,"column":77,"offset":6319},"end":{"line":285,"column":86,"offset":6328},"indent":[]}},{"type":"text","value":"满了，从而write运行了","position":{"start":{"line":285,"column":86,"offset":6328},"end":{"line":285,"column":99,"offset":6341},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">sleep</code>","position":{"start":{"line":285,"column":99,"offset":6341},"end":{"line":285,"column":106,"offset":6348},"indent":[]}},{"type":"text","value":"，读了一点之后就可以继续写入了，需要唤醒。","position":{"start":{"line":285,"column":106,"offset":6348},"end":{"line":285,"column":127,"offset":6369},"indent":[]}}],"position":{"start":{"line":285,"column":1,"offset":6243},"end":{"line":285,"column":127,"offset":6369},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"terminate sleeping thread","position":{"start":{"line":287,"column":5,"offset":6375},"end":{"line":287,"column":30,"offset":6400},"indent":[]}}],"position":{"start":{"line":287,"column":1,"offset":6371},"end":{"line":287,"column":30,"offset":6400},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"如果要","position":{"start":{"line":289,"column":1,"offset":6402},"end":{"line":289,"column":4,"offset":6405},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">kill</code>","position":{"start":{"line":289,"column":4,"offset":6405},"end":{"line":289,"column":10,"offset":6411},"indent":[]}},{"type":"text","value":"一个sleeping的thread，用上一讲提到的给这个进程加一个","position":{"start":{"line":289,"column":10,"offset":6411},"end":{"line":289,"column":43,"offset":6444},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">p-&gt;kill</code>","position":{"start":{"line":289,"column":43,"offset":6444},"end":{"line":289,"column":52,"offset":6453},"indent":[]}},{"type":"text","value":"的flag，等其唤醒之后进入中断来自己销毁是不合理的，因为进程可能要很久之后才能被唤醒。","position":{"start":{"line":289,"column":52,"offset":6453},"end":{"line":289,"column":96,"offset":6497},"indent":[]}}],"position":{"start":{"line":289,"column":1,"offset":6402},"end":{"line":289,"column":96,"offset":6497},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"xv6 terminate sleeping thread solution","position":{"start":{"line":291,"column":5,"offset":6503},"end":{"line":291,"column":43,"offset":6541},"indent":[]}}],"position":{"start":{"line":291,"column":1,"offset":6499},"end":{"line":291,"column":43,"offset":6541},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"在","position":{"start":{"line":293,"column":1,"offset":6543},"end":{"line":293,"column":2,"offset":6544},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">kill</code>","position":{"start":{"line":293,"column":2,"offset":6544},"end":{"line":293,"column":8,"offset":6550},"indent":[]}},{"type":"text","value":"的时候，把所有的","position":{"start":{"line":293,"column":8,"offset":6550},"end":{"line":293,"column":16,"offset":6558},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">SLEEPING</code>","position":{"start":{"line":293,"column":16,"offset":6558},"end":{"line":293,"column":26,"offset":6568},"indent":[]}},{"type":"text","value":"都标记成","position":{"start":{"line":293,"column":26,"offset":6568},"end":{"line":293,"column":30,"offset":6572},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">RUNNABLE</code>","position":{"start":{"line":293,"column":30,"offset":6572},"end":{"line":293,"column":40,"offset":6582},"indent":[]}},{"type":"text","value":"，也就是把他们都唤醒。","position":{"start":{"line":293,"column":40,"offset":6582},"end":{"line":293,"column":51,"offset":6593},"indent":[]}}],"position":{"start":{"line":293,"column":1,"offset":6543},"end":{"line":293,"column":51,"offset":6593},"indent":[]}},{"type":"html","lang":"c","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\"><span class=\"token comment\">// Kill the process with the given pid.</span>\n<span class=\"token comment\">// Process won't exit until it returns</span>\n<span class=\"token comment\">// to user space (see trap in trap.c).</span>\n<span class=\"token keyword\">int</span>\n<span class=\"token function\">kill</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> pid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">struct</span> <span class=\"token class-name\">proc</span> <span class=\"token operator\">*</span>p<span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">acquire</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>ptable<span class=\"token punctuation\">.</span>lock<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>p <span class=\"token operator\">=</span> ptable<span class=\"token punctuation\">.</span>proc<span class=\"token punctuation\">;</span> p <span class=\"token operator\">&lt;</span> <span class=\"token operator\">&amp;</span>ptable<span class=\"token punctuation\">.</span>proc<span class=\"token punctuation\">[</span>NPROC<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> p<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>p<span class=\"token operator\">-></span>pid <span class=\"token operator\">==</span> pid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n      p<span class=\"token operator\">-></span>killed <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">// Wake process from sleep if necessary.</span>\n      <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>p<span class=\"token operator\">-></span>state <span class=\"token operator\">==</span> SLEEPING<span class=\"token punctuation\">)</span>\n        p<span class=\"token operator\">-></span>state <span class=\"token operator\">=</span> RUNNABLE<span class=\"token punctuation\">;</span>\n      <span class=\"token function\">release</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>ptable<span class=\"token punctuation\">.</span>lock<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">release</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>ptable<span class=\"token punctuation\">.</span>lock<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":295,"column":1,"offset":6595},"end":{"line":317,"column":4,"offset":7084},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"但是注意","position":{"start":{"line":319,"column":1,"offset":7086},"end":{"line":319,"column":5,"offset":7090},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">sleep</code>","position":{"start":{"line":319,"column":5,"offset":7090},"end":{"line":319,"column":12,"offset":7097},"indent":[]}},{"type":"text","value":"往往是在一个循环里的，有的函数在循环里面就检查了","position":{"start":{"line":319,"column":12,"offset":7097},"end":{"line":319,"column":36,"offset":7121},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">p-&gt;kill</code>","position":{"start":{"line":319,"column":36,"offset":7121},"end":{"line":319,"column":45,"offset":7130},"indent":[]}},{"type":"text","value":"从而进行销毁，如","position":{"start":{"line":319,"column":45,"offset":7130},"end":{"line":319,"column":53,"offset":7138},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">piperead</code>","position":{"start":{"line":319,"column":53,"offset":7138},"end":{"line":319,"column":63,"offset":7148},"indent":[]}},{"type":"text","value":"这是方便的，但是有的则不检查，如","position":{"start":{"line":319,"column":63,"offset":7148},"end":{"line":319,"column":79,"offset":7164},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">iderw</code>","position":{"start":{"line":319,"column":79,"offset":7164},"end":{"line":319,"column":86,"offset":7171},"indent":[]}},{"type":"text","value":"，不检查的就会继续一段时间直到其进入中断了，如","position":{"start":{"line":319,"column":86,"offset":7171},"end":{"line":319,"column":109,"offset":7194},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">iderw</code>","position":{"start":{"line":319,"column":109,"offset":7194},"end":{"line":319,"column":116,"offset":7201},"indent":[]}},{"type":"text","value":"会至少执行到system call结束。","position":{"start":{"line":319,"column":116,"offset":7201},"end":{"line":319,"column":136,"offset":7221},"indent":[]}}],"position":{"start":{"line":319,"column":1,"offset":7086},"end":{"line":319,"column":136,"offset":7221},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":true,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"为什么","position":{"start":{"line":321,"column":3,"offset":7225},"end":{"line":321,"column":6,"offset":7228},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">iderw</code>","position":{"start":{"line":321,"column":6,"offset":7228},"end":{"line":321,"column":13,"offset":7235},"indent":[]}},{"type":"text","value":"不检查","position":{"start":{"line":321,"column":13,"offset":7235},"end":{"line":321,"column":16,"offset":7238},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">p-&gt;kill</code>","position":{"start":{"line":321,"column":16,"offset":7238},"end":{"line":321,"column":25,"offset":7247},"indent":[]}},{"type":"text","value":"？","position":{"start":{"line":321,"column":25,"offset":7247},"end":{"line":321,"column":26,"offset":7248},"indent":[]}}],"position":{"start":{"line":321,"column":3,"offset":7225},"end":{"line":321,"column":26,"offset":7248},"indent":[]}}],"position":{"start":{"line":321,"column":1,"offset":7223},"end":{"line":322,"column":1,"offset":7249},"indent":[1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"if reading, calling FS code expects to see data in the disk buffer!","position":{"start":{"line":323,"column":3,"offset":7252},"end":{"line":323,"column":70,"offset":7319},"indent":[]}}],"position":{"start":{"line":323,"column":3,"offset":7252},"end":{"line":323,"column":70,"offset":7319},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"if writing (or reading), might be halfway through create()","position":{"start":{"line":325,"column":3,"offset":7323},"end":{"line":325,"column":61,"offset":7381},"indent":[]}}],"position":{"start":{"line":325,"column":3,"offset":7323},"end":{"line":325,"column":61,"offset":7381},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"quitting now leaves on-disk FS inconsistent. （这里没太明白...）","position":{"start":{"line":327,"column":3,"offset":7385},"end":{"line":327,"column":59,"offset":7441},"indent":[]}}],"position":{"start":{"line":327,"column":3,"offset":7385},"end":{"line":327,"column":59,"offset":7441},"indent":[]}}],"position":{"start":{"line":323,"column":1,"offset":7250},"end":{"line":327,"column":59,"offset":7441},"indent":[1,1,1,1]}}],"position":{"start":{"line":321,"column":1,"offset":7223},"end":{"line":327,"column":59,"offset":7441},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"在xv6中，如果","position":{"start":{"line":329,"column":1,"offset":7443},"end":{"line":329,"column":9,"offset":7451},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">kill</code>","position":{"start":{"line":329,"column":9,"offset":7451},"end":{"line":329,"column":15,"offset":7457},"indent":[]}},{"type":"text","value":"的进程是user space，那么下一次有system call或者time interrupt的时候就会","position":{"start":{"line":329,"column":15,"offset":7457},"end":{"line":329,"column":68,"offset":7510},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">exit</code>","position":{"start":{"line":329,"column":68,"offset":7510},"end":{"line":329,"column":74,"offset":7516},"indent":[]}},{"type":"text","value":"。而如果target在kernel，就target就不会再执行user instruction但是可能会在kernel停留很久（kernel这部分没明白...）","position":{"start":{"line":329,"column":74,"offset":7516},"end":{"line":329,"column":154,"offset":7596},"indent":[]}}],"position":{"start":{"line":329,"column":1,"offset":7443},"end":{"line":329,"column":154,"offset":7596},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"JOS Solution","position":{"start":{"line":331,"column":5,"offset":7602},"end":{"line":331,"column":17,"offset":7614},"indent":[]}}],"position":{"start":{"line":331,"column":1,"offset":7598},"end":{"line":331,"column":17,"offset":7614},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":true,"children":[{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"lost wakeup","position":{"start":{"line":333,"column":3,"offset":7618},"end":{"line":333,"column":14,"offset":7629},"indent":[]}}],"position":{"start":{"line":333,"column":3,"offset":7618},"end":{"line":333,"column":14,"offset":7629},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"JOS在kernel中禁止了中断，所以在condition check和sleep之间不会有wakeup","position":{"start":{"line":335,"column":3,"offset":7633},"end":{"line":335,"column":55,"offset":7685},"indent":[]}}],"position":{"start":{"line":335,"column":3,"offset":7633},"end":{"line":335,"column":55,"offset":7685},"indent":[]}}],"position":{"start":{"line":333,"column":1,"offset":7616},"end":{"line":336,"column":1,"offset":7686},"indent":[1,1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"terminate while sleeping","position":{"start":{"line":337,"column":3,"offset":7689},"end":{"line":337,"column":27,"offset":7713},"indent":[]}}],"position":{"start":{"line":337,"column":3,"offset":7689},"end":{"line":337,"column":27,"offset":7713},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"JOS没有像create这样的blocking multi-step system call，因为既没有file system，也没有disk driver。","position":{"start":{"line":339,"column":3,"offset":7717},"end":{"line":339,"column":82,"offset":7796},"indent":[]}}],"position":{"start":{"line":339,"column":3,"offset":7717},"end":{"line":339,"column":82,"offset":7796},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"唯一个blocking call是IPC的","position":{"start":{"line":341,"column":3,"offset":7800},"end":{"line":341,"column":24,"offset":7821},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">recv()</code>","position":{"start":{"line":341,"column":24,"offset":7821},"end":{"line":341,"column":32,"offset":7829},"indent":[]}}],"position":{"start":{"line":341,"column":3,"offset":7800},"end":{"line":341,"column":32,"offset":7829},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"if env_destroy() is running, the target thread is not running recv() leaves env in a state where it can be safely destroyed (不明白，应该要等用到","position":{"start":{"line":343,"column":5,"offset":7835},"end":{"line":343,"column":140,"offset":7970},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">recv</code>","position":{"start":{"line":343,"column":140,"offset":7970},"end":{"line":343,"column":146,"offset":7976},"indent":[]}},{"type":"text","value":"再说吧...)","position":{"start":{"line":343,"column":146,"offset":7976},"end":{"line":343,"column":153,"offset":7983},"indent":[]}}],"position":{"start":{"line":343,"column":5,"offset":7835},"end":{"line":343,"column":153,"offset":7983},"indent":[]}}],"position":{"start":{"line":343,"column":3,"offset":7833},"end":{"line":343,"column":153,"offset":7983},"indent":[]}}],"position":{"start":{"line":343,"column":3,"offset":7833},"end":{"line":343,"column":153,"offset":7983},"indent":[]}}],"position":{"start":{"line":337,"column":1,"offset":7687},"end":{"line":343,"column":153,"offset":7983},"indent":[1,1,1,1,1,1]}}],"position":{"start":{"line":333,"column":1,"offset":7616},"end":{"line":343,"column":153,"offset":7983},"indent":[1,1,1,1,1,1,1,1,1,1]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":343,"column":153,"offset":7983}}}}