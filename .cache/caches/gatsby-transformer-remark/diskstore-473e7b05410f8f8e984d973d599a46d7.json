{"expireTime":9007200818315814000,"key":"transformer-remark-markdown-html-eb9be00f98b6d8e20afdc75e51c0ed0e-gatsby-remark-katexgatsby-remark-prismjs-","val":"<h2>Type of CORS</h2>\n<p>There are mainly two kinds for CORS. CORS for simple request and CORS for preflight request.</p>\n<h2>Simple Request</h2>\n<p>Simple request is GET request or POST request with Content-Type in one of application/x-www-form-urlencoded, multipart/form-data, text/plain. Note that the commonly used <em>application</em>/json is not simple request. Those Content-Type are exceptions due to historical legacy.</p>\n<p>For simple request we only need to add an \"Origin: <a href=\"http://api.bob.com\">http://api.bob.com</a>\" in the request header.</p>\n<blockquote>\n<div class=\"gatsby-highlight\" data-language=\"http\"><pre class=\"language-http\"><code class=\"language-http\"><span class=\"token request-line\"><span class=\"token property\">GET</span> /cors HTTP/1.1</span>\n<span class=\"token header-name keyword\">Origin:</span> http://api.bob.com\n<span class=\"token header-name keyword\">Host:</span> api.alice.com\n<span class=\"token header-name keyword\">Accept-Language:</span> en-US\n<span class=\"token header-name keyword\">Connection:</span> keep-alive\n<span class=\"token header-name keyword\">User-Agent:</span> Mozilla/5.0...</code></pre></div>\n</blockquote>\n<p> And add \"Access-Control-Allow-Origin: <a href=\"http://api.bob.com\">http://api.bob.com</a>\" in the response.</p>\n<blockquote>\n<div class=\"gatsby-highlight\" data-language=\"http\"><pre class=\"language-http\"><code class=\"language-http\"><span class=\"token header-name keyword\">Access-Control-Allow-Origin:</span> http://api.bob.com\n<span class=\"token header-name keyword\">Access-Control-Allow-Credentials:</span> true\n<span class=\"token header-name keyword\">Access-Control-Expose-Headers:</span> FooBar\n<span class=\"token header-name keyword\">Content-Type:</span> text/html; charset=utf-8</code></pre></div>\n</blockquote>\n<p>Or simply use \"Access-Control-Allow-Origin: *\" in the response.</p>\n<p>If hoping to add cookie to the request, we need to add \"withCredentials: true\" in the request and \"Access-Control-Allow-Credentials: true\" in the server. Note that when sending cookie, we cannot set \"Access-Control-Allow-Origin\" as \"*\", but the domain of client.</p>\n<h2>Preflight Request</h2>\n<p>For request other than simple request, the client will add another request as preflight request. Only when the domain of client is in the allowed list of server, the client will then send the original request to the server.</p>\n<p>The preflight request will look like this:</p>\n<blockquote>\n<div class=\"gatsby-highlight\" data-language=\"http\"><pre class=\"language-http\"><code class=\"language-http\"><span class=\"token request-line\"><span class=\"token property\">OPTIONS</span> /cors HTTP/1.1</span>\n<span class=\"token header-name keyword\">Origin:</span> http://api.bob.com\n<span class=\"token header-name keyword\">Access-Control-Request-Method:</span> PUT\n<span class=\"token header-name keyword\">Access-Control-Request-Headers:</span> X-Custom-Header\n<span class=\"token header-name keyword\">Host:</span> api.alice.com\n<span class=\"token header-name keyword\">Accept-Language:</span> en-US\n<span class=\"token header-name keyword\">Connection:</span> keep-alive\n<span class=\"token header-name keyword\">User-Agent:</span> Mozilla/5.0...</code></pre></div>\n</blockquote>\n<p>And the server will need to return status code 200 for this request. Here is an express middleware that can solve this problem nicely,</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// add header and return for OPTIONS request</span>\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">,</span> next</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    res<span class=\"token punctuation\">.</span><span class=\"token function\">header</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Access-Control-Allow-Origin'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'*'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    res<span class=\"token punctuation\">.</span><span class=\"token function\">header</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Access-Control-Allow-Methods'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'GET, PUT, POST, DELETE, OPTIONS'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    res<span class=\"token punctuation\">.</span><span class=\"token function\">header</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Access-Control-Allow-Headers'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Content-Type, Authorization, Content-Length, X-Requested-With'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">//intercepts OPTIONS method</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'OPTIONS'</span> <span class=\"token operator\">===</span> req<span class=\"token punctuation\">.</span>method<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">//respond with 200</span>\n        res<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">//move on</span>\n        <span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2>References</h2>\n<ol>\n<li><a href=\"http://www.ruanyifeng.com/blog/2016/04/cors.html\">http://www.ruanyifeng.com/blog/2016/04/cors.html</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS\">https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS</a></li>\n</ol>"}