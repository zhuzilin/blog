{"expireTime":9007200818315813000,"key":"transformer-remark-markdown-ast-8531b2a744bbf619a9d28252f2d9edf5-gatsby-remark-katexgatsby-remark-prismjs-","val":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"这次的作业应该是这几次中最简单的一次了。主要就是进行了一个有外链的哈希表的多线程插入和取值。","position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":47,"offset":47},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":47,"offset":47},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"取值部分不会进行修改，所以不用加锁。只是在插入的部分注意到：","position":{"start":{"line":4,"column":1,"offset":49},"end":{"line":4,"column":31,"offset":79},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":49},"end":{"line":4,"column":31,"offset":79},"indent":[]}},{"type":"html","lang":"c","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\"><span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> \n<span class=\"token function\">insert</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> key<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> value<span class=\"token punctuation\">,</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">entry</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span>p<span class=\"token punctuation\">,</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">entry</span> <span class=\"token operator\">*</span>n<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">struct</span> <span class=\"token class-name\">entry</span> <span class=\"token operator\">*</span>e <span class=\"token operator\">=</span> <span class=\"token function\">malloc</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">struct</span> <span class=\"token class-name\">entry</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  e<span class=\"token operator\">-></span>key <span class=\"token operator\">=</span> key<span class=\"token punctuation\">;</span>\n  e<span class=\"token operator\">-></span>value <span class=\"token operator\">=</span> value<span class=\"token punctuation\">;</span>\n  e<span class=\"token operator\">-></span>next <span class=\"token operator\">=</span> n<span class=\"token punctuation\">;</span>\n  <span class=\"token operator\">*</span>p <span class=\"token operator\">=</span> e<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":6,"column":1,"offset":81},"end":{"line":16,"column":4,"offset":279},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"注意到这里的","position":{"start":{"line":18,"column":1,"offset":281},"end":{"line":18,"column":7,"offset":287},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">p</code>","position":{"start":{"line":18,"column":7,"offset":287},"end":{"line":18,"column":10,"offset":290},"indent":[]}},{"type":"text","value":"是每个哈希值对应的链表的结尾，所以需要加锁，不然两个线程同时往一个相同的结尾插入，就会丢东西了。所以在","position":{"start":{"line":18,"column":10,"offset":290},"end":{"line":18,"column":61,"offset":341},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">main</code>","position":{"start":{"line":18,"column":61,"offset":341},"end":{"line":18,"column":67,"offset":347},"indent":[]}},{"type":"text","value":"中初始化：","position":{"start":{"line":18,"column":67,"offset":347},"end":{"line":18,"column":72,"offset":352},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":281},"end":{"line":18,"column":72,"offset":352},"indent":[]}},{"type":"html","lang":"c","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\"><span class=\"token keyword\">int</span>\n<span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> argc<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>argv<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> NBUCKET<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">pthread_mutex_init</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>lock<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":20,"column":1,"offset":354},"end":{"line":30,"column":4,"offset":485},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"然后在","position":{"start":{"line":32,"column":1,"offset":487},"end":{"line":32,"column":4,"offset":490},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">put</code>","position":{"start":{"line":32,"column":4,"offset":490},"end":{"line":32,"column":9,"offset":495},"indent":[]}},{"type":"text","value":"函数中","position":{"start":{"line":32,"column":9,"offset":495},"end":{"line":32,"column":12,"offset":498},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">insert</code>","position":{"start":{"line":32,"column":12,"offset":498},"end":{"line":32,"column":20,"offset":506},"indent":[]}},{"type":"text","value":"的两侧加锁：","position":{"start":{"line":32,"column":20,"offset":506},"end":{"line":32,"column":26,"offset":512},"indent":[]}}],"position":{"start":{"line":32,"column":1,"offset":487},"end":{"line":32,"column":26,"offset":512},"indent":[]}},{"type":"html","lang":"c","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\"><span class=\"token keyword\">static</span> \n<span class=\"token keyword\">void</span> <span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> key<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> value<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> key <span class=\"token operator\">%</span> NBUCKET<span class=\"token punctuation\">;</span>\n  <span class=\"token function\">pthread_mutex_lock</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>lock<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">insert</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>table<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> table<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">pthread_mutex_unlock</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>lock<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":34,"column":1,"offset":514},"end":{"line":43,"column":4,"offset":697},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"就大功告成了。","position":{"start":{"line":45,"column":1,"offset":699},"end":{"line":45,"column":8,"offset":706},"indent":[]}}],"position":{"start":{"line":45,"column":1,"offset":699},"end":{"line":45,"column":8,"offset":706},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"测试一下：","position":{"start":{"line":47,"column":1,"offset":708},"end":{"line":47,"column":6,"offset":713},"indent":[]}}],"position":{"start":{"line":47,"column":1,"offset":708},"end":{"line":47,"column":6,"offset":713},"indent":[]}},{"type":"html","lang":"bash","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ ./ph 1\n0: put <span class=\"token function\">time</span> <span class=\"token operator\">=</span> 0.006135\n0: get <span class=\"token function\">time</span> <span class=\"token operator\">=</span> 7.487561\n0: 0 keys missing\ncompletion <span class=\"token function\">time</span> <span class=\"token operator\">=</span> 7.493947\n$ ./ph 2\n1: put <span class=\"token function\">time</span> <span class=\"token operator\">=</span> 0.010365\n0: put <span class=\"token function\">time</span> <span class=\"token operator\">=</span> 0.010435\n1: get <span class=\"token function\">time</span> <span class=\"token operator\">=</span> 7.301592\n1: 0 keys missing\n0: get <span class=\"token function\">time</span> <span class=\"token operator\">=</span> 7.313720\n0: 0 keys missing\ncompletion <span class=\"token function\">time</span> <span class=\"token operator\">=</span> 7.324801</code></pre></div>","position":{"start":{"line":49,"column":1,"offset":715},"end":{"line":63,"column":4,"offset":990},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":65,"column":1,"offset":992}}}}