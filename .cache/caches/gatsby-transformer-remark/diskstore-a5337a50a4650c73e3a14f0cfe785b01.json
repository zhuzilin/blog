{"expireTime":9007200818315814000,"key":"transformer-remark-markdown-html-ast-d8c5396e21aa78dba2b0dbb00cb0599e-gatsby-remark-katexgatsby-remark-prismjs-","val":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"这里会记录阅读6.828课程lecture note的我的个人笔记。可能会中英混杂，不是很适合外人阅读，也请见谅。","position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":58,"offset":58}}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":58,"offset":58}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Lecture 7: Using Virtual Memory","position":{"start":{"line":4,"column":4,"offset":63},"end":{"line":4,"column":35,"offset":94}}}],"position":{"start":{"line":4,"column":1,"offset":60},"end":{"line":4,"column":35,"offset":94}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"step back: 从整个课程的角度","position":{"start":{"line":6,"column":3,"offset":98},"end":{"line":6,"column":22,"offset":117}}}],"position":{"start":{"line":6,"column":3,"offset":98},"end":{"line":6,"column":22,"offset":117}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"没有设计OS的最好方式","position":{"start":{"line":8,"column":3,"offset":121},"end":{"line":8,"column":14,"offset":132}}}],"position":{"start":{"line":8,"column":3,"offset":121},"end":{"line":8,"column":14,"offset":132}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"很多OS都使用虚拟内存，但是这不一定。","position":{"start":{"line":10,"column":3,"offset":136},"end":{"line":10,"column":22,"offset":155}}}],"position":{"start":{"line":10,"column":3,"offset":136},"end":{"line":10,"column":22,"offset":155}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"xv6和JOS都是OS设计的例子，但是他们和真正的OS相比还是有很大差距的。","position":{"start":{"line":12,"column":3,"offset":159},"end":{"line":12,"column":41,"offset":197}}}],"position":{"start":{"line":12,"column":3,"offset":159},"end":{"line":12,"column":41,"offset":197}}},{"type":"text","value":"\n"}],"position":{"start":{"line":6,"column":1,"offset":96},"end":{"line":13,"column":1,"offset":198}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"guard page to protect against stack overflow","position":{"start":{"line":14,"column":3,"offset":201},"end":{"line":14,"column":47,"offset":245}}}],"position":{"start":{"line":14,"column":3,"offset":201},"end":{"line":14,"column":47,"offset":245}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"在user stack后面放一个没有被map的page，这样如果stack overflow了，会得到page fault","position":{"start":{"line":16,"column":3,"offset":249},"end":{"line":16,"column":64,"offset":310}}}],"position":{"start":{"line":16,"column":3,"offset":249},"end":{"line":16,"column":64,"offset":310}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"当application跑到guard page上来的时候分配more stack。","position":{"start":{"line":18,"column":3,"offset":314},"end":{"line":18,"column":45,"offset":356}}}],"position":{"start":{"line":18,"column":3,"offset":314},"end":{"line":18,"column":45,"offset":356}}},{"type":"text","value":"\n"}],"position":{"start":{"line":14,"column":1,"offset":199},"end":{"line":19,"column":1,"offset":357}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"优化：one zero-filled page","position":{"start":{"line":20,"column":3,"offset":360},"end":{"line":20,"column":26,"offset":383}}}],"position":{"start":{"line":20,"column":3,"offset":360},"end":{"line":20,"column":26,"offset":383}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"观察到很多时候一些memory从来不会被写入，而因为所有的内存都会用0进行初始化，所以可以使用一个zeroed page for all zero mappings。","position":{"start":{"line":22,"column":3,"offset":387},"end":{"line":22,"column":86,"offset":470}}}],"position":{"start":{"line":22,"column":3,"offset":387},"end":{"line":22,"column":86,"offset":470}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"当需要zero-filled page的时候，就map到这个zeroed page","position":{"start":{"line":24,"column":3,"offset":474},"end":{"line":24,"column":44,"offset":515}}}],"position":{"start":{"line":24,"column":3,"offset":474},"end":{"line":24,"column":44,"offset":515}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"在写入的时候，make copy of page  and map it read/write in app address space","position":{"start":{"line":26,"column":3,"offset":519},"end":{"line":26,"column":71,"offset":587}}}],"position":{"start":{"line":26,"column":3,"offset":519},"end":{"line":26,"column":71,"offset":587}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\"><span class=\"token keyword\">case</span> T_PGFLT<span class=\"token operator\">:</span> \n<span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">int</span> write <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>tf<span class=\"token operator\">-></span>err <span class=\"token operator\">&amp;</span> FEC_WR<span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\tuint va <span class=\"token operator\">=</span> <span class=\"token function\">PGROUNDDOWN</span><span class=\"token punctuation\">(</span><span class=\"token function\">rcr2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>va <span class=\"token operator\">&lt;</span> proc<span class=\"token operator\">-></span>sz<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>write<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>mem <span class=\"token operator\">=</span> <span class=\"token function\">kalloc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>mem <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token function\">cprintf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"out of memory\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token function\">memset</span><span class=\"token punctuation\">(</span>mem<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> PGSIZE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">cprintf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"kernel faulting in read/write page at %x\\n\"</span><span class=\"token punctuation\">,</span> va<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">mappages</span><span class=\"token punctuation\">(</span>proc<span class=\"token operator\">-></span>pgdir<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>va<span class=\"token punctuation\">,</span> PGSIZE<span class=\"token punctuation\">,</span> <span class=\"token function\">v2p</span><span class=\"token punctuation\">(</span>mem<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> PTE_W<span class=\"token operator\">|</span>PTE_U<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">cprintf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"kernel faulting in read-only zero page at %x\\n\"</span><span class=\"token punctuation\">,</span> va<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">mappages</span><span class=\"token punctuation\">(</span>proc<span class=\"token operator\">-></span>pgdir<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>va<span class=\"token punctuation\">,</span> PGSIZE<span class=\"token punctuation\">,</span> <span class=\"token function\">v2p</span><span class=\"token punctuation\">(</span>zero_page<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> PTE_U<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":28,"column":3,"offset":591},"end":{"line":51,"column":6,"offset":1210}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"这里我并没有在xv6黎曼进行修改，因为不知道这个","position":{"start":{"line":53,"column":3,"offset":1214},"end":{"line":53,"column":27,"offset":1238}}},{"type":"raw","value":"<code class=\"language-text\">zero_page</code>","position":{"start":{"line":53,"column":27,"offset":1238},"end":{"line":53,"column":38,"offset":1249}}},{"type":"text","value":"是应该在什么时候实现。","position":{"start":{"line":53,"column":38,"offset":1249},"end":{"line":53,"column":49,"offset":1260}}}],"position":{"start":{"line":53,"column":3,"offset":1214},"end":{"line":53,"column":49,"offset":1260}}},{"type":"text","value":"\n"}],"position":{"start":{"line":20,"column":1,"offset":358},"end":{"line":54,"column":1,"offset":1261}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"优化：share kernel page mapping","position":{"start":{"line":55,"column":3,"offset":1264},"end":{"line":55,"column":31,"offset":1292}}}],"position":{"start":{"line":55,"column":3,"offset":1264},"end":{"line":55,"column":31,"offset":1292}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"注意到","position":{"start":{"line":57,"column":3,"offset":1296},"end":{"line":57,"column":6,"offset":1299}}},{"type":"raw","value":"<code class=\"language-text\">kvmalloc</code>","position":{"start":{"line":57,"column":6,"offset":1299},"end":{"line":57,"column":16,"offset":1309}}},{"type":"text","value":"会对所有的process都分配kernel page table。但是他们都是一样的。所以实际上可以统一一下。修改方式是改","position":{"start":{"line":57,"column":16,"offset":1309},"end":{"line":57,"column":77,"offset":1370}}},{"type":"raw","value":"<code class=\"language-text\">kvmalloc</code>","position":{"start":{"line":57,"column":77,"offset":1370},"end":{"line":57,"column":87,"offset":1380}}},{"type":"text","value":"和","position":{"start":{"line":57,"column":87,"offset":1380},"end":{"line":57,"column":88,"offset":1381}}},{"type":"raw","value":"<code class=\"language-text\">freevm</code>","position":{"start":{"line":57,"column":88,"offset":1381},"end":{"line":57,"column":96,"offset":1389}}},{"type":"text","value":"（不知道该怎么改，主要是现在的版本只有在main里面会调用一次","position":{"start":{"line":57,"column":96,"offset":1389},"end":{"line":57,"column":127,"offset":1420}}},{"type":"raw","value":"<code class=\"language-text\">kvmalloc</code>","position":{"start":{"line":57,"column":127,"offset":1420},"end":{"line":57,"column":137,"offset":1430}}},{"type":"text","value":"，而不是每次执行新的process都会，所以就不知道该怎么弄了）","position":{"start":{"line":57,"column":137,"offset":1430},"end":{"line":57,"column":169,"offset":1462}}}],"position":{"start":{"line":57,"column":3,"offset":1296},"end":{"line":57,"column":169,"offset":1462}}},{"type":"text","value":"\n"}],"position":{"start":{"line":55,"column":1,"offset":1262},"end":{"line":58,"column":1,"offset":1463}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"优化：copy-on-write fork","position":{"start":{"line":59,"column":3,"offset":1466},"end":{"line":59,"column":24,"offset":1487}}}],"position":{"start":{"line":59,"column":3,"offset":1466},"end":{"line":59,"column":24,"offset":1487}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"很多时候都是fork之后马上exec，如果赋值了会很浪费，所以把parent和child的内存先共享着，并且把child的内存设置为copy on write，也就是有写入的时候再复制。","position":{"start":{"line":61,"column":3,"offset":1491},"end":{"line":61,"column":96,"offset":1584}}}],"position":{"start":{"line":61,"column":3,"offset":1491},"end":{"line":61,"column":96,"offset":1584}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"稍微具体一点就是修改","position":{"start":{"line":63,"column":3,"offset":1588},"end":{"line":63,"column":13,"offset":1598}}},{"type":"raw","value":"<code class=\"language-text\">fork</code>","position":{"start":{"line":63,"column":13,"offset":1598},"end":{"line":63,"column":19,"offset":1604}}},{"type":"text","value":"来map pages copy-on-write （use extra available system bits in PTEs and PDEs）","position":{"start":{"line":63,"column":19,"offset":1604},"end":{"line":63,"column":94,"offset":1679}}}],"position":{"start":{"line":63,"column":3,"offset":1588},"end":{"line":63,"column":94,"offset":1679}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"on page fault, make copy of page and map it read/write","position":{"start":{"line":65,"column":3,"offset":1683},"end":{"line":65,"column":57,"offset":1737}}}],"position":{"start":{"line":65,"column":3,"offset":1683},"end":{"line":65,"column":57,"offset":1737}}},{"type":"text","value":"\n"}],"position":{"start":{"line":59,"column":1,"offset":1464},"end":{"line":66,"column":1,"offset":1738}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"优化：demanding paging","position":{"start":{"line":67,"column":3,"offset":1741},"end":{"line":67,"column":22,"offset":1760}}}],"position":{"start":{"line":67,"column":3,"offset":1741},"end":{"line":67,"column":22,"offset":1760}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"现在的exec可能会把整个文件都加载到内存中，这样会很慢，并且有可能没必要。可以先分配page，并标记为on demand，on default从file中读取对应的page。会遇到的挑战就是如果文件比物理内存还大怎么办？下一条会给出解决方案。","position":{"start":{"line":69,"column":3,"offset":1764},"end":{"line":69,"column":125,"offset":1886}}}],"position":{"start":{"line":69,"column":3,"offset":1764},"end":{"line":69,"column":125,"offset":1886}}},{"type":"text","value":"\n"}],"position":{"start":{"line":67,"column":1,"offset":1739},"end":{"line":70,"column":1,"offset":1887}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Feature: 用比物理内存更大的虚拟内存","position":{"start":{"line":71,"column":3,"offset":1890},"end":{"line":71,"column":25,"offset":1912}}}],"position":{"start":{"line":71,"column":3,"offset":1890},"end":{"line":71,"column":25,"offset":1912}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"有的时候可能需要比物理内存还大的内存。解决方法就是把内存中不常用的部分存在硬盘上。","position":{"start":{"line":73,"column":3,"offset":1916},"end":{"line":73,"column":44,"offset":1957}}}],"position":{"start":{"line":73,"column":3,"offset":1916},"end":{"line":73,"column":44,"offset":1957}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"在硬盘和内存之间\"page in\" and out数据","position":{"start":{"line":75,"column":3,"offset":1961},"end":{"line":75,"column":30,"offset":1988}}}],"position":{"start":{"line":75,"column":3,"offset":1961},"end":{"line":75,"column":30,"offset":1988}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"使用PTE来检测什么时候需要disk access","position":{"start":{"line":77,"column":5,"offset":1994},"end":{"line":77,"column":30,"offset":2019}}}],"position":{"start":{"line":77,"column":3,"offset":1992},"end":{"line":77,"column":30,"offset":2019}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"用page table来找到least recent used disk block 并把其写回硬盘（LRU）","position":{"start":{"line":78,"column":5,"offset":2024},"end":{"line":78,"column":60,"offset":2079}}}],"position":{"start":{"line":78,"column":3,"offset":2022},"end":{"line":78,"column":60,"offset":2079}}},{"type":"text","value":"\n"}],"position":{"start":{"line":77,"column":3,"offset":1992},"end":{"line":78,"column":60,"offset":2079}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"当同时使用的内存小于RAM的时候，非常work。","position":{"start":{"line":80,"column":3,"offset":2083},"end":{"line":80,"column":27,"offset":2107}}}],"position":{"start":{"line":80,"column":3,"offset":2083},"end":{"line":80,"column":27,"offset":2107}}},{"type":"text","value":"\n"}],"position":{"start":{"line":71,"column":1,"offset":1888},"end":{"line":81,"column":1,"offset":2108}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Feature: memory-mapped files","position":{"start":{"line":82,"column":3,"offset":2111},"end":{"line":82,"column":31,"offset":2139}}}],"position":{"start":{"line":82,"column":3,"offset":2111},"end":{"line":82,"column":31,"offset":2139}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"通过load, store而不是read, write, lseek来access files以轻松访问文件的某一部分","position":{"start":{"line":84,"column":3,"offset":2143},"end":{"line":84,"column":62,"offset":2202}}}],"position":{"start":{"line":84,"column":3,"offset":2143},"end":{"line":84,"column":62,"offset":2202}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"会使用","position":{"start":{"line":86,"column":5,"offset":2208},"end":{"line":86,"column":8,"offset":2211}}},{"type":"raw","value":"<code class=\"language-text\">mmap</code>","position":{"start":{"line":86,"column":8,"offset":2211},"end":{"line":86,"column":14,"offset":2217}}},{"type":"text","value":" system call","position":{"start":{"line":86,"column":14,"offset":2217},"end":{"line":86,"column":26,"offset":2229}}}],"position":{"start":{"line":86,"column":3,"offset":2206},"end":{"line":86,"column":26,"offset":2229}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"用memory offset而不是seeking","position":{"start":{"line":87,"column":5,"offset":2234},"end":{"line":87,"column":29,"offset":2258}}}],"position":{"start":{"line":87,"column":3,"offset":2232},"end":{"line":87,"column":29,"offset":2258}}},{"type":"text","value":"\n"}],"position":{"start":{"line":86,"column":3,"offset":2206},"end":{"line":87,"column":29,"offset":2258}}},{"type":"text","value":"\n"}],"position":{"start":{"line":82,"column":1,"offset":2109},"end":{"line":88,"column":1,"offset":2259}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Feature: distributed shared memory","position":{"start":{"line":89,"column":3,"offset":2262},"end":{"line":89,"column":37,"offset":2296}}}],"position":{"start":{"line":89,"column":3,"offset":2262},"end":{"line":89,"column":37,"offset":2296}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"用虚拟内存来假装物理内存 is shared between several machines on the network","position":{"start":{"line":91,"column":3,"offset":2300},"end":{"line":91,"column":65,"offset":2362}}}],"position":{"start":{"line":91,"column":3,"offset":2300},"end":{"line":91,"column":65,"offset":2362}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"注意只有read only page可以复制，而能够写入的不能。","position":{"start":{"line":93,"column":3,"offset":2366},"end":{"line":93,"column":35,"offset":2398}}}],"position":{"start":{"line":93,"column":3,"offset":2366},"end":{"line":93,"column":35,"offset":2398}}},{"type":"text","value":"\n"}],"position":{"start":{"line":89,"column":1,"offset":2260},"end":{"line":93,"column":35,"offset":2398}}},{"type":"text","value":"\n"}],"position":{"start":{"line":6,"column":1,"offset":96},"end":{"line":93,"column":35,"offset":2398}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"JOS and virtual memory","position":{"start":{"line":95,"column":5,"offset":2404},"end":{"line":95,"column":27,"offset":2426}}}],"position":{"start":{"line":95,"column":1,"offset":2400},"end":{"line":95,"column":27,"offset":2426}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">    4 Gig --------&gt;  +------------------------------+\n                     |                              | RW/--\n                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n                     :              .               :\n                     :              .               :\n                     :              .               :\n                     |~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~| RW/--\n                     |                              | RW/--\n                     |   Remapped Physical Memory   | RW/--\n                     |                              | RW/--\n    KERNBASE, ----&gt;  +------------------------------+ 0xf0000000      --+\n    KSTACKTOP        |     CPU0&#39;s Kernel Stack      | RW/--  KSTKSIZE   |\n                     | - - - - - - - - - - - - - - -|                   |\n                     |      Invalid Memory (*)      | --/--  KSTKGAP    |\n                     +------------------------------+                   |\n                     |     CPU1&#39;s Kernel Stack      | RW/--  KSTKSIZE   |\n                     | - - - - - - - - - - - - - - -|                 PTSIZE\n                     |      Invalid Memory (*)      | --/--  KSTKGAP    |\n                     +------------------------------+                   |\n                     :              .               :                   |\n                     :              .               :                   |\n    MMIOLIM ------&gt;  +------------------------------+ 0xefc00000      --+\n                     |       Memory-mapped I/O      | RW/--  PTSIZE\n ULIM, MMIOBASE --&gt;  +------------------------------+ 0xef800000\n                     |  Cur. Page Table (User R-)   | R-/R-  PTSIZE\n    UVPT      ----&gt;  +------------------------------+ 0xef400000\n                     |          RO PAGES            | R-/R-  PTSIZE\n    UPAGES    ----&gt;  +------------------------------+ 0xef000000\n                     |           RO ENVS            | R-/R-  PTSIZE\n UTOP,UENVS ------&gt;  +------------------------------+ 0xeec00000\n UXSTACKTOP -/       |     User Exception Stack     | RW/RW  PGSIZE\n                     +------------------------------+ 0xeebff000\n                     |       Empty Memory (*)       | --/--  PGSIZE\n    USTACKTOP  ---&gt;  +------------------------------+ 0xeebfe000\n                     |      Normal User Stack       | RW/RW  PGSIZE\n                     +------------------------------+ 0xeebfd000\n                     |                              |\n                     |                              |\n                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n                     .                              .\n                     .                              .\n                     .                              .\n                     |~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~|\n                     |     Program Data &amp; Heap      |\n    UTEXT --------&gt;  +------------------------------+ 0x00800000\n    PFTEMP -------&gt;  |       Empty Memory (*)       |        PTSIZE\n                     |                              |\n    UTEMP --------&gt;  +------------------------------+ 0x00400000      --+\n                     |       Empty Memory (*)       |                   |\n                     | - - - - - - - - - - - - - - -|                   |\n                     |  User STAB Data (optional)   |                 PTSIZE\n    USTABDATA ----&gt;  +------------------------------+ 0x00200000        |\n                     |       Empty Memory (*)       |                   |\n    0 ------------&gt;  +------------------------------+                 --+</code></pre></div>","position":{"start":{"line":97,"column":1,"offset":2428},"end":{"line":152,"column":4,"offset":5967}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"segment仅仅用来切换隐私权限。","position":{"start":{"line":154,"column":3,"offset":5971},"end":{"line":154,"column":21,"offset":5989}}}],"position":{"start":{"line":154,"column":1,"offset":5969},"end":{"line":154,"column":21,"offset":5989}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"用paging来处理进程的地址空间。","position":{"start":{"line":155,"column":3,"offset":5992},"end":{"line":155,"column":21,"offset":6010}}}],"position":{"start":{"line":155,"column":1,"offset":5990},"end":{"line":155,"column":21,"offset":6010}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"用pagine来管理地址空间的访问权限。","position":{"start":{"line":156,"column":3,"offset":6013},"end":{"line":156,"column":23,"offset":6033}}}],"position":{"start":{"line":156,"column":1,"offset":6011},"end":{"line":156,"column":23,"offset":6033}}},{"type":"text","value":"\n"}],"position":{"start":{"line":154,"column":1,"offset":5969},"end":{"line":156,"column":23,"offset":6033}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"The UVPD","position":{"start":{"line":158,"column":5,"offset":6039},"end":{"line":158,"column":13,"offset":6047}}}],"position":{"start":{"line":158,"column":1,"offset":6035},"end":{"line":158,"column":13,"offset":6047}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"不是很明白这个的全称是啥？User Virtual Page Directory?","position":{"start":{"line":160,"column":1,"offset":6049},"end":{"line":160,"column":42,"offset":6090}}}],"position":{"start":{"line":160,"column":1,"offset":6049},"end":{"line":160,"column":42,"offset":6090}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"下图和下面的代码很好的演示了如何能够找到一个虚拟地址。","position":{"start":{"line":162,"column":1,"offset":6092},"end":{"line":162,"column":28,"offset":6119}}}],"position":{"start":{"line":162,"column":1,"offset":6092},"end":{"line":162,"column":28,"offset":6119}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"img","properties":{"src":"https://pdos.csail.mit.edu/6.828/2014/lec/pagetables.png","alt":"访问方式"},"children":[],"position":{"start":{"line":164,"column":1,"offset":6121},"end":{"line":164,"column":66,"offset":6186}}}],"position":{"start":{"line":164,"column":1,"offset":6121},"end":{"line":164,"column":66,"offset":6186}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">pd = lcr3();\npt = *(pd + 4*PDX);\npage = *(pt + 4*PTX);</code></pre></div>","position":{"start":{"line":166,"column":1,"offset":6188},"end":{"line":170,"column":4,"offset":6250}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"但是这种方式我们该如何用VA来访问PD或者某一个page table呢？或者说PD和PT也应该有自己的映射才对。采用的方法是通过让PD自己指向自己，也就是两步都是指向自己的开头，在JOS中V是","position":{"start":{"line":172,"column":1,"offset":6252},"end":{"line":172,"column":97,"offset":6348}}},{"type":"raw","value":"<code class=\"language-text\">0x3BD</code>","position":{"start":{"line":172,"column":97,"offset":6348},"end":{"line":172,"column":104,"offset":6355}}},{"type":"text","value":"。UVPD（应该就是page directory）是 (0x3BD<<22)|(0x3BD<<12)，然后如下图：","position":{"start":{"line":172,"column":104,"offset":6355},"end":{"line":172,"column":161,"offset":6412}}}],"position":{"start":{"line":172,"column":1,"offset":6252},"end":{"line":172,"column":161,"offset":6412}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"img","properties":{"src":"https://pdos.csail.mit.edu/6.828/2014/lec/vpt.png","alt":"PD指向自己"},"children":[],"position":{"start":{"line":174,"column":1,"offset":6414},"end":{"line":174,"column":61,"offset":6474}}}],"position":{"start":{"line":174,"column":1,"offset":6414},"end":{"line":174,"column":61,"offset":6474}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"这样如果PDX和PTX都是V，两次之后还是会指向PD，如果PDX=V但是PTX!=V，那么运行之后就会指向某一个page table。通过以上的方式，我们就把虚拟地址映射到了PD和PT了。","position":{"start":{"line":176,"column":1,"offset":6476},"end":{"line":176,"column":95,"offset":6570}}}],"position":{"start":{"line":176,"column":1,"offset":6476},"end":{"line":176,"column":95,"offset":6570}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":178,"column":1,"offset":6572}}}}