{"expireTime":9007200818315814000,"key":"transformer-remark-markdown-html-ast-abf0ac2f435263fce7ba887c3e61d639-gatsby-remark-katexgatsby-remark-prismjs-","val":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"这里会记录阅读6.828课程lecture note的我的个人笔记。可能会中英混杂，不是很适合外人阅读，也请见谅。","position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":58,"offset":58}}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":58,"offset":58}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Lecture 5: Isolation mechanisms","position":{"start":{"line":4,"column":4,"offset":63},"end":{"line":4,"column":35,"offset":94}}}],"position":{"start":{"line":4,"column":1,"offset":60},"end":{"line":4,"column":35,"offset":94}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"多个进程同时运行导致了对操作系统的3项主要要求：","position":{"start":{"line":6,"column":1,"offset":96},"end":{"line":6,"column":25,"offset":120}}}],"position":{"start":{"line":6,"column":1,"offset":96},"end":{"line":6,"column":25,"offset":120}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"multiplexing","position":{"start":{"line":8,"column":3,"offset":124},"end":{"line":8,"column":15,"offset":136}}}],"position":{"start":{"line":8,"column":1,"offset":122},"end":{"line":8,"column":15,"offset":136}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"isolation","position":{"start":{"line":9,"column":3,"offset":139},"end":{"line":9,"column":12,"offset":148}}}],"position":{"start":{"line":9,"column":1,"offset":137},"end":{"line":9,"column":12,"offset":148}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"interaction / sharing","position":{"start":{"line":10,"column":3,"offset":151},"end":{"line":10,"column":24,"offset":172}}}],"position":{"start":{"line":10,"column":1,"offset":149},"end":{"line":10,"column":24,"offset":172}}},{"type":"text","value":"\n"}],"position":{"start":{"line":8,"column":1,"offset":122},"end":{"line":10,"column":24,"offset":172}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"而这其中isolation是最不好完成的要求。","position":{"start":{"line":12,"column":1,"offset":174},"end":{"line":12,"column":24,"offset":197}}}],"position":{"start":{"line":12,"column":1,"offset":174},"end":{"line":12,"column":24,"offset":197}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"那么isolation要完成什么呢？","position":{"start":{"line":14,"column":1,"offset":199},"end":{"line":14,"column":19,"offset":217}}}],"position":{"start":{"line":14,"column":1,"offset":199},"end":{"line":14,"column":19,"offset":217}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"用隔离来包裹住错误","position":{"start":{"line":16,"column":3,"offset":221},"end":{"line":16,"column":12,"offset":230}}}],"position":{"start":{"line":16,"column":1,"offset":219},"end":{"line":16,"column":12,"offset":230}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"进程是isolation的基本单元","position":{"start":{"line":17,"column":3,"offset":233},"end":{"line":17,"column":20,"offset":250}}}],"position":{"start":{"line":17,"column":1,"offset":231},"end":{"line":17,"column":20,"offset":250}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"防止进程x监视进程y","position":{"start":{"line":18,"column":3,"offset":253},"end":{"line":18,"column":13,"offset":263}}}],"position":{"start":{"line":18,"column":1,"offset":251},"end":{"line":18,"column":13,"offset":263}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"防止进程干预操作系统","position":{"start":{"line":19,"column":3,"offset":266},"end":{"line":19,"column":13,"offset":276}}}],"position":{"start":{"line":19,"column":1,"offset":264},"end":{"line":19,"column":13,"offset":276}}},{"type":"text","value":"\n"}],"position":{"start":{"line":16,"column":1,"offset":219},"end":{"line":19,"column":13,"offset":276}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"kernel用硬件机制来辅助得到process isolation","position":{"start":{"line":21,"column":1,"offset":278},"end":{"line":21,"column":34,"offset":311}}}],"position":{"start":{"line":21,"column":1,"offset":278},"end":{"line":21,"column":34,"offset":311}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"processor有user / kernel mode flag","position":{"start":{"line":23,"column":3,"offset":315},"end":{"line":23,"column":36,"offset":348}}}],"position":{"start":{"line":23,"column":1,"offset":313},"end":{"line":23,"column":36,"offset":348}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"每个进程有分配address spaces","position":{"start":{"line":24,"column":3,"offset":351},"end":{"line":24,"column":24,"offset":372}}}],"position":{"start":{"line":24,"column":1,"offset":349},"end":{"line":24,"column":24,"offset":372}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"timeslicing","position":{"start":{"line":25,"column":3,"offset":375},"end":{"line":25,"column":14,"offset":386}}}],"position":{"start":{"line":25,"column":1,"offset":373},"end":{"line":25,"column":14,"offset":386}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"system call interface","position":{"start":{"line":26,"column":3,"offset":389},"end":{"line":26,"column":24,"offset":410}}}],"position":{"start":{"line":26,"column":1,"offset":387},"end":{"line":26,"column":24,"offset":410}}},{"type":"text","value":"\n"}],"position":{"start":{"line":23,"column":1,"offset":313},"end":{"line":26,"column":24,"offset":410}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"先来说硬件上的user / kernel mode flag。","position":{"start":{"line":28,"column":1,"offset":412},"end":{"line":28,"column":32,"offset":443}}}],"position":{"start":{"line":28,"column":1,"offset":412},"end":{"line":28,"column":32,"offset":443}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"控制instruction是否能有权限使用privileged h / w","position":{"start":{"line":30,"column":3,"offset":447},"end":{"line":30,"column":40,"offset":484}}}],"position":{"start":{"line":30,"column":1,"offset":445},"end":{"line":31,"column":1,"offset":485}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"在x86上叫CPL，是","position":{"start":{"line":32,"column":3,"offset":488},"end":{"line":32,"column":14,"offset":499}}},{"type":"raw","value":"<code class=\"language-text\">%cs</code>","position":{"start":{"line":32,"column":14,"offset":499},"end":{"line":32,"column":19,"offset":504}}},{"type":"text","value":"的后两位","position":{"start":{"line":32,"column":19,"offset":504},"end":{"line":32,"column":23,"offset":508}}}],"position":{"start":{"line":32,"column":3,"offset":488},"end":{"line":32,"column":23,"offset":508}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"CPL=0 -- kernel mode","position":{"start":{"line":34,"column":3,"offset":512},"end":{"line":34,"column":23,"offset":532}}}],"position":{"start":{"line":34,"column":3,"offset":512},"end":{"line":34,"column":23,"offset":532}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"CPL=3 -- user mode","position":{"start":{"line":36,"column":3,"offset":536},"end":{"line":36,"column":21,"offset":554}}}],"position":{"start":{"line":36,"column":3,"offset":536},"end":{"line":36,"column":21,"offset":554}}},{"type":"text","value":"\n"}],"position":{"start":{"line":32,"column":1,"offset":486},"end":{"line":37,"column":1,"offset":555}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"x86 CPL保护了很多寄存器，包括：","position":{"start":{"line":38,"column":3,"offset":558},"end":{"line":38,"column":22,"offset":577}}}],"position":{"start":{"line":38,"column":3,"offset":558},"end":{"line":38,"column":22,"offset":577}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"I / O port access","position":{"start":{"line":40,"column":5,"offset":583},"end":{"line":40,"column":22,"offset":600}}}],"position":{"start":{"line":40,"column":3,"offset":581},"end":{"line":40,"column":22,"offset":600}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"control register access (eflag, ","position":{"start":{"line":41,"column":5,"offset":605},"end":{"line":41,"column":37,"offset":637}}},{"type":"raw","value":"<code class=\"language-text\">%cs4</code>","position":{"start":{"line":41,"column":37,"offset":637},"end":{"line":41,"column":43,"offset":643}}},{"type":"text","value":")，包括","position":{"start":{"line":41,"column":43,"offset":643},"end":{"line":41,"column":47,"offset":647}}},{"type":"raw","value":"<code class=\"language-text\">%cs</code>","position":{"start":{"line":41,"column":47,"offset":647},"end":{"line":41,"column":52,"offset":652}}},{"type":"text","value":"自己","position":{"start":{"line":41,"column":52,"offset":652},"end":{"line":41,"column":54,"offset":654}}}],"position":{"start":{"line":41,"column":3,"offset":603},"end":{"line":41,"column":54,"offset":654}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"间接","position":{"start":{"line":42,"column":7,"offset":661},"end":{"line":42,"column":9,"offset":663}}}],"position":{"start":{"line":42,"column":5,"offset":659},"end":{"line":42,"column":11,"offset":665}}},{"type":"text","value":"影响内存访问","position":{"start":{"line":42,"column":11,"offset":665},"end":{"line":42,"column":17,"offset":671}}}],"position":{"start":{"line":42,"column":3,"offset":657},"end":{"line":42,"column":17,"offset":671}}},{"type":"text","value":"\n"}],"position":{"start":{"line":40,"column":3,"offset":581},"end":{"line":42,"column":17,"offset":671}}},{"type":"text","value":"\n"}],"position":{"start":{"line":38,"column":1,"offset":556},"end":{"line":43,"column":1,"offset":672}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"每个非娱乐性质的microprocessor都会有user / kernel mode flag","position":{"start":{"line":44,"column":3,"offset":675},"end":{"line":44,"column":51,"offset":723}}}],"position":{"start":{"line":44,"column":1,"offset":673},"end":{"line":44,"column":51,"offset":723}}},{"type":"text","value":"\n"}],"position":{"start":{"line":30,"column":1,"offset":445},"end":{"line":44,"column":51,"offset":723}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"如何用system call来切换CPL，考虑如下几个问题","position":{"start":{"line":46,"column":1,"offset":725},"end":{"line":46,"column":30,"offset":754}}}],"position":{"start":{"line":46,"column":1,"offset":725},"end":{"line":46,"column":30,"offset":754}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"可不可以设置一个system call直接","position":{"start":{"line":48,"column":3,"offset":758},"end":{"line":48,"column":24,"offset":779}}}],"position":{"start":{"line":48,"column":3,"offset":758},"end":{"line":48,"column":24,"offset":779}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"assembly\"><pre class=\"language-assembly\"><code class=\"language-assembly\">set CPL=0</code></pre></div>","position":{"start":{"line":50,"column":3,"offset":783},"end":{"line":52,"column":6,"offset":812}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"这样肯定不行，因为用户可以直接设置CPL，就没有办法保护内核了。","position":{"start":{"line":54,"column":3,"offset":816},"end":{"line":54,"column":35,"offset":848}}}],"position":{"start":{"line":54,"column":3,"offset":816},"end":{"line":54,"column":35,"offset":848}}},{"type":"text","value":"\n"}],"position":{"start":{"line":48,"column":1,"offset":756},"end":{"line":55,"column":1,"offset":849}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"那么如果要求这个system call必须要直接跳入kernel中的一个位置呢？","position":{"start":{"line":56,"column":3,"offset":852},"end":{"line":56,"column":43,"offset":892}}}],"position":{"start":{"line":56,"column":1,"offset":850},"end":{"line":57,"column":1,"offset":893}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"这样也不好，因为可能会跳到一个很尴尬的位置，没法运行下去了","position":{"start":{"line":58,"column":3,"offset":896},"end":{"line":58,"column":32,"offset":925}}}],"position":{"start":{"line":58,"column":1,"offset":894},"end":{"line":58,"column":32,"offset":925}}},{"type":"text","value":"\n"}],"position":{"start":{"line":48,"column":1,"offset":756},"end":{"line":58,"column":32,"offset":925}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"所以x86给出的答案是：","position":{"start":{"line":60,"column":1,"offset":927},"end":{"line":60,"column":13,"offset":939}}}],"position":{"start":{"line":60,"column":1,"offset":927},"end":{"line":60,"column":13,"offset":939}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"给出几个permissible kernel entry points","position":{"start":{"line":62,"column":3,"offset":943},"end":{"line":62,"column":38,"offset":978}}}],"position":{"start":{"line":62,"column":1,"offset":941},"end":{"line":62,"column":38,"offset":978}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"INT 指令会设置CPL=0，然后跳到某一个entry point","position":{"start":{"line":63,"column":3,"offset":981},"end":{"line":63,"column":36,"offset":1014}}}],"position":{"start":{"line":63,"column":1,"offset":979},"end":{"line":63,"column":36,"offset":1014}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"system call在返回的时候设置CPL=3，再运行user code","position":{"start":{"line":64,"column":3,"offset":1017},"end":{"line":64,"column":40,"offset":1054}}}],"position":{"start":{"line":64,"column":1,"offset":1015},"end":{"line":64,"column":40,"offset":1054}}},{"type":"text","value":"\n"}],"position":{"start":{"line":62,"column":1,"offset":941},"end":{"line":64,"column":40,"offset":1054}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"这样就有well-defined notion of user vs kernel，不会出现再kernel mode运行user code，更不会有user mode里运行kernel code。","position":{"start":{"line":66,"column":1,"offset":1056},"end":{"line":66,"column":99,"offset":1154}}}],"position":{"start":{"line":66,"column":1,"offset":1056},"end":{"line":66,"column":99,"offset":1154}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"之后来说如何隔离进程内存，也就是address space。","position":{"start":{"line":68,"column":1,"offset":1156},"end":{"line":68,"column":31,"offset":1186}}}],"position":{"start":{"line":68,"column":1,"offset":1156},"end":{"line":68,"column":31,"offset":1186}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"address space的目的是让每个process可以有内存来访问自己的code, variables, heap, stack并不让其访问其他的内存。","position":{"start":{"line":70,"column":3,"offset":1190},"end":{"line":70,"column":81,"offset":1268}}}],"position":{"start":{"line":70,"column":1,"offset":1188},"end":{"line":70,"column":81,"offset":1268}}},{"type":"text","value":"\n"}],"position":{"start":{"line":70,"column":1,"offset":1188},"end":{"line":70,"column":81,"offset":1268}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"那么如何建立isolated address spaces呢？","position":{"start":{"line":72,"column":1,"offset":1270},"end":{"line":72,"column":32,"offset":1301}}}],"position":{"start":{"line":72,"column":1,"offset":1270},"end":{"line":72,"column":32,"offset":1301}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"xv6用的是x86的memory management unit(MMU)里的 \"paging hardware\"，MMU会把所以地址进行翻译：","position":{"start":{"line":74,"column":1,"offset":1303},"end":{"line":74,"column":73,"offset":1375}}}],"position":{"start":{"line":74,"column":1,"offset":1303},"end":{"line":74,"column":73,"offset":1375}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">CPU -&gt; MMU -&gt; RAM\n        |\n     pagetable\nVA -&gt; PA</code></pre></div>","position":{"start":{"line":76,"column":1,"offset":1377},"end":{"line":81,"column":4,"offset":1436}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"MMU会对所有memory reference进行翻译:user and kernel。","position":{"start":{"line":83,"column":1,"offset":1438},"end":{"line":83,"column":45,"offset":1482}}}],"position":{"start":{"line":83,"column":1,"offset":1438},"end":{"line":83,"column":45,"offset":1482}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"instructions and data","position":{"start":{"line":85,"column":1,"offset":1484},"end":{"line":85,"column":22,"offset":1505}}}],"position":{"start":{"line":85,"column":1,"offset":1484},"end":{"line":85,"column":22,"offset":1505}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"注意instruction用的永远都是virtual address(VA), 从来不用physical address (PA)","position":{"start":{"line":87,"column":3,"offset":1509},"end":{"line":87,"column":68,"offset":1574}}}],"position":{"start":{"line":87,"column":1,"offset":1507},"end":{"line":87,"column":68,"offset":1574}}},{"type":"text","value":"\n"}],"position":{"start":{"line":87,"column":1,"offset":1507},"end":{"line":87,"column":68,"offset":1574}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"最后来说xv6的system call是如何实现的","position":{"start":{"line":89,"column":1,"offset":1576},"end":{"line":89,"column":26,"offset":1601}}}],"position":{"start":{"line":89,"column":1,"offset":1576},"end":{"line":89,"column":26,"offset":1601}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"xv6的process / stack diagram:","position":{"start":{"line":91,"column":1,"offset":1603},"end":{"line":91,"column":29,"offset":1631}}}],"position":{"start":{"line":91,"column":1,"offset":1603},"end":{"line":91,"column":29,"offset":1631}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"user process ; kernel thread","position":{"start":{"line":93,"column":3,"offset":1635},"end":{"line":93,"column":31,"offset":1663}}}],"position":{"start":{"line":93,"column":1,"offset":1633},"end":{"line":93,"column":31,"offset":1663}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"user stack ; kernel stack","position":{"start":{"line":94,"column":3,"offset":1666},"end":{"line":94,"column":28,"offset":1691}}}],"position":{"start":{"line":94,"column":1,"offset":1664},"end":{"line":94,"column":28,"offset":1691}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"two mechanisms:\nswitch between user/kernel\nswitch between kernel threads","position":{"start":{"line":95,"column":3,"offset":1694},"end":{"line":97,"column":36,"offset":1778}}}],"position":{"start":{"line":95,"column":1,"offset":1692},"end":{"line":97,"column":36,"offset":1778}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"trap frame","position":{"start":{"line":98,"column":3,"offset":1781},"end":{"line":98,"column":13,"offset":1791}}}],"position":{"start":{"line":98,"column":1,"offset":1779},"end":{"line":98,"column":13,"offset":1791}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"kernel function calls...","position":{"start":{"line":99,"column":3,"offset":1794},"end":{"line":99,"column":27,"offset":1818}}}],"position":{"start":{"line":99,"column":1,"offset":1792},"end":{"line":99,"column":27,"offset":1818}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"struct context","position":{"start":{"line":100,"column":3,"offset":1821},"end":{"line":100,"column":17,"offset":1835}}}],"position":{"start":{"line":100,"column":1,"offset":1819},"end":{"line":100,"column":17,"offset":1835}}},{"type":"text","value":"\n"}],"position":{"start":{"line":93,"column":1,"offset":1633},"end":{"line":100,"column":17,"offset":1835}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"简单的xv6的user/kernel virtual address-space设置：","position":{"start":{"line":102,"column":1,"offset":1837},"end":{"line":102,"column":44,"offset":1880}}}],"position":{"start":{"line":102,"column":1,"offset":1837},"end":{"line":102,"column":44,"offset":1880}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  FFFFFFFF:\n            ...\n  80000000: kernel\n            user stack\n            user data\n  00000000: user instructions</code></pre></div>","position":{"start":{"line":104,"column":1,"offset":1882},"end":{"line":111,"column":4,"offset":2011}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"kernel通过设置MMU来让user code只能访问到lower half。每个进程会有不同的address space，但是kernel的mapping都是一样的。","position":{"start":{"line":113,"column":1,"offset":2013},"end":{"line":113,"column":86,"offset":2098}}}],"position":{"start":{"line":113,"column":1,"offset":2013},"end":{"line":113,"column":86,"offset":2098}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"下面来看看xv6的代码层面是如何完成的调用一个system call并返回的。","position":{"start":{"line":115,"column":1,"offset":2100},"end":{"line":115,"column":40,"offset":2139}}}],"position":{"start":{"line":115,"column":1,"offset":2100},"end":{"line":115,"column":40,"offset":2139}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"我们选择的system call是","position":{"start":{"line":117,"column":1,"offset":2141},"end":{"line":117,"column":18,"offset":2158}}},{"type":"raw","value":"<code class=\"language-text\">sh.asm</code>","position":{"start":{"line":117,"column":18,"offset":2158},"end":{"line":117,"column":26,"offset":2166}}},{"type":"text","value":"里的","position":{"start":{"line":117,"column":26,"offset":2166},"end":{"line":117,"column":28,"offset":2168}}},{"type":"raw","value":"<code class=\"language-text\">write</code>","position":{"start":{"line":117,"column":28,"offset":2168},"end":{"line":117,"column":35,"offset":2175}}},{"type":"text","value":"，注意这里note有误，应该是","position":{"start":{"line":117,"column":35,"offset":2175},"end":{"line":117,"column":50,"offset":2190}}},{"type":"raw","value":"<code class=\"language-text\">b * 0x0d32</code>","position":{"start":{"line":117,"column":50,"offset":2190},"end":{"line":117,"column":62,"offset":2202}}},{"type":"text","value":"而不是","position":{"start":{"line":117,"column":62,"offset":2202},"end":{"line":117,"column":65,"offset":2205}}},{"type":"raw","value":"<code class=\"language-text\">0d42</code>","position":{"start":{"line":117,"column":65,"offset":2205},"end":{"line":117,"column":71,"offset":2211}}},{"type":"text","value":"。而且运行","position":{"start":{"line":117,"column":71,"offset":2211},"end":{"line":117,"column":76,"offset":2216}}},{"type":"raw","value":"<code class=\"language-text\">x/3i</code>","position":{"start":{"line":117,"column":76,"offset":2216},"end":{"line":117,"column":82,"offset":2222}}},{"type":"text","value":"的结果和","position":{"start":{"line":117,"column":82,"offset":2222},"end":{"line":117,"column":86,"offset":2226}}},{"type":"raw","value":"<code class=\"language-text\">sh.asm</code>","position":{"start":{"line":117,"column":86,"offset":2226},"end":{"line":117,"column":94,"offset":2234}}},{"type":"text","value":"里面记录的内容也不一样。。。神奇...正常运行的代码应该是：","position":{"start":{"line":117,"column":94,"offset":2234},"end":{"line":117,"column":124,"offset":2264}}}],"position":{"start":{"line":117,"column":1,"offset":2141},"end":{"line":117,"column":124,"offset":2264}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"assembly\"><pre class=\"language-assembly\"><code class=\"language-assembly\">00000d32 &lt;write&gt;:\nSYSCALL(write)\n     d32:\tb8 10 00 00 00       \tmov    $0x10,%eax\n     d37:\tcd 40                \tint    $0x40\n     d39:\tc3                   \tret    </code></pre></div>","position":{"start":{"line":119,"column":1,"offset":2266},"end":{"line":125,"column":4,"offset":2449}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"其中","position":{"start":{"line":127,"column":1,"offset":2451},"end":{"line":127,"column":3,"offset":2453}}},{"type":"raw","value":"<code class=\"language-text\">0x10</code>","position":{"start":{"line":127,"column":3,"offset":2453},"end":{"line":127,"column":9,"offset":2459}}},{"type":"text","value":"是write的system call number。这里还有一个疑问，就是系统是怎么在启动之后自动调用shell的，没太明白。下面就是按照lecture中的要求进行调试：","position":{"start":{"line":127,"column":9,"offset":2459},"end":{"line":127,"column":94,"offset":2544}}}],"position":{"start":{"line":127,"column":1,"offset":2451},"end":{"line":127,"column":94,"offset":2544}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"assembly\"><pre class=\"language-assembly\"><code class=\"language-assembly\">(gdb) b * 0x0d32\nBreakpoint 1 at 0xd32\n(gdb) c\nContinuing.\n...\n(gdb) info reg\neax            0x3f7a   16250\necx            0x24     36\nedx            0x0      0\nebx            0x24     36\nesp            0x3f4c   0x3f4c\nebp            0x3f98   0x3f98\nesi            0x11b9   4537\nedi            0x0      0\neip            0xd32    0xd32\neflags         0x216    [ PF AF IF ]\ncs             0x1b     27\nss             0x23     35\nds             0x23     35\nes             0x23     35\nfs             0x0      0\ngs             0x0      0</code></pre></div>","position":{"start":{"line":129,"column":1,"offset":2546},"end":{"line":152,"column":4,"offset":3093}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"可以看到这时的","position":{"start":{"line":154,"column":1,"offset":3095},"end":{"line":154,"column":8,"offset":3102}}},{"type":"raw","value":"<code class=\"language-text\">%cs</code>","position":{"start":{"line":154,"column":8,"offset":3102},"end":{"line":154,"column":13,"offset":3107}}},{"type":"text","value":"是","position":{"start":{"line":154,"column":13,"offset":3107},"end":{"line":154,"column":14,"offset":3108}}},{"type":"raw","value":"<code class=\"language-text\">0x1b</code>","position":{"start":{"line":154,"column":14,"offset":3108},"end":{"line":154,"column":20,"offset":3114}}},{"type":"text","value":"也就是CPL=3，处于user mode。","position":{"start":{"line":154,"column":20,"offset":3114},"end":{"line":154,"column":41,"offset":3135}}}],"position":{"start":{"line":154,"column":1,"offset":3095},"end":{"line":154,"column":41,"offset":3135}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"assembly\"><pre class=\"language-assembly\"><code class=\"language-assembly\">(gdb) x/4x $esp\n0x3f4c: 0x00000ea5      0x00000002      0x00003f7a      0x00000001</code></pre></div>","position":{"start":{"line":156,"column":1,"offset":3137},"end":{"line":159,"column":4,"offset":3235}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">esp</code>","position":{"start":{"line":161,"column":1,"offset":3237},"end":{"line":161,"column":6,"offset":3242}}},{"type":"text","value":"的这4个值分别是","position":{"start":{"line":161,"column":6,"offset":3242},"end":{"line":161,"column":14,"offset":3250}}},{"type":"raw","value":"<code class=\"language-text\">ebf</code>","position":{"start":{"line":161,"column":14,"offset":3250},"end":{"line":161,"column":19,"offset":3255}}},{"type":"text","value":"(return address？这里存疑...)，2是fd，","position":{"start":{"line":161,"column":19,"offset":3255},"end":{"line":161,"column":49,"offset":3285}}},{"type":"raw","value":"<code class=\"language-text\">0x3f7a</code>","position":{"start":{"line":161,"column":49,"offset":3285},"end":{"line":161,"column":57,"offset":3293}}},{"type":"text","value":"是buffer的地址，1是count，对应的就是","position":{"start":{"line":161,"column":57,"offset":3293},"end":{"line":161,"column":81,"offset":3317}}},{"type":"raw","value":"<code class=\"language-text\">write(2, 0x3f7a, 1)</code>","position":{"start":{"line":161,"column":81,"offset":3317},"end":{"line":161,"column":102,"offset":3338}}}],"position":{"start":{"line":161,"column":1,"offset":3237},"end":{"line":161,"column":102,"offset":3338}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"assembly\"><pre class=\"language-assembly\"><code class=\"language-assembly\">(gdb) x/c 0x3f7a\n0x3f7a: 36 &#39;$&#39;</code></pre></div>","position":{"start":{"line":163,"column":1,"offset":3340},"end":{"line":166,"column":4,"offset":3387}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"就是说buffer里面存的就是要写出的","position":{"start":{"line":168,"column":1,"offset":3389},"end":{"line":168,"column":20,"offset":3408}}},{"type":"raw","value":"<code class=\"language-text\">$</code>","position":{"start":{"line":168,"column":20,"offset":3408},"end":{"line":168,"column":23,"offset":3411}}},{"type":"text","value":"。如果继续往下运行，运行两步之后","position":{"start":{"line":168,"column":23,"offset":3411},"end":{"line":168,"column":39,"offset":3427}}}],"position":{"start":{"line":168,"column":1,"offset":3389},"end":{"line":168,"column":39,"offset":3427}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"assembly\"><pre class=\"language-assembly\"><code class=\"language-assembly\">(gdb) info reg\neax            0x10     16\necx            0x24     36\nedx            0x0      0\nebx            0x24     36\nesp            0x8dffefe8       0x8dffefe8\nebp            0x3f98   0x3f98\nesi            0x11b9   4537\nedi            0x0      0\neip            0x80105d49       0x80105d49 &lt;vector64+2&gt;\neflags         0x216    [ PF AF IF ]\ncs             0x8      8\nss             0x10     16\nds             0x23     35\nes             0x23     35\nfs             0x0      0\ngs             0x0      0</code></pre></div>","position":{"start":{"line":170,"column":1,"offset":3429},"end":{"line":188,"column":4,"offset":3947}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">%cs</code>","position":{"start":{"line":190,"column":1,"offset":3949},"end":{"line":190,"column":6,"offset":3954}}},{"type":"text","value":"变为8，也就是CPL=0，进入了kernel模式，且注意","position":{"start":{"line":190,"column":6,"offset":3954},"end":{"line":190,"column":34,"offset":3982}}},{"type":"raw","value":"<code class=\"language-text\">eip</code>","position":{"start":{"line":190,"column":34,"offset":3982},"end":{"line":190,"column":39,"offset":3987}}},{"type":"text","value":"已经进入了kernel memory里面，","position":{"start":{"line":190,"column":39,"offset":3987},"end":{"line":190,"column":60,"offset":4008}}},{"type":"raw","value":"<code class=\"language-text\">esp</code>","position":{"start":{"line":190,"column":60,"offset":4008},"end":{"line":190,"column":65,"offset":4013}}},{"type":"text","value":"已经在kernel stack中。","position":{"start":{"line":190,"column":65,"offset":4013},"end":{"line":190,"column":82,"offset":4030}}}],"position":{"start":{"line":190,"column":1,"offset":3949},"end":{"line":190,"column":82,"offset":4030}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"assembly\"><pre class=\"language-assembly\"><code class=\"language-assembly\">(gdb) x/6wx $esp\n0x8dffefe8:     0x00000000      0x00000d39      0x0000001b      0x00000216\n0x8dffeff8:     0x00003f4c      0x00000023</code></pre></div>","position":{"start":{"line":192,"column":1,"offset":4032},"end":{"line":196,"column":4,"offset":4182}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"可以看到","position":{"start":{"line":198,"column":1,"offset":4184},"end":{"line":198,"column":5,"offset":4188}}},{"type":"raw","value":"<code class=\"language-text\">INT</code>","position":{"start":{"line":198,"column":5,"offset":4188},"end":{"line":198,"column":10,"offset":4193}}},{"type":"text","value":"指令把一些之前的register放在堆栈保存起来了，保存在了kernel stack。保存的register包括","position":{"start":{"line":198,"column":10,"offset":4193},"end":{"line":198,"column":66,"offset":4249}}},{"type":"raw","value":"<code class=\"language-text\">err</code>","position":{"start":{"line":198,"column":66,"offset":4249},"end":{"line":198,"column":71,"offset":4254}}},{"type":"text","value":", ","position":{"start":{"line":198,"column":71,"offset":4254},"end":{"line":198,"column":73,"offset":4256}}},{"type":"raw","value":"<code class=\"language-text\">eip</code>","position":{"start":{"line":198,"column":73,"offset":4256},"end":{"line":198,"column":78,"offset":4261}}},{"type":"text","value":", ","position":{"start":{"line":198,"column":78,"offset":4261},"end":{"line":198,"column":80,"offset":4263}}},{"type":"raw","value":"<code class=\"language-text\">cs</code>","position":{"start":{"line":198,"column":80,"offset":4263},"end":{"line":198,"column":84,"offset":4267}}},{"type":"text","value":", ","position":{"start":{"line":198,"column":84,"offset":4267},"end":{"line":198,"column":86,"offset":4269}}},{"type":"raw","value":"<code class=\"language-text\">eflags</code>","position":{"start":{"line":198,"column":86,"offset":4269},"end":{"line":198,"column":94,"offset":4277}}},{"type":"text","value":", ","position":{"start":{"line":198,"column":94,"offset":4277},"end":{"line":198,"column":96,"offset":4279}}},{"type":"raw","value":"<code class=\"language-text\">esp</code>","position":{"start":{"line":198,"column":96,"offset":4279},"end":{"line":198,"column":101,"offset":4284}}},{"type":"text","value":", ","position":{"start":{"line":198,"column":101,"offset":4284},"end":{"line":198,"column":103,"offset":4286}}},{"type":"raw","value":"<code class=\"language-text\">ss</code>","position":{"start":{"line":198,"column":103,"offset":4286},"end":{"line":198,"column":107,"offset":4290}}},{"type":"text","value":"。之所以会进行保存，是因为","position":{"start":{"line":198,"column":107,"offset":4290},"end":{"line":198,"column":120,"offset":4303}}},{"type":"raw","value":"<code class=\"language-text\">INT</code>","position":{"start":{"line":198,"column":120,"offset":4303},"end":{"line":198,"column":125,"offset":4308}}},{"type":"text","value":"会overwrite这些register。","position":{"start":{"line":198,"column":125,"offset":4308},"end":{"line":198,"column":146,"offset":4329}}}],"position":{"start":{"line":198,"column":1,"offset":4184},"end":{"line":198,"column":146,"offset":4329}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"总结来说","position":{"start":{"line":200,"column":1,"offset":4331},"end":{"line":200,"column":5,"offset":4335}}},{"type":"raw","value":"<code class=\"language-text\">INT</code>","position":{"start":{"line":200,"column":5,"offset":4335},"end":{"line":200,"column":10,"offset":4340}}},{"type":"text","value":"做了如下的内容：","position":{"start":{"line":200,"column":10,"offset":4340},"end":{"line":200,"column":18,"offset":4348}}}],"position":{"start":{"line":200,"column":1,"offset":4331},"end":{"line":200,"column":18,"offset":4348}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"切换为kernel stack（调整esp）","position":{"start":{"line":202,"column":3,"offset":4352},"end":{"line":202,"column":25,"offset":4374}}}],"position":{"start":{"line":202,"column":1,"offset":4350},"end":{"line":202,"column":25,"offset":4374}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"保存用户的register于kernel stack","position":{"start":{"line":203,"column":3,"offset":4377},"end":{"line":203,"column":29,"offset":4403}}}],"position":{"start":{"line":203,"column":1,"offset":4375},"end":{"line":203,"column":29,"offset":4403}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"设置CPL=0","position":{"start":{"line":204,"column":3,"offset":4406},"end":{"line":204,"column":10,"offset":4413}}}],"position":{"start":{"line":204,"column":1,"offset":4404},"end":{"line":204,"column":10,"offset":4413}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"让eip指向kernel-supplied vector。","position":{"start":{"line":205,"column":3,"offset":4416},"end":{"line":205,"column":32,"offset":4445}}}],"position":{"start":{"line":205,"column":1,"offset":4414},"end":{"line":205,"column":32,"offset":4445}}},{"type":"text","value":"\n"}],"position":{"start":{"line":202,"column":1,"offset":4350},"end":{"line":205,"column":32,"offset":4445}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"前文我们知道","position":{"start":{"line":207,"column":1,"offset":4447},"end":{"line":207,"column":7,"offset":4453}}},{"type":"raw","value":"<code class=\"language-text\">eip</code>","position":{"start":{"line":207,"column":7,"offset":4453},"end":{"line":207,"column":12,"offset":4458}}},{"type":"text","value":"是给定的kernel-supplied vector，那么","position":{"start":{"line":207,"column":12,"offset":4458},"end":{"line":207,"column":41,"offset":4487}}},{"type":"raw","value":"<code class=\"language-text\">esp</code>","position":{"start":{"line":207,"column":41,"offset":4487},"end":{"line":207,"column":46,"offset":4492}}},{"type":"text","value":"来源于哪里呢？","position":{"start":{"line":207,"column":46,"offset":4492},"end":{"line":207,"column":53,"offset":4499}}}],"position":{"start":{"line":207,"column":1,"offset":4447},"end":{"line":207,"column":53,"offset":4499}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"kernel会在创建进程的时候告诉硬件应该用哪个kernel stack。","position":{"start":{"line":209,"column":3,"offset":4503},"end":{"line":209,"column":40,"offset":4540}}}],"position":{"start":{"line":209,"column":1,"offset":4501},"end":{"line":209,"column":40,"offset":4540}}},{"type":"text","value":"\n"}],"position":{"start":{"line":209,"column":1,"offset":4501},"end":{"line":209,"column":40,"offset":4540}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"为什么INT需要保存用户状态？应该保存多少状态？","position":{"start":{"line":211,"column":1,"offset":4542},"end":{"line":211,"column":25,"offset":4566}}}],"position":{"start":{"line":211,"column":1,"offset":4542},"end":{"line":211,"column":25,"offset":4566}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"transparency vs speed (这里","position":{"start":{"line":213,"column":3,"offset":4570},"end":{"line":213,"column":28,"offset":4595}}},{"type":"element","tagName":"a","properties":{"href":"https://en.wikipedia.org/wiki/Transparency_(human%E2%80%93computer_interaction)"},"children":[{"type":"text","value":"transparency","position":{"start":{"line":213,"column":29,"offset":4596},"end":{"line":213,"column":41,"offset":4608}}}],"position":{"start":{"line":213,"column":28,"offset":4595},"end":{"line":213,"column":123,"offset":4690}}},{"type":"text","value":"指在调用system call的时候不会对外部状态造成太多影响）","position":{"start":{"line":213,"column":123,"offset":4690},"end":{"line":213,"column":155,"offset":4722}}}],"position":{"start":{"line":213,"column":1,"offset":4568},"end":{"line":213,"column":155,"offset":4722}}},{"type":"text","value":"\n"}],"position":{"start":{"line":213,"column":1,"offset":4568},"end":{"line":213,"column":155,"offset":4722}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"而保存剩余的register用的是","position":{"start":{"line":215,"column":1,"offset":4724},"end":{"line":215,"column":18,"offset":4741}}},{"type":"raw","value":"<code class=\"language-text\">trapasm.S</code>","position":{"start":{"line":215,"column":18,"offset":4741},"end":{"line":215,"column":29,"offset":4752}}},{"type":"text","value":"里头的","position":{"start":{"line":215,"column":29,"offset":4752},"end":{"line":215,"column":32,"offset":4755}}},{"type":"raw","value":"<code class=\"language-text\">alltraps</code>","position":{"start":{"line":215,"column":32,"offset":4755},"end":{"line":215,"column":42,"offset":4765}}},{"type":"text","value":"函数。","position":{"start":{"line":215,"column":42,"offset":4765},"end":{"line":215,"column":45,"offset":4768}}}],"position":{"start":{"line":215,"column":1,"offset":4724},"end":{"line":215,"column":45,"offset":4768}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"assembly\"><pre class=\"language-assembly\"><code class=\"language-assembly\">  # vectors.S sends all traps here.\n.globl alltraps\nalltraps:\n  # Build trap frame.\n  pushl %ds\n  pushl %es\n  pushl %fs\n  pushl %gs\n  pushal\n  \n  # Set up data segments.\n  movw $(SEG_KDATA&lt;&lt;3), %ax\n  movw %ax, %ds\n  movw %ax, %es\n\n  # Call trap(tf), where tf=%esp\n  pushl %esp\n  call trap\n  addl $4, %esp\n\n  # Return falls through to trapret...\n.globl trapret\ntrapret:\n  popal\n  popl %gs\n  popl %fs\n  popl %es\n  popl %ds\n  addl $0x8, %esp  # trapno and errcode\n  iret</code></pre></div>","position":{"start":{"line":217,"column":1,"offset":4770},"end":{"line":248,"column":4,"offset":5253}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"这个函数就是现在","position":{"start":{"line":250,"column":1,"offset":5255},"end":{"line":250,"column":9,"offset":5263}}},{"type":"raw","value":"<code class=\"language-text\">eip</code>","position":{"start":{"line":250,"column":9,"offset":5263},"end":{"line":250,"column":14,"offset":5268}}},{"type":"text","value":"对应的","position":{"start":{"line":250,"column":14,"offset":5268},"end":{"line":250,"column":17,"offset":5271}}},{"type":"raw","value":"<code class=\"language-text\">0x80105d49</code>","position":{"start":{"line":250,"column":17,"offset":5271},"end":{"line":250,"column":29,"offset":5283}}},{"type":"text","value":"对应的位置。所以堆栈里面存有的是19words:","position":{"start":{"line":250,"column":29,"offset":5283},"end":{"line":250,"column":53,"offset":5307}}}],"position":{"start":{"line":250,"column":1,"offset":5255},"end":{"line":250,"column":53,"offset":5307}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"assembly\"><pre class=\"language-assembly\"><code class=\"language-assembly\">    ss\n    esp\n    eflags\n    cs\n    eip\n    err    -- INT saved from here up\n    trapno\n    ds\n    es\n    fs\n    gs\n    eax..edi</code></pre></div>","position":{"start":{"line":252,"column":1,"offset":5309},"end":{"line":265,"column":4,"offset":5454}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"这些都是之后会被恢复的。同时有的时候kernel的C code需要对这些尽心读写，就通过","position":{"start":{"line":267,"column":1,"offset":5456},"end":{"line":267,"column":45,"offset":5500}}},{"type":"raw","value":"<code class=\"language-text\">x86.h</code>","position":{"start":{"line":267,"column":45,"offset":5500},"end":{"line":267,"column":52,"offset":5507}}},{"type":"text","value":"中的","position":{"start":{"line":267,"column":52,"offset":5507},"end":{"line":267,"column":54,"offset":5509}}},{"type":"raw","value":"<code class=\"language-text\">struct trapframe</code>","position":{"start":{"line":267,"column":54,"offset":5509},"end":{"line":267,"column":72,"offset":5527}}},{"type":"text","value":"进行操作。","position":{"start":{"line":267,"column":72,"offset":5527},"end":{"line":267,"column":77,"offset":5532}}}],"position":{"start":{"line":267,"column":1,"offset":5456},"end":{"line":267,"column":77,"offset":5532}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"可以看到调用了","position":{"start":{"line":269,"column":1,"offset":5534},"end":{"line":269,"column":8,"offset":5541}}},{"type":"raw","value":"<code class=\"language-text\">trap</code>","position":{"start":{"line":269,"column":8,"offset":5541},"end":{"line":269,"column":14,"offset":5547}}},{"type":"text","value":"函数(在","position":{"start":{"line":269,"column":14,"offset":5547},"end":{"line":269,"column":18,"offset":5551}}},{"type":"raw","value":"<code class=\"language-text\">trap.c</code>","position":{"start":{"line":269,"column":18,"offset":5551},"end":{"line":269,"column":26,"offset":5559}}},{"type":"text","value":"文件中)，其中","position":{"start":{"line":269,"column":26,"offset":5559},"end":{"line":269,"column":33,"offset":5566}}},{"type":"raw","value":"<code class=\"language-text\">pushl %esp</code>","position":{"start":{"line":269,"column":33,"offset":5566},"end":{"line":269,"column":45,"offset":5578}}},{"type":"text","value":"就是","position":{"start":{"line":269,"column":45,"offset":5578},"end":{"line":269,"column":47,"offset":5580}}},{"type":"raw","value":"<code class=\"language-text\">trap</code>","position":{"start":{"line":269,"column":47,"offset":5580},"end":{"line":269,"column":53,"offset":5586}}},{"type":"text","value":"函数的参数","position":{"start":{"line":269,"column":53,"offset":5586},"end":{"line":269,"column":58,"offset":5591}}},{"type":"raw","value":"<code class=\"language-text\">tf</code>","position":{"start":{"line":269,"column":58,"offset":5591},"end":{"line":269,"column":62,"offset":5595}}},{"type":"text","value":"。进入这个函数之后，有：","position":{"start":{"line":269,"column":62,"offset":5595},"end":{"line":269,"column":74,"offset":5607}}}],"position":{"start":{"line":269,"column":1,"offset":5534},"end":{"line":269,"column":74,"offset":5607}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(gdb) print tf\n$1 = (struct trapframe *) 0x8dffefb4\n(gdb) print *tf\n$2 = {edi = 0, esi = 4537, ebp = 16280, oesp = 2382360532, ebx = 36, edx = 0,\n  ecx = 36, eax = 16, gs = 0, padding1 = 0, fs = 0, padding2 = 0, es = 35,\n  padding3 = 0, ds = 35, padding4 = 0, trapno = 64, err = 0, eip = 3385,\n  cs = 27, padding5 = 0, eflags = 534, esp = 16204, ss = 35, padding6 = 0}</code></pre></div>","position":{"start":{"line":271,"column":1,"offset":5609},"end":{"line":279,"column":4,"offset":5985}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">trap</code>","position":{"start":{"line":281,"column":1,"offset":5987},"end":{"line":281,"column":7,"offset":5993}}},{"type":"text","value":"函数的代码如下：","position":{"start":{"line":281,"column":7,"offset":5993},"end":{"line":281,"column":15,"offset":6001}}}],"position":{"start":{"line":281,"column":1,"offset":5987},"end":{"line":281,"column":15,"offset":6001}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\"><span class=\"token keyword\">void</span>\n<span class=\"token function\">trap</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">struct</span> <span class=\"token class-name\">trapframe</span> <span class=\"token operator\">*</span>tf<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>tf<span class=\"token operator\">-></span>trapno <span class=\"token operator\">==</span> T_SYSCALL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">myproc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span>killed<span class=\"token punctuation\">)</span>\n      <span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">myproc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span>tf <span class=\"token operator\">=</span> tf<span class=\"token punctuation\">;</span>\n    <span class=\"token function\">syscall</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">myproc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span>killed<span class=\"token punctuation\">)</span>\n      <span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></code></pre></div>","position":{"start":{"line":283,"column":1,"offset":6003},"end":{"line":296,"column":4,"offset":6214}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"进入trap函数的不只有system call，还有interrupt和fault，所以会先判断一下","position":{"start":{"line":298,"column":1,"offset":6216},"end":{"line":298,"column":51,"offset":6266}}},{"type":"raw","value":"<code class=\"language-text\">tf-&gt;trapno</code>","position":{"start":{"line":298,"column":51,"offset":6266},"end":{"line":298,"column":63,"offset":6278}}},{"type":"text","value":"是不是","position":{"start":{"line":298,"column":63,"offset":6278},"end":{"line":298,"column":66,"offset":6281}}},{"type":"raw","value":"<code class=\"language-text\">T_SYSCALL</code>","position":{"start":{"line":298,"column":66,"offset":6281},"end":{"line":298,"column":77,"offset":6292}}},{"type":"text","value":"。在本次运行的代码里，的确是（注意","position":{"start":{"line":298,"column":77,"offset":6292},"end":{"line":298,"column":94,"offset":6309}}},{"type":"raw","value":"<code class=\"language-text\">T_SYSCALL</code>","position":{"start":{"line":298,"column":94,"offset":6309},"end":{"line":298,"column":105,"offset":6320}}},{"type":"text","value":"是60就是","position":{"start":{"line":298,"column":105,"offset":6320},"end":{"line":298,"column":110,"offset":6325}}},{"type":"raw","value":"<code class=\"language-text\">INT</code>","position":{"start":{"line":298,"column":110,"offset":6325},"end":{"line":298,"column":115,"offset":6330}}},{"type":"text","value":"调用的","position":{"start":{"line":298,"column":115,"offset":6330},"end":{"line":298,"column":118,"offset":6333}}},{"type":"raw","value":"<code class=\"language-text\">0x40</code>","position":{"start":{"line":298,"column":118,"offset":6333},"end":{"line":298,"column":124,"offset":6339}}},{"type":"text","value":"）。","position":{"start":{"line":298,"column":124,"offset":6339},"end":{"line":298,"column":126,"offset":6341}}}],"position":{"start":{"line":298,"column":1,"offset":6216},"end":{"line":298,"column":126,"offset":6341}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"判断完就会运行","position":{"start":{"line":300,"column":1,"offset":6343},"end":{"line":300,"column":8,"offset":6350}}},{"type":"raw","value":"<code class=\"language-text\">myproc()</code>","position":{"start":{"line":300,"column":8,"offset":6350},"end":{"line":300,"column":18,"offset":6360}}},{"type":"text","value":"（函数在","position":{"start":{"line":300,"column":18,"offset":6360},"end":{"line":300,"column":22,"offset":6364}}},{"type":"raw","value":"<code class=\"language-text\">proc.c</code>","position":{"start":{"line":300,"column":22,"offset":6364},"end":{"line":300,"column":30,"offset":6372}}},{"type":"text","value":"中，函数返回的","position":{"start":{"line":300,"column":30,"offset":6372},"end":{"line":300,"column":37,"offset":6379}}},{"type":"raw","value":"<code class=\"language-text\">struct proc</code>","position":{"start":{"line":300,"column":37,"offset":6379},"end":{"line":300,"column":50,"offset":6392}}},{"type":"text","value":"在","position":{"start":{"line":300,"column":50,"offset":6392},"end":{"line":300,"column":51,"offset":6393}}},{"type":"raw","value":"<code class=\"language-text\">proc.h</code>","position":{"start":{"line":300,"column":51,"offset":6393},"end":{"line":300,"column":59,"offset":6401}}},{"type":"text","value":"中）。","position":{"start":{"line":300,"column":59,"offset":6401},"end":{"line":300,"column":62,"offset":6404}}},{"type":"raw","value":"<code class=\"language-text\">myproc()-&gt;tf = tf;</code>","position":{"start":{"line":300,"column":62,"offset":6404},"end":{"line":300,"column":82,"offset":6424}}},{"type":"text","value":"会被当成当前的system call的单数。注意这个","position":{"start":{"line":300,"column":82,"offset":6424},"end":{"line":300,"column":108,"offset":6450}}},{"type":"raw","value":"<code class=\"language-text\">myproc</code>","position":{"start":{"line":300,"column":108,"offset":6450},"end":{"line":300,"column":116,"offset":6458}}},{"type":"text","value":"函数很重要，返回的永远都是当前的process，所以可以在其他函数中通过调用它达到共享参数的功能：","position":{"start":{"line":300,"column":116,"offset":6458},"end":{"line":300,"column":165,"offset":6507}}}],"position":{"start":{"line":300,"column":1,"offset":6343},"end":{"line":300,"column":165,"offset":6507}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\"><span class=\"token comment\">// Disable interrupts so that we are not rescheduled</span>\n<span class=\"token comment\">// while reading proc from the cpu structure</span>\n<span class=\"token keyword\">struct</span> <span class=\"token class-name\">proc</span><span class=\"token operator\">*</span>\n<span class=\"token function\">myproc</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">struct</span> <span class=\"token class-name\">cpu</span> <span class=\"token operator\">*</span>c<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">struct</span> <span class=\"token class-name\">proc</span> <span class=\"token operator\">*</span>p<span class=\"token punctuation\">;</span>\n  <span class=\"token function\">pushcli</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  c <span class=\"token operator\">=</span> <span class=\"token function\">mycpu</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  p <span class=\"token operator\">=</span> c<span class=\"token operator\">-></span>proc<span class=\"token punctuation\">;</span>\n  <span class=\"token function\">popcli</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> p<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":302,"column":1,"offset":6509},"end":{"line":315,"column":4,"offset":6747}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"然后就调用","position":{"start":{"line":317,"column":1,"offset":6749},"end":{"line":317,"column":6,"offset":6754}}},{"type":"raw","value":"<code class=\"language-text\">sycall()</code>","position":{"start":{"line":317,"column":6,"offset":6754},"end":{"line":317,"column":16,"offset":6764}}},{"type":"text","value":"，在","position":{"start":{"line":317,"column":16,"offset":6764},"end":{"line":317,"column":18,"offset":6766}}},{"type":"raw","value":"<code class=\"language-text\">syscall.c</code>","position":{"start":{"line":317,"column":18,"offset":6766},"end":{"line":317,"column":29,"offset":6777}}},{"type":"text","value":"中","position":{"start":{"line":317,"column":29,"offset":6777},"end":{"line":317,"column":30,"offset":6778}}}],"position":{"start":{"line":317,"column":1,"offset":6749},"end":{"line":317,"column":30,"offset":6778}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\"><span class=\"token keyword\">void</span>\n<span class=\"token function\">syscall</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">int</span> num<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">struct</span> <span class=\"token class-name\">proc</span> <span class=\"token operator\">*</span>curproc <span class=\"token operator\">=</span> <span class=\"token function\">myproc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  num <span class=\"token operator\">=</span> curproc<span class=\"token operator\">-></span>tf<span class=\"token operator\">-></span>eax<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>num <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> num <span class=\"token operator\">&lt;</span> <span class=\"token function\">NELEM</span><span class=\"token punctuation\">(</span>syscalls<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> syscalls<span class=\"token punctuation\">[</span>num<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    curproc<span class=\"token operator\">-></span>tf<span class=\"token operator\">-></span>eax <span class=\"token operator\">=</span> syscalls<span class=\"token punctuation\">[</span>num<span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">cprintf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d %s: unknown sys call %d\\n\"</span><span class=\"token punctuation\">,</span>\n            curproc<span class=\"token operator\">-></span>pid<span class=\"token punctuation\">,</span> curproc<span class=\"token operator\">-></span>name<span class=\"token punctuation\">,</span> num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    curproc<span class=\"token operator\">-></span>tf<span class=\"token operator\">-></span>eax <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":319,"column":1,"offset":6780},"end":{"line":334,"column":4,"offset":7115}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"用","position":{"start":{"line":336,"column":1,"offset":7117},"end":{"line":336,"column":2,"offset":7118}}},{"type":"raw","value":"<code class=\"language-text\">curproc-&gt;tf-&gt;eax</code>","position":{"start":{"line":336,"column":2,"offset":7118},"end":{"line":336,"column":20,"offset":7136}}},{"type":"text","value":"得到当前的system call的序号，这里是","position":{"start":{"line":336,"column":20,"offset":7136},"end":{"line":336,"column":43,"offset":7159}}},{"type":"raw","value":"<code class=\"language-text\">0x10</code>","position":{"start":{"line":336,"column":43,"offset":7159},"end":{"line":336,"column":49,"offset":7165}}},{"type":"text","value":"，对应的函数是","position":{"start":{"line":336,"column":49,"offset":7165},"end":{"line":336,"column":56,"offset":7172}}},{"type":"raw","value":"<code class=\"language-text\">sys_write</code>","position":{"start":{"line":336,"column":56,"offset":7172},"end":{"line":336,"column":67,"offset":7183}}},{"type":"text","value":"，而","position":{"start":{"line":336,"column":67,"offset":7183},"end":{"line":336,"column":69,"offset":7185}}},{"type":"raw","value":"<code class=\"language-text\">sys_write</code>","position":{"start":{"line":336,"column":69,"offset":7185},"end":{"line":336,"column":80,"offset":7196}}},{"type":"text","value":"在","position":{"start":{"line":336,"column":80,"offset":7196},"end":{"line":336,"column":81,"offset":7197}}},{"type":"raw","value":"<code class=\"language-text\">sysfile.c</code>","position":{"start":{"line":336,"column":81,"offset":7197},"end":{"line":336,"column":92,"offset":7208}}},{"type":"text","value":"中，","position":{"start":{"line":336,"column":92,"offset":7208},"end":{"line":336,"column":94,"offset":7210}}}],"position":{"start":{"line":336,"column":1,"offset":7117},"end":{"line":336,"column":94,"offset":7210}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\"><span class=\"token keyword\">int</span>\n<span class=\"token function\">sys_write</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">struct</span> <span class=\"token class-name\">file</span> <span class=\"token operator\">*</span>f<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">int</span> n<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>p<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">argfd</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>f<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> <span class=\"token function\">argint</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>n<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> <span class=\"token function\">argptr</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>p<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token function\">filewrite</span><span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":338,"column":1,"offset":7212},"end":{"line":349,"column":4,"offset":7398}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"上面的","position":{"start":{"line":351,"column":1,"offset":7400},"end":{"line":351,"column":4,"offset":7403}}},{"type":"raw","value":"<code class=\"language-text\">arg*</code>","position":{"start":{"line":351,"column":4,"offset":7403},"end":{"line":351,"column":10,"offset":7409}}},{"type":"text","value":"函数会从user stack中读取","position":{"start":{"line":351,"column":10,"offset":7409},"end":{"line":351,"column":27,"offset":7426}}},{"type":"raw","value":"<code class=\"language-text\">write(fd, buf, n)</code>","position":{"start":{"line":351,"column":27,"offset":7426},"end":{"line":351,"column":46,"offset":7445}}},{"type":"text","value":"的参数，例如","position":{"start":{"line":351,"column":46,"offset":7445},"end":{"line":351,"column":52,"offset":7451}}},{"type":"raw","value":"<code class=\"language-text\">argint</code>","position":{"start":{"line":351,"column":52,"offset":7451},"end":{"line":351,"column":60,"offset":7459}}},{"type":"text","value":"函数在","position":{"start":{"line":351,"column":60,"offset":7459},"end":{"line":351,"column":63,"offset":7462}}},{"type":"raw","value":"<code class=\"language-text\">syscall.c</code>","position":{"start":{"line":351,"column":63,"offset":7462},"end":{"line":351,"column":74,"offset":7473}}},{"type":"text","value":"中：","position":{"start":{"line":351,"column":74,"offset":7473},"end":{"line":351,"column":76,"offset":7475}}}],"position":{"start":{"line":351,"column":1,"offset":7400},"end":{"line":351,"column":76,"offset":7475}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\"><span class=\"token comment\">// Fetch the nth 32-bit system call argument.</span>\n<span class=\"token keyword\">int</span>\n<span class=\"token function\">argint</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> n<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> <span class=\"token operator\">*</span>ip<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token function\">fetchint</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token function\">myproc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span>tf<span class=\"token operator\">-></span>esp<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">4</span> <span class=\"token operator\">+</span> <span class=\"token number\">4</span><span class=\"token operator\">*</span>n<span class=\"token punctuation\">,</span> ip<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":353,"column":1,"offset":7477},"end":{"line":359,"column":4,"offset":7616}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"就是从","position":{"start":{"line":361,"column":1,"offset":7618},"end":{"line":361,"column":4,"offset":7621}}},{"type":"raw","value":"<code class=\"language-text\">myproc()</code>","position":{"start":{"line":361,"column":4,"offset":7621},"end":{"line":361,"column":14,"offset":7631}}},{"type":"text","value":"中读出整数。等写入完了，也就是","position":{"start":{"line":361,"column":14,"offset":7631},"end":{"line":361,"column":29,"offset":7646}}},{"type":"raw","value":"<code class=\"language-text\">sys_write</code>","position":{"start":{"line":361,"column":29,"offset":7646},"end":{"line":361,"column":40,"offset":7657}}},{"type":"text","value":"中的","position":{"start":{"line":361,"column":40,"offset":7657},"end":{"line":361,"column":42,"offset":7659}}},{"type":"raw","value":"<code class=\"language-text\">filewrite</code>","position":{"start":{"line":361,"column":42,"offset":7659},"end":{"line":361,"column":53,"offset":7670}}},{"type":"text","value":"返回了，就开始一层一层返回，最终要还原user register。我们来一步一步看这个。","position":{"start":{"line":361,"column":53,"offset":7670},"end":{"line":361,"column":97,"offset":7714}}}],"position":{"start":{"line":361,"column":1,"offset":7618},"end":{"line":361,"column":97,"offset":7714}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">syscall</code>","position":{"start":{"line":363,"column":1,"offset":7716},"end":{"line":363,"column":10,"offset":7725}}},{"type":"text","value":"函数把","position":{"start":{"line":363,"column":10,"offset":7725},"end":{"line":363,"column":13,"offset":7728}}},{"type":"raw","value":"<code class=\"language-text\">filewrite</code>","position":{"start":{"line":363,"column":13,"offset":7728},"end":{"line":363,"column":24,"offset":7739}}},{"type":"text","value":"的返回值设为了","position":{"start":{"line":363,"column":24,"offset":7739},"end":{"line":363,"column":31,"offset":7746}}},{"type":"raw","value":"<code class=\"language-text\">curproc-&gt;tf-&gt;eax</code>","position":{"start":{"line":363,"column":31,"offset":7746},"end":{"line":363,"column":49,"offset":7764}}},{"type":"text","value":"，之后就一步一步没有操作得返回到了","position":{"start":{"line":363,"column":49,"offset":7764},"end":{"line":363,"column":66,"offset":7781}}},{"type":"raw","value":"<code class=\"language-text\">trapasm.S</code>","position":{"start":{"line":363,"column":66,"offset":7781},"end":{"line":363,"column":77,"offset":7792}}},{"type":"text","value":"。之后一连串直接运行到","position":{"start":{"line":363,"column":77,"offset":7792},"end":{"line":363,"column":88,"offset":7803}}},{"type":"raw","value":"<code class=\"language-text\">iret</code>","position":{"start":{"line":363,"column":88,"offset":7803},"end":{"line":363,"column":94,"offset":7809}}},{"type":"text","value":"。在运行","position":{"start":{"line":363,"column":94,"offset":7809},"end":{"line":363,"column":98,"offset":7813}}},{"type":"raw","value":"<code class=\"language-text\">iret</code>","position":{"start":{"line":363,"column":98,"offset":7813},"end":{"line":363,"column":104,"offset":7819}}},{"type":"text","value":"之前，就已经把除了","position":{"start":{"line":363,"column":104,"offset":7819},"end":{"line":363,"column":113,"offset":7828}}},{"type":"raw","value":"<code class=\"language-text\">int</code>","position":{"start":{"line":363,"column":113,"offset":7828},"end":{"line":363,"column":118,"offset":7833}}},{"type":"text","value":"保存的那5个register以外的都恢复了，","position":{"start":{"line":363,"column":118,"offset":7833},"end":{"line":363,"column":140,"offset":7855}}},{"type":"raw","value":"<code class=\"language-text\">iret</code>","position":{"start":{"line":363,"column":140,"offset":7855},"end":{"line":363,"column":146,"offset":7861}}},{"type":"text","value":"会把","position":{"start":{"line":363,"column":146,"offset":7861},"end":{"line":363,"column":148,"offset":7863}}},{"type":"raw","value":"<code class=\"language-text\">eip</code>","position":{"start":{"line":363,"column":148,"offset":7863},"end":{"line":363,"column":153,"offset":7868}}},{"type":"text","value":", ","position":{"start":{"line":363,"column":153,"offset":7868},"end":{"line":363,"column":155,"offset":7870}}},{"type":"raw","value":"<code class=\"language-text\">cs</code>","position":{"start":{"line":363,"column":155,"offset":7870},"end":{"line":363,"column":159,"offset":7874}}},{"type":"text","value":", ","position":{"start":{"line":363,"column":159,"offset":7874},"end":{"line":363,"column":161,"offset":7876}}},{"type":"raw","value":"<code class=\"language-text\">eflags</code>","position":{"start":{"line":363,"column":161,"offset":7876},"end":{"line":363,"column":169,"offset":7884}}},{"type":"text","value":", ","position":{"start":{"line":363,"column":169,"offset":7884},"end":{"line":363,"column":171,"offset":7886}}},{"type":"raw","value":"<code class=\"language-text\">esp</code>","position":{"start":{"line":363,"column":171,"offset":7886},"end":{"line":363,"column":176,"offset":7891}}},{"type":"text","value":", ","position":{"start":{"line":363,"column":176,"offset":7891},"end":{"line":363,"column":178,"offset":7893}}},{"type":"raw","value":"<code class=\"language-text\">ss</code>","position":{"start":{"line":363,"column":178,"offset":7893},"end":{"line":363,"column":182,"offset":7897}}},{"type":"text","value":"这5个还原，因为还原了","position":{"start":{"line":363,"column":182,"offset":7897},"end":{"line":363,"column":193,"offset":7908}}},{"type":"raw","value":"<code class=\"language-text\">cs</code>","position":{"start":{"line":363,"column":193,"offset":7908},"end":{"line":363,"column":197,"offset":7912}}},{"type":"text","value":"，所以也把模式 还原到了CPL=3，user mode。从而完成了","position":{"start":{"line":363,"column":197,"offset":7912},"end":{"line":363,"column":230,"offset":7945}}}],"position":{"start":{"line":363,"column":1,"offset":7716},"end":{"line":363,"column":230,"offset":7945}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"assembly\"><pre class=\"language-assembly\"><code class=\"language-assembly\">(gdb) info reg\neax            0x3f7a   16250\necx            0x20     32\nedx            0x0      0\nebx            0x20     32\nesp            0x3f4c   0x3f4c\nebp            0x3f98   0x3f98\nesi            0x11ba   4538\nedi            0x0      0\neip            0xd32    0xd32\neflags         0x216    [ PF AF IF ]\ncs             0x1b     27\nss             0x23     35\nds             0x23     35\nes             0x23     35\nfs             0x0      0\ngs             0x0      0</code></pre></div>","position":{"start":{"line":365,"column":1,"offset":7947},"end":{"line":383,"column":4,"offset":8431}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"还原之后的register（不是很知道这些许的不同是什么意思，不过不同的都不是","position":{"start":{"line":385,"column":1,"offset":8433},"end":{"line":385,"column":40,"offset":8472}}},{"type":"raw","value":"<code class=\"language-text\">iret</code>","position":{"start":{"line":385,"column":40,"offset":8472},"end":{"line":385,"column":46,"offset":8478}}},{"type":"text","value":"还原的，应该就是调用system call所需要产生的变化吧）。","position":{"start":{"line":385,"column":46,"offset":8478},"end":{"line":385,"column":78,"offset":8510}}}],"position":{"start":{"line":385,"column":1,"offset":8433},"end":{"line":385,"column":78,"offset":8510}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"总结一下：","position":{"start":{"line":387,"column":1,"offset":8512},"end":{"line":387,"column":6,"offset":8517}}}],"position":{"start":{"line":387,"column":1,"offset":8512},"end":{"line":387,"column":6,"offset":8517}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"INT -> alltrap -> trap -> syscall -> syswrite -> IRET","position":{"start":{"line":389,"column":3,"offset":8521},"end":{"line":389,"column":56,"offset":8574}}}],"position":{"start":{"line":389,"column":1,"offset":8519},"end":{"line":390,"column":1,"offset":8575}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"user/kernel transition是很复杂的，如果出了个bug就gg了。","position":{"start":{"line":391,"column":3,"offset":8578},"end":{"line":391,"column":44,"offset":8619}}}],"position":{"start":{"line":391,"column":1,"offset":8576},"end":{"line":391,"column":44,"offset":8619}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"kernel必须假设process是有敌意的，不能相信user stack，而且需要在kernel里面检查argument（应该是指syswrite里的argument检查）。","position":{"start":{"line":392,"column":3,"offset":8622},"end":{"line":392,"column":91,"offset":8710}}}],"position":{"start":{"line":392,"column":1,"offset":8620},"end":{"line":392,"column":91,"offset":8710}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"下一讲会讲解page table是怎么限制user program可以读写的内存的。","position":{"start":{"line":393,"column":3,"offset":8713},"end":{"line":393,"column":45,"offset":8755}}}],"position":{"start":{"line":393,"column":1,"offset":8711},"end":{"line":393,"column":45,"offset":8755}}},{"type":"text","value":"\n"}],"position":{"start":{"line":389,"column":1,"offset":8519},"end":{"line":393,"column":45,"offset":8755}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":395,"column":1,"offset":8757}}}}