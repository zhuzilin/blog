{"expireTime":9007200818315815000,"key":"transformer-remark-markdown-ast-f50adddb0de3624dbbd4ad8acdbbd374-gatsby-remark-katexgatsby-remark-prismjs-","val":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"实习很闲，趁着没事，学学haskell和写parser。对于这两者来说，非常重要的一个概念就是monad。看知乎的解释看得头疼，自己在网上扒了些资源，来这里来讨论一下monad。","position":{"start":{"line":2,"column":1,"offset":2},"end":{"line":2,"column":90,"offset":91},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":2},"end":{"line":2,"column":90,"offset":91},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"本篇的主要引用来自wikibooks中的","position":{"start":{"line":4,"column":1,"offset":95},"end":{"line":4,"column":21,"offset":115},"indent":[]}},{"type":"link","title":null,"url":"https://en.wikibooks.org/wiki/Haskell","children":[{"type":"text","value":"Haskell","position":{"start":{"line":4,"column":22,"offset":116},"end":{"line":4,"column":29,"offset":123},"indent":[]}}],"position":{"start":{"line":4,"column":21,"offset":115},"end":{"line":4,"column":71,"offset":165},"indent":[]}},{"type":"text","value":"。以及不计划设计那种很玄很玄的数学知识。","position":{"start":{"line":4,"column":71,"offset":165},"end":{"line":4,"column":91,"offset":185},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":95},"end":{"line":4,"column":91,"offset":185},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Functor","position":{"start":{"line":6,"column":4,"offset":192},"end":{"line":6,"column":11,"offset":199},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":189},"end":{"line":6,"column":11,"offset":199},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"monad可以理解为一个haskell的class，或者说是类似java或者C#的interface。而这个接口实际上和其他的几个接口息息相关。所以先介绍一下其他的几个更简单的，从","position":{"start":{"line":8,"column":1,"offset":203},"end":{"line":8,"column":91,"offset":293},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Functor</code>","position":{"start":{"line":8,"column":91,"offset":293},"end":{"line":8,"column":100,"offset":302},"indent":[]}},{"type":"text","value":"开始。","position":{"start":{"line":8,"column":100,"offset":302},"end":{"line":8,"column":103,"offset":305},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":203},"end":{"line":8,"column":103,"offset":305},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"对于函数式编程，极为常用的一个函数就是","position":{"start":{"line":10,"column":1,"offset":309},"end":{"line":10,"column":20,"offset":328},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">map</code>","position":{"start":{"line":10,"column":20,"offset":328},"end":{"line":10,"column":25,"offset":333},"indent":[]}},{"type":"text","value":"，也就是对一个list的每一个元素施加某一个函数，返回一个新的list。也就是","position":{"start":{"line":10,"column":25,"offset":333},"end":{"line":10,"column":64,"offset":372},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":309},"end":{"line":10,"column":64,"offset":372},"indent":[]}},{"type":"html","lang":"haskell","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"haskell\"><pre class=\"language-haskell\"><code class=\"language-haskell\"><span class=\"token builtin\">map</span> <span class=\"token operator\">::</span> <span class=\"token punctuation\">(</span><span class=\"token hvariable\">a</span> <span class=\"token operator\">-></span> <span class=\"token hvariable\">b</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token operator\">></span> <span class=\"token punctuation\">[</span><span class=\"token hvariable\">a</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-></span> <span class=\"token punctuation\">[</span><span class=\"token hvariable\">b</span><span class=\"token punctuation\">]</span></code></pre></div>","position":{"start":{"line":12,"column":1,"offset":376},"end":{"line":14,"column":4,"offset":423},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"同样，对于树，对于","position":{"start":{"line":16,"column":1,"offset":427},"end":{"line":16,"column":10,"offset":436},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Maybe</code>","position":{"start":{"line":16,"column":10,"offset":436},"end":{"line":16,"column":17,"offset":443},"indent":[]}},{"type":"text","value":"，我们经常需要这样类似的map操作。那么为什么不把其提为一个class呢？这样我们就不需要记忆各种不同map的名字了。根据这个简单的理由，我们有了：","position":{"start":{"line":16,"column":17,"offset":443},"end":{"line":16,"column":91,"offset":517},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":427},"end":{"line":16,"column":91,"offset":517},"indent":[]}},{"type":"html","lang":"haskell","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"haskell\"><pre class=\"language-haskell\"><code class=\"language-haskell\"><span class=\"token keyword\">class</span> <span class=\"token constant\">Functor</span> <span class=\"token hvariable\">f</span> <span class=\"token keyword\">where</span>\n\t<span class=\"token builtin\">fmap</span> <span class=\"token operator\">::</span> <span class=\"token punctuation\">(</span><span class=\"token hvariable\">a</span> <span class=\"token operator\">-></span> <span class=\"token hvariable\">b</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token hvariable\">f</span> <span class=\"token hvariable\">a</span> <span class=\"token operator\">-></span> <span class=\"token hvariable\">fb</span></code></pre></div>","position":{"start":{"line":18,"column":1,"offset":521},"end":{"line":21,"column":4,"offset":591},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"而实现一个","position":{"start":{"line":23,"column":1,"offset":595},"end":{"line":23,"column":6,"offset":600},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Functor</code>","position":{"start":{"line":23,"column":6,"offset":600},"end":{"line":23,"column":15,"offset":609},"indent":[]}},{"type":"text","value":"就可以直接","position":{"start":{"line":23,"column":15,"offset":609},"end":{"line":23,"column":20,"offset":614},"indent":[]}}],"position":{"start":{"line":23,"column":1,"offset":595},"end":{"line":23,"column":20,"offset":614},"indent":[]}},{"type":"html","lang":"haskell","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"haskell\"><pre class=\"language-haskell\"><code class=\"language-haskell\"><span class=\"token keyword\">instance</span> <span class=\"token constant\">Functor</span> <span class=\"token constant\">Maybe</span> <span class=\"token keyword\">where</span>\n    <span class=\"token builtin\">fmap</span> <span class=\"token hvariable\">f</span> <span class=\"token constant\">Nothing</span>  <span class=\"token operator\">=</span> <span class=\"token constant\">Nothing</span>\n    <span class=\"token builtin\">fmap</span> <span class=\"token hvariable\">f</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">Just</span> <span class=\"token hvariable\">x</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token constant\">Just</span> <span class=\"token punctuation\">(</span><span class=\"token hvariable\">f</span> <span class=\"token hvariable\">x</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":25,"column":1,"offset":618},"end":{"line":29,"column":4,"offset":728},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"或者","position":{"start":{"line":31,"column":1,"offset":732},"end":{"line":31,"column":3,"offset":734},"indent":[]}}],"position":{"start":{"line":31,"column":1,"offset":732},"end":{"line":31,"column":3,"offset":734},"indent":[]}},{"type":"html","lang":"haskell","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"haskell\"><pre class=\"language-haskell\"><code class=\"language-haskell\"><span class=\"token keyword\">instance</span> <span class=\"token constant\">Functor</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">where</span>\n\t<span class=\"token builtin\">fmap</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">map</span></code></pre></div>","position":{"start":{"line":33,"column":1,"offset":738},"end":{"line":36,"column":4,"offset":793},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">fmap</code>","position":{"start":{"line":38,"column":1,"offset":797},"end":{"line":38,"column":7,"offset":803},"indent":[]}},{"type":"text","value":"有以下的一些性质：","position":{"start":{"line":38,"column":7,"offset":803},"end":{"line":38,"column":16,"offset":812},"indent":[]}}],"position":{"start":{"line":38,"column":1,"offset":797},"end":{"line":38,"column":16,"offset":812},"indent":[]}},{"type":"html","lang":"haskell","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"haskell\"><pre class=\"language-haskell\"><code class=\"language-haskell\"><span class=\"token builtin\">fmap</span> <span class=\"token builtin\">id</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">id</span>\n<span class=\"token builtin\">fmap</span> <span class=\"token punctuation\">(</span><span class=\"token hvariable\">g</span><span class=\"token operator\"> . </span><span class=\"token hvariable\">f</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">fmap</span> <span class=\"token hvariable\">g</span><span class=\"token operator\"> . </span><span class=\"token builtin\">fmap</span> <span class=\"token hvariable\">f</span></code></pre></div>","position":{"start":{"line":40,"column":1,"offset":816},"end":{"line":43,"column":4,"offset":877},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"可以用","position":{"start":{"line":45,"column":1,"offset":881},"end":{"line":45,"column":4,"offset":884},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">&lt;$&gt;</code>","position":{"start":{"line":45,"column":4,"offset":884},"end":{"line":45,"column":9,"offset":889},"indent":[]}},{"type":"text","value":"表示","position":{"start":{"line":45,"column":9,"offset":889},"end":{"line":45,"column":11,"offset":891},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">fmap</code>","position":{"start":{"line":45,"column":11,"offset":891},"end":{"line":45,"column":17,"offset":897},"indent":[]}},{"type":"text","value":"。","position":{"start":{"line":45,"column":17,"offset":897},"end":{"line":45,"column":18,"offset":898},"indent":[]}}],"position":{"start":{"line":45,"column":1,"offset":881},"end":{"line":45,"column":18,"offset":898},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Applicative Functor","position":{"start":{"line":47,"column":4,"offset":905},"end":{"line":47,"column":23,"offset":924},"indent":[]}}],"position":{"start":{"line":47,"column":1,"offset":902},"end":{"line":47,"column":23,"offset":924},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"上述的","position":{"start":{"line":49,"column":1,"offset":928},"end":{"line":49,"column":4,"offset":931},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">fmap</code>","position":{"start":{"line":49,"column":4,"offset":931},"end":{"line":49,"column":10,"offset":937},"indent":[]}},{"type":"text","value":"的缺点在哪里呢？在于调用的函数只能是","position":{"start":{"line":49,"column":10,"offset":937},"end":{"line":49,"column":28,"offset":955},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">a -&gt; b</code>","position":{"start":{"line":49,"column":28,"offset":955},"end":{"line":49,"column":36,"offset":963},"indent":[]}},{"type":"text","value":"，换句话说，只能是1个参数的。但是如果要调用超过1个函数的，就会发现，如","position":{"start":{"line":49,"column":36,"offset":963},"end":{"line":49,"column":72,"offset":999},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">fmap (+) Maybe 3</code>","position":{"start":{"line":49,"column":72,"offset":999},"end":{"line":49,"column":90,"offset":1017},"indent":[]}},{"type":"text","value":"的类型是","position":{"start":{"line":49,"column":90,"offset":1017},"end":{"line":49,"column":94,"offset":1021},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Mapbe (Int -&gt; Int)</code>","position":{"start":{"line":49,"column":94,"offset":1021},"end":{"line":49,"column":114,"offset":1041},"indent":[]}},{"type":"text","value":"，也就不能直接再进行","position":{"start":{"line":49,"column":114,"offset":1041},"end":{"line":49,"column":124,"offset":1051},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">fmap (+) Maybe 3 Maybe 4</code>","position":{"start":{"line":49,"column":124,"offset":1051},"end":{"line":49,"column":150,"offset":1077},"indent":[]}},{"type":"text","value":"这样的计算了。","position":{"start":{"line":49,"column":150,"offset":1077},"end":{"line":49,"column":157,"offset":1084},"indent":[]}}],"position":{"start":{"line":49,"column":1,"offset":928},"end":{"line":49,"column":157,"offset":1084},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"所以我们需要一个新的函数，能够让","position":{"start":{"line":51,"column":1,"offset":1088},"end":{"line":51,"column":17,"offset":1104},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Maybe (a -&gt; b)</code>","position":{"start":{"line":51,"column":17,"offset":1104},"end":{"line":51,"column":33,"offset":1120},"indent":[]}},{"type":"text","value":"调用","position":{"start":{"line":51,"column":33,"offset":1120},"end":{"line":51,"column":35,"offset":1122},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Maybe a</code>","position":{"start":{"line":51,"column":35,"offset":1122},"end":{"line":51,"column":44,"offset":1131},"indent":[]}},{"type":"text","value":"得到","position":{"start":{"line":51,"column":44,"offset":1131},"end":{"line":51,"column":46,"offset":1133},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Maybe b</code>","position":{"start":{"line":51,"column":46,"offset":1133},"end":{"line":51,"column":55,"offset":1142},"indent":[]}},{"type":"text","value":"，也就是：","position":{"start":{"line":51,"column":55,"offset":1142},"end":{"line":51,"column":60,"offset":1147},"indent":[]}}],"position":{"start":{"line":51,"column":1,"offset":1088},"end":{"line":51,"column":60,"offset":1147},"indent":[]}},{"type":"html","lang":"haskell","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"haskell\"><pre class=\"language-haskell\"><code class=\"language-haskell\"><span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;*></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">::</span> <span class=\"token constant\">Maybe</span> <span class=\"token punctuation\">(</span><span class=\"token hvariable\">a</span> <span class=\"token operator\">-></span> <span class=\"token hvariable\">b</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token constant\">Maybe</span> <span class=\"token hvariable\">a</span> <span class=\"token operator\">-></span> <span class=\"token constant\">Maybe</span> <span class=\"token hvariable\">b</span></code></pre></div>","position":{"start":{"line":53,"column":1,"offset":1151},"end":{"line":55,"column":4,"offset":1213},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"对于","position":{"start":{"line":57,"column":1,"offset":1217},"end":{"line":57,"column":3,"offset":1219},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Maybe</code>","position":{"start":{"line":57,"column":3,"offset":1219},"end":{"line":57,"column":10,"offset":1226},"indent":[]}},{"type":"text","value":"，其具体实现是：","position":{"start":{"line":57,"column":10,"offset":1226},"end":{"line":57,"column":18,"offset":1234},"indent":[]}}],"position":{"start":{"line":57,"column":1,"offset":1217},"end":{"line":57,"column":18,"offset":1234},"indent":[]}},{"type":"html","lang":"haskell","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"haskell\"><pre class=\"language-haskell\"><code class=\"language-haskell\"><span class=\"token keyword\">instance</span> <span class=\"token constant\">Applicative</span> <span class=\"token constant\">Maybe</span> <span class=\"token keyword\">where</span>\n    <span class=\"token hvariable\">pure</span>                  <span class=\"token operator\">=</span> <span class=\"token constant\">Just</span>\n    <span class=\"token punctuation\">(</span><span class=\"token constant\">Just</span> <span class=\"token hvariable\">f</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;*></span> <span class=\"token punctuation\">(</span><span class=\"token constant\">Just</span> <span class=\"token hvariable\">x</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token constant\">Just</span> <span class=\"token punctuation\">(</span><span class=\"token hvariable\">f</span> <span class=\"token hvariable\">x</span><span class=\"token punctuation\">)</span>\n    <span class=\"token hvariable\">_</span>        <span class=\"token operator\">&lt;*></span> <span class=\"token hvariable\">_</span>        <span class=\"token operator\">=</span> <span class=\"token constant\">Nothing</span></code></pre></div>","position":{"start":{"line":59,"column":1,"offset":1238},"end":{"line":64,"column":4,"offset":1398},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"这样","position":{"start":{"line":66,"column":1,"offset":1402},"end":{"line":66,"column":3,"offset":1404},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">fmap (+) (Just 3) &lt;*&gt; Just 4</code>","position":{"start":{"line":66,"column":3,"offset":1404},"end":{"line":66,"column":33,"offset":1434},"indent":[]}},{"type":"text","value":"就可以返回","position":{"start":{"line":66,"column":33,"offset":1434},"end":{"line":66,"column":38,"offset":1439},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Just 7</code>","position":{"start":{"line":66,"column":38,"offset":1439},"end":{"line":66,"column":46,"offset":1447},"indent":[]}},{"type":"text","value":"了。","position":{"start":{"line":66,"column":46,"offset":1447},"end":{"line":66,"column":48,"offset":1449},"indent":[]}}],"position":{"start":{"line":66,"column":1,"offset":1402},"end":{"line":66,"column":48,"offset":1449},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"不过，值得注意的是，并不是所有","position":{"start":{"line":68,"column":1,"offset":1453},"end":{"line":68,"column":16,"offset":1468},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Applicative</code>","position":{"start":{"line":68,"column":16,"offset":1468},"end":{"line":68,"column":29,"offset":1481},"indent":[]}},{"type":"text","value":"类实现的","position":{"start":{"line":68,"column":29,"offset":1481},"end":{"line":68,"column":33,"offset":1485},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">&lt;*&gt;</code>","position":{"start":{"line":68,"column":33,"offset":1485},"end":{"line":68,"column":38,"offset":1490},"indent":[]}},{"type":"text","value":"都是像","position":{"start":{"line":68,"column":38,"offset":1490},"end":{"line":68,"column":41,"offset":1493},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Maybe</code>","position":{"start":{"line":68,"column":41,"offset":1493},"end":{"line":68,"column":48,"offset":1500},"indent":[]}},{"type":"text","value":"这样简单。比如","position":{"start":{"line":68,"column":48,"offset":1500},"end":{"line":68,"column":55,"offset":1507},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">[]</code>","position":{"start":{"line":68,"column":55,"offset":1507},"end":{"line":68,"column":59,"offset":1511},"indent":[]}},{"type":"text","value":"，就是：","position":{"start":{"line":68,"column":59,"offset":1511},"end":{"line":68,"column":63,"offset":1515},"indent":[]}}],"position":{"start":{"line":68,"column":1,"offset":1453},"end":{"line":68,"column":63,"offset":1515},"indent":[]}},{"type":"html","lang":"haskell","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"haskell\"><pre class=\"language-haskell\"><code class=\"language-haskell\"><span class=\"token keyword\">instance</span> <span class=\"token constant\">Applicative</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">where</span>\n    <span class=\"token hvariable\">pure</span> <span class=\"token hvariable\">x</span>    <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token hvariable\">x</span><span class=\"token punctuation\">]</span>\n    <span class=\"token hvariable\">fs</span> <span class=\"token operator\">&lt;*></span> <span class=\"token hvariable\">xs</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token hvariable\">f</span> <span class=\"token hvariable\">x</span> <span class=\"token operator\">|</span> <span class=\"token hvariable\">f</span> <span class=\"token operator\">&lt;-</span> <span class=\"token hvariable\">fs</span><span class=\"token punctuation\">,</span> <span class=\"token hvariable\">x</span> <span class=\"token operator\">&lt;-</span> <span class=\"token hvariable\">xs</span><span class=\"token punctuation\">]</span></code></pre></div>","position":{"start":{"line":70,"column":1,"offset":1519},"end":{"line":74,"column":4,"offset":1628},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">&lt;*&gt;</code>","position":{"start":{"line":76,"column":1,"offset":1632},"end":{"line":76,"column":6,"offset":1637},"indent":[]}},{"type":"text","value":"以外，Applicative还实现了几个可以用","position":{"start":{"line":76,"column":6,"offset":1637},"end":{"line":76,"column":29,"offset":1660},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">fmap</code>","position":{"start":{"line":76,"column":29,"offset":1660},"end":{"line":76,"column":35,"offset":1666},"indent":[]}},{"type":"text","value":"和","position":{"start":{"line":76,"column":35,"offset":1666},"end":{"line":76,"column":36,"offset":1667},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">&lt;*&gt;</code>","position":{"start":{"line":76,"column":36,"offset":1667},"end":{"line":76,"column":41,"offset":1672},"indent":[]}},{"type":"text","value":"实现的常见操作。","position":{"start":{"line":76,"column":41,"offset":1672},"end":{"line":76,"column":49,"offset":1680},"indent":[]}}],"position":{"start":{"line":76,"column":1,"offset":1632},"end":{"line":76,"column":49,"offset":1680},"indent":[]}},{"type":"html","lang":"haskell","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"haskell\"><pre class=\"language-haskell\"><code class=\"language-haskell\"><span class=\"token hvariable\">u</span> <span class=\"token operator\">*></span> <span class=\"token hvariable\">v</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">\\</span><span class=\"token hvariable\">_</span> <span class=\"token hvariable\">y</span> <span class=\"token operator\">-></span> <span class=\"token hvariable\">y</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;$></span> <span class=\"token hvariable\">u</span> <span class=\"token operator\">&lt;*></span> <span class=\"token hvariable\">v</span></code></pre></div>","position":{"start":{"line":78,"column":1,"offset":1684},"end":{"line":80,"column":4,"offset":1733},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">*&gt;</code>","position":{"start":{"line":82,"column":1,"offset":1737},"end":{"line":82,"column":5,"offset":1741},"indent":[]}},{"type":"text","value":"是指希望执行一下u，但是u并不是需要的参数。所以比较像是前后依次运行指令。","position":{"start":{"line":82,"column":5,"offset":1741},"end":{"line":82,"column":42,"offset":1778},"indent":[]}}],"position":{"start":{"line":82,"column":1,"offset":1737},"end":{"line":82,"column":42,"offset":1778},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Monad","position":{"start":{"line":84,"column":4,"offset":1785},"end":{"line":84,"column":9,"offset":1790},"indent":[]}}],"position":{"start":{"line":84,"column":1,"offset":1782},"end":{"line":84,"column":9,"offset":1790},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"终于到了Monad的部分了。Monad实际上就是从Applicative Functor更进一步。这个接口需要实现的两个函数为：","position":{"start":{"line":86,"column":1,"offset":1794},"end":{"line":86,"column":65,"offset":1858},"indent":[]}}],"position":{"start":{"line":86,"column":1,"offset":1794},"end":{"line":86,"column":65,"offset":1858},"indent":[]}},{"type":"html","lang":"haskell","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"haskell\"><pre class=\"language-haskell\"><code class=\"language-haskell\"><span class=\"token builtin\">return</span> <span class=\"token operator\">::</span> <span class=\"token hvariable\">a</span> <span class=\"token operator\">-></span> <span class=\"token hvariable\">m</span> <span class=\"token hvariable\">a</span>\n<span class=\"token punctuation\">(</span><span class=\"token operator\">>>=</span><span class=\"token punctuation\">)</span>  <span class=\"token operator\">::</span> <span class=\"token hvariable\">m</span> <span class=\"token hvariable\">a</span> <span class=\"token operator\">-></span> <span class=\"token punctuation\">(</span><span class=\"token hvariable\">a</span> <span class=\"token operator\">-></span> <span class=\"token hvariable\">m</span> <span class=\"token hvariable\">b</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token hvariable\">m</span> <span class=\"token hvariable\">b</span></code></pre></div>","position":{"start":{"line":88,"column":1,"offset":1862},"end":{"line":91,"column":4,"offset":1933},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">return</code>","position":{"start":{"line":93,"column":1,"offset":1937},"end":{"line":93,"column":9,"offset":1945},"indent":[]}},{"type":"text","value":"和Applicative的","position":{"start":{"line":93,"column":9,"offset":1945},"end":{"line":93,"column":22,"offset":1958},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">pure</code>","position":{"start":{"line":93,"column":22,"offset":1958},"end":{"line":93,"column":28,"offset":1964},"indent":[]}},{"type":"text","value":"一样，都是把别的类型，包装在这一类型中的。所以重点就是","position":{"start":{"line":93,"column":28,"offset":1964},"end":{"line":93,"column":55,"offset":1991},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">&gt;&gt;=</code>","position":{"start":{"line":93,"column":55,"offset":1991},"end":{"line":93,"column":60,"offset":1996},"indent":[]}},{"type":"text","value":"。","position":{"start":{"line":93,"column":60,"offset":1996},"end":{"line":93,"column":61,"offset":1997},"indent":[]}}],"position":{"start":{"line":93,"column":1,"offset":1937},"end":{"line":93,"column":61,"offset":1997},"indent":[]}},{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">&gt;&gt;=</code>","position":{"start":{"line":95,"column":1,"offset":2001},"end":{"line":95,"column":6,"offset":2006},"indent":[]}},{"type":"text","value":"的目的是把第一个参数里面的","position":{"start":{"line":95,"column":6,"offset":2006},"end":{"line":95,"column":19,"offset":2019},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">a</code>","position":{"start":{"line":95,"column":19,"offset":2019},"end":{"line":95,"column":22,"offset":2022},"indent":[]}},{"type":"text","value":"作为第二个参数的函数。可以理解为把第一个参数拆箱，然后穿给第二个参数（它是一个函数）。","position":{"start":{"line":95,"column":22,"offset":2022},"end":{"line":95,"column":65,"offset":2065},"indent":[]}}],"position":{"start":{"line":95,"column":1,"offset":2001},"end":{"line":95,"column":65,"offset":2065},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"举个实际的例子：","position":{"start":{"line":97,"column":1,"offset":2069},"end":{"line":97,"column":9,"offset":2077},"indent":[]}}],"position":{"start":{"line":97,"column":1,"offset":2069},"end":{"line":97,"column":9,"offset":2077},"indent":[]}},{"type":"html","lang":"haskell","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"haskell\"><pre class=\"language-haskell\"><code class=\"language-haskell\"><span class=\"token keyword\">instance</span> <span class=\"token constant\">Monad</span> <span class=\"token constant\">Maybe</span> <span class=\"token keyword\">where</span><span class=\"token operator\">:</span>\n    <span class=\"token builtin\">return</span> <span class=\"token operator\">::</span> <span class=\"token hvariable\">a</span> <span class=\"token operator\">-></span> <span class=\"token constant\">Maybe</span> <span class=\"token hvariable\">a</span>\n    <span class=\"token builtin\">return</span> <span class=\"token hvariable\">x</span>  <span class=\"token operator\">=</span> <span class=\"token constant\">Just</span> <span class=\"token hvariable\">x</span>\n\n    <span class=\"token punctuation\">(</span><span class=\"token operator\">>>=</span><span class=\"token punctuation\">)</span>  <span class=\"token operator\">::</span> <span class=\"token constant\">Maybe</span> <span class=\"token hvariable\">a</span> <span class=\"token operator\">-></span> <span class=\"token punctuation\">(</span><span class=\"token hvariable\">a</span> <span class=\"token operator\">-></span> <span class=\"token constant\">Maybe</span> <span class=\"token hvariable\">b</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token constant\">Maybe</span> <span class=\"token hvariable\">b</span>\n    <span class=\"token hvariable\">m</span> <span class=\"token operator\">>>=</span> <span class=\"token hvariable\">g</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">case</span> <span class=\"token hvariable\">m</span> <span class=\"token keyword\">of</span>\n                 <span class=\"token constant\">Nothing</span> <span class=\"token operator\">-></span> <span class=\"token constant\">Nothing</span>\n                 <span class=\"token constant\">Just</span> <span class=\"token hvariable\">x</span>  <span class=\"token operator\">-></span> <span class=\"token hvariable\">g</span> <span class=\"token hvariable\">x</span>\t</code></pre></div>","position":{"start":{"line":99,"column":1,"offset":2081},"end":{"line":108,"column":4,"offset":2327},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"或者","position":{"start":{"line":110,"column":1,"offset":2331},"end":{"line":110,"column":3,"offset":2333},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">[]</code>","position":{"start":{"line":110,"column":3,"offset":2333},"end":{"line":110,"column":7,"offset":2337},"indent":[]}},{"type":"text","value":"的：","position":{"start":{"line":110,"column":7,"offset":2337},"end":{"line":110,"column":9,"offset":2339},"indent":[]}}],"position":{"start":{"line":110,"column":1,"offset":2331},"end":{"line":110,"column":9,"offset":2339},"indent":[]}},{"type":"html","lang":"haskell","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"haskell\"><pre class=\"language-haskell\"><code class=\"language-haskell\"><span class=\"token keyword\">instance</span> <span class=\"token constant\">Monad</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>  <span class=\"token keyword\">where</span>\n    <span class=\"token hvariable\">xs</span> <span class=\"token operator\">>>=</span> <span class=\"token hvariable\">f</span>     <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token hvariable\">y</span> <span class=\"token operator\">|</span> <span class=\"token hvariable\">x</span> <span class=\"token operator\">&lt;-</span> <span class=\"token hvariable\">xs</span><span class=\"token punctuation\">,</span> <span class=\"token hvariable\">y</span> <span class=\"token operator\">&lt;-</span> <span class=\"token hvariable\">f</span> <span class=\"token hvariable\">x</span><span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">(</span><span class=\"token operator\">>></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*></span><span class=\"token punctuation\">)</span>\n    <span class=\"token builtin\">fail</span> <span class=\"token hvariable\">_</span>       <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></code></pre></div>","position":{"start":{"line":112,"column":1,"offset":2343},"end":{"line":117,"column":4,"offset":2468},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"这里","position":{"start":{"line":119,"column":1,"offset":2472},"end":{"line":119,"column":3,"offset":2474},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">fail</code>","position":{"start":{"line":119,"column":3,"offset":2474},"end":{"line":119,"column":9,"offset":2480},"indent":[]}},{"type":"text","value":"是为了错误处理，和Monad没什么关系，是历史遗留问题。然后","position":{"start":{"line":119,"column":9,"offset":2480},"end":{"line":119,"column":39,"offset":2510},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">return</code>","position":{"start":{"line":119,"column":39,"offset":2510},"end":{"line":119,"column":47,"offset":2518},"indent":[]}},{"type":"text","value":"就是","position":{"start":{"line":119,"column":47,"offset":2518},"end":{"line":119,"column":49,"offset":2520},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">pure</code>","position":{"start":{"line":119,"column":49,"offset":2520},"end":{"line":119,"column":55,"offset":2526},"indent":[]}},{"type":"text","value":"所以没有再实现，而","position":{"start":{"line":119,"column":55,"offset":2526},"end":{"line":119,"column":64,"offset":2535},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">&gt;&gt;</code>","position":{"start":{"line":119,"column":64,"offset":2535},"end":{"line":119,"column":68,"offset":2539},"indent":[]}},{"type":"text","value":"的意思是：","position":{"start":{"line":119,"column":68,"offset":2539},"end":{"line":119,"column":73,"offset":2544},"indent":[]}}],"position":{"start":{"line":119,"column":1,"offset":2472},"end":{"line":119,"column":73,"offset":2544},"indent":[]}},{"type":"html","lang":"haskell","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"haskell\"><pre class=\"language-haskell\"><code class=\"language-haskell\"><span class=\"token hvariable\">m</span> <span class=\"token operator\">>></span> <span class=\"token hvariable\">n</span> <span class=\"token operator\">=</span> <span class=\"token hvariable\">m</span> <span class=\"token operator\">>>=</span> <span class=\"token operator\">\\</span><span class=\"token hvariable\">_</span> <span class=\"token operator\">-></span> <span class=\"token hvariable\">n</span></code></pre></div>","position":{"start":{"line":121,"column":1,"offset":2548},"end":{"line":123,"column":4,"offset":2587},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"也就是执行完第一个之后，扔掉返回值，再执行第二个。和Applicative的","position":{"start":{"line":125,"column":1,"offset":2591},"end":{"line":125,"column":39,"offset":2629},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">*&gt;</code>","position":{"start":{"line":125,"column":39,"offset":2629},"end":{"line":125,"column":43,"offset":2633},"indent":[]}},{"type":"text","value":"一样。","position":{"start":{"line":125,"column":43,"offset":2633},"end":{"line":125,"column":46,"offset":2636},"indent":[]}}],"position":{"start":{"line":125,"column":1,"offset":2591},"end":{"line":125,"column":46,"offset":2636},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"因为bind（>>=）实在是很常见，所以在haskell里面有简化写法：","position":{"start":{"line":127,"column":1,"offset":2640},"end":{"line":127,"column":37,"offset":2676},"indent":[]}}],"position":{"start":{"line":127,"column":1,"offset":2640},"end":{"line":127,"column":37,"offset":2676},"indent":[]}},{"type":"html","lang":"haskell","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"haskell\"><pre class=\"language-haskell\"><code class=\"language-haskell\"><span class=\"token keyword\">let</span> <span class=\"token hvariable\">x</span> <span class=\"token operator\">=</span> <span class=\"token hvariable\">foo</span> <span class=\"token keyword\">in</span> <span class=\"token punctuation\">(</span><span class=\"token hvariable\">x</span> <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span>  <span class=\"token hvariable\">corresponds</span> <span class=\"token hvariable\">to</span>  <span class=\"token hvariable\">foo</span>  <span class=\"token operator\">&amp;</span>  <span class=\"token punctuation\">(</span><span class=\"token operator\">\\</span><span class=\"token hvariable\">x</span> <span class=\"token operator\">-></span> <span class=\"token builtin\">id</span> <span class=\"token punctuation\">(</span><span class=\"token hvariable\">x</span> <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">-- v &amp; f = f v </span></code></pre></div>","position":{"start":{"line":129,"column":1,"offset":2680},"end":{"line":131,"column":4,"offset":2780},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"以及","position":{"start":{"line":133,"column":1,"offset":2784},"end":{"line":133,"column":3,"offset":2786},"indent":[]}}],"position":{"start":{"line":133,"column":1,"offset":2784},"end":{"line":133,"column":3,"offset":2786},"indent":[]}},{"type":"html","lang":"haskell","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"haskell\"><pre class=\"language-haskell\"><code class=\"language-haskell\"><span class=\"token hvariable\">x</span> <span class=\"token operator\">&lt;-</span> <span class=\"token hvariable\">foo</span><span class=\"token punctuation\">;</span> <span class=\"token builtin\">return</span> <span class=\"token punctuation\">(</span><span class=\"token hvariable\">x</span> <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span>  <span class=\"token hvariable\">corresponds</span> <span class=\"token hvariable\">to</span>  <span class=\"token hvariable\">foo</span> <span class=\"token operator\">>>=</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">\\</span><span class=\"token hvariable\">x</span> <span class=\"token operator\">-></span> <span class=\"token builtin\">return</span> <span class=\"token punctuation\">(</span><span class=\"token hvariable\">x</span> <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":135,"column":1,"offset":2790},"end":{"line":137,"column":4,"offset":2879},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Monad的一些性质有：","position":{"start":{"line":139,"column":1,"offset":2883},"end":{"line":139,"column":13,"offset":2895},"indent":[]}}],"position":{"start":{"line":139,"column":1,"offset":2883},"end":{"line":139,"column":13,"offset":2895},"indent":[]}},{"type":"html","lang":"haskell","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"haskell\"><pre class=\"language-haskell\"><code class=\"language-haskell\"><span class=\"token hvariable\">m</span> <span class=\"token operator\">>>=</span> <span class=\"token builtin\">return</span>     <span class=\"token operator\">=</span>  <span class=\"token hvariable\">m</span>                        <span class=\"token comment\">-- right unit</span>\n<span class=\"token builtin\">return</span> <span class=\"token hvariable\">x</span> <span class=\"token operator\">>>=</span> <span class=\"token hvariable\">f</span>   <span class=\"token operator\">=</span>  <span class=\"token hvariable\">f</span> <span class=\"token hvariable\">x</span>                      <span class=\"token comment\">-- left unit</span>\n<span class=\"token punctuation\">(</span><span class=\"token hvariable\">m</span> <span class=\"token operator\">>>=</span> <span class=\"token hvariable\">f</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>>=</span> <span class=\"token hvariable\">g</span>  <span class=\"token operator\">=</span>  <span class=\"token hvariable\">m</span> <span class=\"token operator\">>>=</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">\\</span><span class=\"token hvariable\">x</span> <span class=\"token operator\">-></span> <span class=\"token hvariable\">f</span> <span class=\"token hvariable\">x</span> <span class=\"token operator\">>>=</span> <span class=\"token hvariable\">g</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">-- associativity</span></code></pre></div>","position":{"start":{"line":141,"column":1,"offset":2899},"end":{"line":145,"column":4,"offset":3096},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Monad也有一些延申的符号：","position":{"start":{"line":147,"column":1,"offset":3100},"end":{"line":147,"column":16,"offset":3115},"indent":[]}}],"position":{"start":{"line":147,"column":1,"offset":3100},"end":{"line":147,"column":16,"offset":3115},"indent":[]}},{"type":"html","lang":"haskell","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"haskell\"><pre class=\"language-haskell\"><code class=\"language-haskell\"><span class=\"token punctuation\">(</span><span class=\"token operator\">>=></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">::</span> <span class=\"token constant\">Monad</span> <span class=\"token hvariable\">m</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token hvariable\">a</span> <span class=\"token operator\">-></span> <span class=\"token hvariable\">m</span> <span class=\"token hvariable\">b</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token punctuation\">(</span><span class=\"token hvariable\">b</span> <span class=\"token operator\">-></span> <span class=\"token hvariable\">m</span> <span class=\"token hvariable\">c</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token hvariable\">a</span> <span class=\"token operator\">-></span> <span class=\"token hvariable\">m</span> <span class=\"token hvariable\">c</span>\n<span class=\"token hvariable\">f</span> <span class=\"token operator\">>=></span> <span class=\"token hvariable\">g</span> <span class=\"token operator\">=</span> <span class=\"token operator\">\\</span><span class=\"token hvariable\">x</span> <span class=\"token operator\">-></span> <span class=\"token hvariable\">f</span> <span class=\"token hvariable\">x</span> <span class=\"token operator\">>>=</span> <span class=\"token hvariable\">g</span></code></pre></div>","position":{"start":{"line":149,"column":1,"offset":3119},"end":{"line":152,"column":4,"offset":3219},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"也就是复合函数。","position":{"start":{"line":154,"column":1,"offset":3223},"end":{"line":154,"column":9,"offset":3231},"indent":[]}}],"position":{"start":{"line":154,"column":1,"offset":3223},"end":{"line":154,"column":9,"offset":3231},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"就像","position":{"start":{"line":156,"column":1,"offset":3235},"end":{"line":156,"column":3,"offset":3237},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">return</code>","position":{"start":{"line":156,"column":3,"offset":3237},"end":{"line":156,"column":11,"offset":3245},"indent":[]}},{"type":"text","value":"对应","position":{"start":{"line":156,"column":11,"offset":3245},"end":{"line":156,"column":13,"offset":3247},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">pure</code>","position":{"start":{"line":156,"column":13,"offset":3247},"end":{"line":156,"column":19,"offset":3253},"indent":[]}},{"type":"text","value":"，","position":{"start":{"line":156,"column":19,"offset":3253},"end":{"line":156,"column":20,"offset":3254},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">&gt;&gt;</code>","position":{"start":{"line":156,"column":20,"offset":3254},"end":{"line":156,"column":24,"offset":3258},"indent":[]}},{"type":"text","value":"对应","position":{"start":{"line":156,"column":24,"offset":3258},"end":{"line":156,"column":26,"offset":3260},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">*&gt;</code>","position":{"start":{"line":156,"column":26,"offset":3260},"end":{"line":156,"column":30,"offset":3264},"indent":[]}},{"type":"text","value":"，Monad也有自己版本的","position":{"start":{"line":156,"column":30,"offset":3264},"end":{"line":156,"column":43,"offset":3277},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">fmap</code>","position":{"start":{"line":156,"column":43,"offset":3277},"end":{"line":156,"column":49,"offset":3283},"indent":[]}},{"type":"text","value":"和","position":{"start":{"line":156,"column":49,"offset":3283},"end":{"line":156,"column":50,"offset":3284},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">&lt;*&gt;</code>","position":{"start":{"line":156,"column":50,"offset":3284},"end":{"line":156,"column":55,"offset":3289},"indent":[]}},{"type":"text","value":"：","position":{"start":{"line":156,"column":55,"offset":3289},"end":{"line":156,"column":56,"offset":3290},"indent":[]}}],"position":{"start":{"line":156,"column":1,"offset":3235},"end":{"line":156,"column":56,"offset":3290},"indent":[]}},{"type":"html","lang":"haskell","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"haskell\"><pre class=\"language-haskell\"><code class=\"language-haskell\"><span class=\"token hvariable\">liftM</span> <span class=\"token operator\">::</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">Monad</span> <span class=\"token hvariable\">m</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token hvariable\">a1</span> <span class=\"token operator\">-></span> <span class=\"token hvariable\">r</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token hvariable\">m</span> <span class=\"token hvariable\">a1</span> <span class=\"token operator\">-></span> <span class=\"token hvariable\">m</span> <span class=\"token hvariable\">r</span>  <span class=\"token comment\">-- fmap</span>\n<span class=\"token hvariable\">ap</span> <span class=\"token operator\">::</span> <span class=\"token constant\">Monad</span> <span class=\"token hvariable\">m</span> <span class=\"token operator\">=></span> <span class=\"token hvariable\">m</span> <span class=\"token punctuation\">(</span><span class=\"token hvariable\">a</span> <span class=\"token operator\">-></span> <span class=\"token hvariable\">b</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token hvariable\">m</span> <span class=\"token hvariable\">a</span> <span class=\"token operator\">-></span> <span class=\"token hvariable\">m</span> <span class=\"token hvariable\">b</span>  <span class=\"token comment\">-- &lt;*></span></code></pre></div>","position":{"start":{"line":158,"column":1,"offset":3294},"end":{"line":161,"column":4,"offset":3417},"indent":[1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Alternative","position":{"start":{"line":163,"column":4,"offset":3424},"end":{"line":163,"column":15,"offset":3435},"indent":[]}}],"position":{"start":{"line":163,"column":1,"offset":3421},"end":{"line":163,"column":15,"offset":3435},"indent":[]}},{"type":"html","lang":"haskell","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"haskell\"><pre class=\"language-haskell\"><code class=\"language-haskell\"><span class=\"token keyword\">class</span> <span class=\"token constant\">Applicative</span> <span class=\"token hvariable\">f</span> <span class=\"token operator\">=></span> <span class=\"token constant\">Alternative</span> <span class=\"token hvariable\">f</span> <span class=\"token keyword\">where</span>\n  <span class=\"token hvariable\">empty</span> <span class=\"token operator\">::</span> <span class=\"token hvariable\">f</span> <span class=\"token hvariable\">a</span>\n  <span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;|></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">::</span> <span class=\"token hvariable\">f</span> <span class=\"token hvariable\">a</span> <span class=\"token operator\">-></span> <span class=\"token hvariable\">f</span> <span class=\"token hvariable\">a</span> <span class=\"token operator\">-></span> <span class=\"token hvariable\">f</span> <span class=\"token hvariable\">a</span></code></pre></div>","position":{"start":{"line":165,"column":1,"offset":3439},"end":{"line":169,"column":4,"offset":3544},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Alternative继承自Applicative，其中","position":{"start":{"line":171,"column":1,"offset":3548},"end":{"line":171,"column":29,"offset":3576},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">empty</code>","position":{"start":{"line":171,"column":29,"offset":3576},"end":{"line":171,"column":36,"offset":3583},"indent":[]}},{"type":"text","value":"表示一个返回0的函数，","position":{"start":{"line":171,"column":36,"offset":3583},"end":{"line":171,"column":47,"offset":3594},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">&lt;|&gt;</code>","position":{"start":{"line":171,"column":47,"offset":3594},"end":{"line":171,"column":52,"offset":3599},"indent":[]}},{"type":"text","value":"是用来combine 2 computation的。例如：","position":{"start":{"line":171,"column":52,"offset":3599},"end":{"line":171,"column":81,"offset":3628},"indent":[]}}],"position":{"start":{"line":171,"column":1,"offset":3548},"end":{"line":171,"column":81,"offset":3628},"indent":[]}},{"type":"html","lang":"haskell","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"haskell\"><pre class=\"language-haskell\"><code class=\"language-haskell\"><span class=\"token keyword\">instance</span> <span class=\"token constant\">Alternative</span> <span class=\"token constant\">Maybe</span> <span class=\"token keyword\">where</span>\n  <span class=\"token hvariable\">empty</span>               <span class=\"token operator\">=</span> <span class=\"token constant\">Nothing</span>\n  <span class=\"token comment\">-- Note that this could have been written more compactly.</span>\n  <span class=\"token constant\">Nothing</span> <span class=\"token operator\">&lt;|></span> <span class=\"token constant\">Nothing</span> <span class=\"token operator\">=</span> <span class=\"token constant\">Nothing</span> <span class=\"token comment\">-- 0 results + 0 results = 0 results</span>\n  <span class=\"token constant\">Just</span> <span class=\"token hvariable\">x</span>  <span class=\"token operator\">&lt;|></span> <span class=\"token constant\">Nothing</span> <span class=\"token operator\">=</span> <span class=\"token constant\">Just</span> <span class=\"token hvariable\">x</span>  <span class=\"token comment\">-- 1 result  + 0 results = 1 result</span>\n  <span class=\"token constant\">Nothing</span> <span class=\"token operator\">&lt;|></span> <span class=\"token constant\">Just</span> <span class=\"token hvariable\">x</span>  <span class=\"token operator\">=</span> <span class=\"token constant\">Just</span> <span class=\"token hvariable\">x</span>  <span class=\"token comment\">-- 0 results + 1 result  = 1 result</span>\n  <span class=\"token constant\">Just</span> <span class=\"token hvariable\">x</span>  <span class=\"token operator\">&lt;|></span> <span class=\"token constant\">Just</span> <span class=\"token hvariable\">y</span>  <span class=\"token operator\">=</span> <span class=\"token constant\">Just</span> <span class=\"token hvariable\">x</span>  <span class=\"token comment\">-- 1 result  + 1 result  = 1 result:</span>\n                                <span class=\"token comment\">-- Maybe can only hold up to one result,</span>\n                                <span class=\"token comment\">-- so we discard the second one.</span>\n\n<span class=\"token keyword\">instance</span> <span class=\"token constant\">Alternative</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">where</span>\n  <span class=\"token hvariable\">empty</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;|></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">-- length xs + length ys = length (xs ++ ys)</span></code></pre></div>","position":{"start":{"line":173,"column":1,"offset":3632},"end":{"line":187,"column":4,"offset":4301},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"parser经常会用","position":{"start":{"line":189,"column":1,"offset":4305},"end":{"line":189,"column":11,"offset":4315},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">&lt;|&gt;</code>","position":{"start":{"line":189,"column":11,"offset":4315},"end":{"line":189,"column":16,"offset":4320},"indent":[]}},{"type":"text","value":"来进行并行的parse，相当于一个不行就另一个。","position":{"start":{"line":189,"column":16,"offset":4320},"end":{"line":189,"column":40,"offset":4344},"indent":[]}}],"position":{"start":{"line":189,"column":1,"offset":4305},"end":{"line":189,"column":40,"offset":4344},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Alternative的性质有：","position":{"start":{"line":191,"column":1,"offset":4348},"end":{"line":191,"column":17,"offset":4364},"indent":[]}}],"position":{"start":{"line":191,"column":1,"offset":4348},"end":{"line":191,"column":17,"offset":4364},"indent":[]}},{"type":"html","lang":"haskell","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"haskell\"><pre class=\"language-haskell\"><code class=\"language-haskell\"><span class=\"token comment\">-- empty is a neutral element</span>\n<span class=\"token hvariable\">empty</span> <span class=\"token operator\">&lt;|></span> <span class=\"token hvariable\">u</span>  <span class=\"token operator\">=</span>  <span class=\"token hvariable\">u</span>\n<span class=\"token hvariable\">u</span> <span class=\"token operator\">&lt;|></span> <span class=\"token hvariable\">empty</span>  <span class=\"token operator\">=</span>  <span class=\"token hvariable\">u</span>\n<span class=\"token comment\">-- (&lt;|>) is associative</span>\n<span class=\"token hvariable\">u</span> <span class=\"token operator\">&lt;|></span> <span class=\"token punctuation\">(</span><span class=\"token hvariable\">v</span> <span class=\"token operator\">&lt;|></span> <span class=\"token hvariable\">w</span><span class=\"token punctuation\">)</span>  <span class=\"token operator\">=</span>  <span class=\"token punctuation\">(</span><span class=\"token hvariable\">u</span> <span class=\"token operator\">&lt;|></span> <span class=\"token hvariable\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;|></span> <span class=\"token hvariable\">w</span></code></pre></div>","position":{"start":{"line":193,"column":1,"offset":4368},"end":{"line":199,"column":4,"offset":4514},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"MonadPlus","position":{"start":{"line":201,"column":4,"offset":4521},"end":{"line":201,"column":13,"offset":4530},"indent":[]}}],"position":{"start":{"line":201,"column":1,"offset":4518},"end":{"line":201,"column":13,"offset":4530},"indent":[]}},{"type":"html","lang":"haskell","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"haskell\"><pre class=\"language-haskell\"><code class=\"language-haskell\"><span class=\"token keyword\">class</span> <span class=\"token constant\">Monad</span> <span class=\"token hvariable\">m</span> <span class=\"token operator\">=></span> <span class=\"token constant\">MonadPlus</span> <span class=\"token hvariable\">m</span> <span class=\"token keyword\">where</span>\n  <span class=\"token hvariable\">mzero</span> <span class=\"token operator\">::</span> <span class=\"token hvariable\">m</span> <span class=\"token hvariable\">a</span>\n  <span class=\"token hvariable\">mplus</span> <span class=\"token operator\">::</span> <span class=\"token hvariable\">m</span> <span class=\"token hvariable\">a</span> <span class=\"token operator\">-></span> <span class=\"token hvariable\">m</span> <span class=\"token hvariable\">a</span> <span class=\"token operator\">-></span> <span class=\"token hvariable\">m</span> <span class=\"token hvariable\">a</span></code></pre></div>","position":{"start":{"line":203,"column":1,"offset":4534},"end":{"line":207,"column":4,"offset":4631},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"MonadPlus和Alternative完全对应。","position":{"start":{"line":209,"column":1,"offset":4635},"end":{"line":209,"column":27,"offset":4661},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">mzero</code>","position":{"start":{"line":209,"column":27,"offset":4661},"end":{"line":209,"column":34,"offset":4668},"indent":[]}},{"type":"text","value":"对应","position":{"start":{"line":209,"column":34,"offset":4668},"end":{"line":209,"column":36,"offset":4670},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">empty</code>","position":{"start":{"line":209,"column":36,"offset":4670},"end":{"line":209,"column":43,"offset":4677},"indent":[]}},{"type":"text","value":"，","position":{"start":{"line":209,"column":43,"offset":4677},"end":{"line":209,"column":44,"offset":4678},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">mplus</code>","position":{"start":{"line":209,"column":44,"offset":4678},"end":{"line":209,"column":51,"offset":4685},"indent":[]}},{"type":"text","value":"对应","position":{"start":{"line":209,"column":51,"offset":4685},"end":{"line":209,"column":53,"offset":4687},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">&lt;|&gt;</code>","position":{"start":{"line":209,"column":53,"offset":4687},"end":{"line":209,"column":58,"offset":4692},"indent":[]}},{"type":"text","value":"。","position":{"start":{"line":209,"column":58,"offset":4692},"end":{"line":209,"column":59,"offset":4693},"indent":[]}}],"position":{"start":{"line":209,"column":1,"offset":4635},"end":{"line":209,"column":59,"offset":4693},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"而MonadPlus除了Alternative的性质意外，还有额外的性质：","position":{"start":{"line":211,"column":1,"offset":4697},"end":{"line":211,"column":38,"offset":4734},"indent":[]}}],"position":{"start":{"line":211,"column":1,"offset":4697},"end":{"line":211,"column":38,"offset":4734},"indent":[]}},{"type":"html","lang":"haskell","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"haskell\"><pre class=\"language-haskell\"><code class=\"language-haskell\"><span class=\"token hvariable\">mzero</span> <span class=\"token operator\">>>=</span> <span class=\"token hvariable\">f</span>  <span class=\"token operator\">=</span>  <span class=\"token hvariable\">mzero</span> <span class=\"token comment\">-- left zero</span>\n<span class=\"token hvariable\">m</span> <span class=\"token operator\">>></span> <span class=\"token hvariable\">mzero</span>   <span class=\"token operator\">=</span>  <span class=\"token hvariable\">mzero</span> <span class=\"token comment\">-- right zero</span></code></pre></div>","position":{"start":{"line":213,"column":1,"offset":4738},"end":{"line":216,"column":4,"offset":4826},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Alternative或是MonadPlus的一些常用操作有：","position":{"start":{"line":218,"column":1,"offset":4830},"end":{"line":218,"column":32,"offset":4861},"indent":[]}}],"position":{"start":{"line":218,"column":1,"offset":4830},"end":{"line":218,"column":32,"offset":4861},"indent":[]}},{"type":"html","lang":"haskell","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"haskell\"><pre class=\"language-haskell\"><code class=\"language-haskell\"><span class=\"token hvariable\">asum</span> <span class=\"token operator\">::</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">Alternative</span> <span class=\"token hvariable\">f</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">Foldable</span> <span class=\"token hvariable\">t</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token hvariable\">t</span> <span class=\"token punctuation\">(</span><span class=\"token hvariable\">f</span> <span class=\"token hvariable\">a</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token hvariable\">f</span> <span class=\"token hvariable\">a</span>\n<span class=\"token hvariable\">asum</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">foldr</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;|></span><span class=\"token punctuation\">)</span> <span class=\"token hvariable\">empty</span></code></pre></div>","position":{"start":{"line":220,"column":1,"offset":4865},"end":{"line":223,"column":4,"offset":4961},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"就是","position":{"start":{"line":225,"column":1,"offset":4965},"end":{"line":225,"column":3,"offset":4967},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">concat</code>","position":{"start":{"line":225,"column":3,"offset":4967},"end":{"line":225,"column":11,"offset":4975},"indent":[]}},{"type":"text","value":"的一般版本。","position":{"start":{"line":225,"column":11,"offset":4975},"end":{"line":225,"column":17,"offset":4981},"indent":[]}}],"position":{"start":{"line":225,"column":1,"offset":4965},"end":{"line":225,"column":17,"offset":4981},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"MonadPlus的版本是：","position":{"start":{"line":227,"column":1,"offset":4985},"end":{"line":227,"column":15,"offset":4999},"indent":[]}}],"position":{"start":{"line":227,"column":1,"offset":4985},"end":{"line":227,"column":15,"offset":4999},"indent":[]}},{"type":"html","lang":"haskell","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"haskell\"><pre class=\"language-haskell\"><code class=\"language-haskell\"><span class=\"token hvariable\">msum</span> <span class=\"token operator\">::</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">MonadPlus</span> <span class=\"token hvariable\">m</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">Foldable</span> <span class=\"token hvariable\">t</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token hvariable\">t</span> <span class=\"token punctuation\">(</span><span class=\"token hvariable\">m</span> <span class=\"token hvariable\">a</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token hvariable\">m</span> <span class=\"token hvariable\">a</span></code></pre></div>","position":{"start":{"line":229,"column":1,"offset":5003},"end":{"line":231,"column":4,"offset":5071},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"另一个常见的操作是","position":{"start":{"line":233,"column":1,"offset":5075},"end":{"line":233,"column":10,"offset":5084},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">guard</code>","position":{"start":{"line":233,"column":10,"offset":5084},"end":{"line":233,"column":17,"offset":5091},"indent":[]}}],"position":{"start":{"line":233,"column":1,"offset":5075},"end":{"line":233,"column":17,"offset":5091},"indent":[]}},{"type":"html","lang":"haskell","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"haskell\"><pre class=\"language-haskell\"><code class=\"language-haskell\"><span class=\"token hvariable\">guard</span> <span class=\"token operator\">::</span> <span class=\"token constant\">Alternative</span> <span class=\"token hvariable\">m</span> <span class=\"token operator\">=></span> <span class=\"token constant\">Bool</span> <span class=\"token operator\">-></span> <span class=\"token hvariable\">m</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token hvariable\">guard</span> <span class=\"token constant\">True</span>  <span class=\"token operator\">=</span> <span class=\"token hvariable\">pure</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token hvariable\">guard</span> <span class=\"token hvariable\">_</span> <span class=\"token operator\">=</span> <span class=\"token hvariable\">empty</span></code></pre></div>","position":{"start":{"line":235,"column":1,"offset":5095},"end":{"line":239,"column":4,"offset":5190},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"也就是说list comprehension中的","position":{"start":{"line":241,"column":1,"offset":5194},"end":{"line":241,"column":25,"offset":5218},"indent":[]}}],"position":{"start":{"line":241,"column":1,"offset":5194},"end":{"line":241,"column":25,"offset":5218},"indent":[]}},{"type":"html","lang":"haskell","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"haskell\"><pre class=\"language-haskell\"><code class=\"language-haskell\"><span class=\"token hvariable\">pythags</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span> <span class=\"token punctuation\">(</span><span class=\"token hvariable\">x</span><span class=\"token punctuation\">,</span> <span class=\"token hvariable\">y</span><span class=\"token punctuation\">,</span> <span class=\"token hvariable\">z</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token hvariable\">z</span> <span class=\"token operator\">&lt;-</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token operator\">..</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token hvariable\">x</span> <span class=\"token operator\">&lt;-</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token operator\">..</span><span class=\"token hvariable\">z</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token hvariable\">y</span> <span class=\"token operator\">&lt;-</span> <span class=\"token punctuation\">[</span><span class=\"token hvariable\">x</span><span class=\"token operator\">..</span><span class=\"token hvariable\">z</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token hvariable\">x</span><span class=\"token operator\">^</span><span class=\"token number\">2</span> <span class=\"token operator\">+</span> <span class=\"token hvariable\">y</span><span class=\"token operator\">^</span><span class=\"token number\">2</span> <span class=\"token operator\">==</span> <span class=\"token hvariable\">z</span><span class=\"token operator\">^</span><span class=\"token number\">2</span> <span class=\"token punctuation\">]</span></code></pre></div>","position":{"start":{"line":243,"column":1,"offset":5222},"end":{"line":245,"column":4,"offset":5319},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"实际上是：","position":{"start":{"line":247,"column":1,"offset":5323},"end":{"line":247,"column":6,"offset":5328},"indent":[]}}],"position":{"start":{"line":247,"column":1,"offset":5323},"end":{"line":247,"column":6,"offset":5328},"indent":[]}},{"type":"html","lang":"haskell","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"haskell\"><pre class=\"language-haskell\"><code class=\"language-haskell\"><span class=\"token hvariable\">pythags</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">do</span>\n  <span class=\"token hvariable\">z</span> <span class=\"token operator\">&lt;-</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token operator\">..</span><span class=\"token punctuation\">]</span>\n  <span class=\"token hvariable\">x</span> <span class=\"token operator\">&lt;-</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token operator\">..</span><span class=\"token hvariable\">z</span><span class=\"token punctuation\">]</span>\n  <span class=\"token hvariable\">y</span> <span class=\"token operator\">&lt;-</span> <span class=\"token punctuation\">[</span><span class=\"token hvariable\">x</span><span class=\"token operator\">..</span><span class=\"token hvariable\">z</span><span class=\"token punctuation\">]</span>\n  <span class=\"token hvariable\">guard</span> <span class=\"token punctuation\">(</span><span class=\"token hvariable\">x</span><span class=\"token operator\">^</span><span class=\"token number\">2</span> <span class=\"token operator\">+</span> <span class=\"token hvariable\">y</span><span class=\"token operator\">^</span><span class=\"token number\">2</span> <span class=\"token operator\">==</span> <span class=\"token hvariable\">z</span><span class=\"token operator\">^</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n  <span class=\"token builtin\">return</span> <span class=\"token punctuation\">(</span><span class=\"token hvariable\">x</span><span class=\"token punctuation\">,</span> <span class=\"token hvariable\">y</span><span class=\"token punctuation\">,</span> <span class=\"token hvariable\">z</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":249,"column":1,"offset":5332},"end":{"line":256,"column":4,"offset":5453},"indent":[1,1,1,1,1,1,1]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":258,"column":1,"offset":5457}}}}