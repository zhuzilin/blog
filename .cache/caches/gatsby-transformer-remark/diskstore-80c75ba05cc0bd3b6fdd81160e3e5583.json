{"expireTime":9007200818315813000,"key":"transformer-remark-markdown-ast-3fdef8bd330e821893b62fc066b74830-gatsby-remark-katexgatsby-remark-prismjs-","val":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"这个作业是要求完成","position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":10,"offset":10},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">sh.c</code>","position":{"start":{"line":2,"column":10,"offset":10},"end":{"line":2,"column":16,"offset":16},"indent":[]}},{"type":"text","value":"这个文件，来写一个shell。做这个作业之前还是需要看一下xv6 book的第一章的，不然有些地方会不明白。以及，真正的xv6的shell版本在","position":{"start":{"line":2,"column":16,"offset":16},"end":{"line":2,"column":88,"offset":88},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">xv6-public/sh.c</code>","position":{"start":{"line":2,"column":88,"offset":88},"end":{"line":2,"column":105,"offset":105},"indent":[]}},{"type":"text","value":"中，可以参考学习。同时，lecture 4中的第一部分一些关于这次作业的问题，我们也在这里进行讨论。","position":{"start":{"line":2,"column":105,"offset":105},"end":{"line":2,"column":155,"offset":155},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":155,"offset":155},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Executing simple commands","position":{"start":{"line":4,"column":4,"offset":160},"end":{"line":4,"column":29,"offset":185},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":157},"end":{"line":4,"column":29,"offset":185},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"简单来说，shell就是一个会循环读入每一行并对每一行做出反应的程序。所以除去","position":{"start":{"line":6,"column":1,"offset":187},"end":{"line":6,"column":40,"offset":226},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">cd</code>","position":{"start":{"line":6,"column":40,"offset":226},"end":{"line":6,"column":44,"offset":230},"indent":[]}},{"type":"text","value":"指令（比较例外...），都是先fork一下，然后在child里对读进来的buffer进行parse并然后依据parse的内容运行对应的程序。","position":{"start":{"line":6,"column":44,"offset":230},"end":{"line":6,"column":114,"offset":300},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":187},"end":{"line":6,"column":114,"offset":300},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"对于执行简单工具，读过parse之后知道，simple commands就是用","position":{"start":{"line":8,"column":1,"offset":302},"end":{"line":8,"column":40,"offset":341},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">type == &#39; &#39;</code>","position":{"start":{"line":8,"column":40,"offset":341},"end":{"line":8,"column":53,"offset":354},"indent":[]}},{"type":"text","value":"来表示的，其","position":{"start":{"line":8,"column":53,"offset":354},"end":{"line":8,"column":59,"offset":360},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">argv</code>","position":{"start":{"line":8,"column":59,"offset":360},"end":{"line":8,"column":65,"offset":366},"indent":[]}},{"type":"text","value":"就是","position":{"start":{"line":8,"column":65,"offset":366},"end":{"line":8,"column":67,"offset":368},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">execv</code>","position":{"start":{"line":8,"column":67,"offset":368},"end":{"line":8,"column":74,"offset":375},"indent":[]}},{"type":"text","value":"需要的，所以核心是：","position":{"start":{"line":8,"column":74,"offset":375},"end":{"line":8,"column":84,"offset":385},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":302},"end":{"line":8,"column":84,"offset":385},"indent":[]}},{"type":"html","lang":"c","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\"><span class=\"token keyword\">case</span> <span class=\"token string\">' '</span><span class=\"token operator\">:</span>\n    ecmd <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">struct</span> <span class=\"token class-name\">execcmd</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>cmd<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>ecmd<span class=\"token operator\">-></span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n      <span class=\"token function\">_exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">execv</span><span class=\"token punctuation\">(</span>ecmd<span class=\"token operator\">-></span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> ecmd<span class=\"token operator\">-></span>argv<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">fprintf</span><span class=\"token punctuation\">(</span><span class=\"token constant\">stderr</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"exec %s failed\\n\"</span><span class=\"token punctuation\">,</span> ecmd<span class=\"token operator\">-></span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":10,"column":1,"offset":387},"end":{"line":18,"column":4,"offset":586},"indent":[1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"注意，","position":{"start":{"line":20,"column":1,"offset":588},"end":{"line":20,"column":4,"offset":591},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">runcmd</code>","position":{"start":{"line":20,"column":4,"offset":591},"end":{"line":20,"column":12,"offset":599},"indent":[]}},{"type":"text","value":"里面这个代码不能进行普通的","position":{"start":{"line":20,"column":12,"offset":599},"end":{"line":20,"column":25,"offset":612},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">printf</code>","position":{"start":{"line":20,"column":25,"offset":612},"end":{"line":20,"column":33,"offset":620},"indent":[]}},{"type":"text","value":"，应该是因为都是在child里面运行的，而为什么输出最后都能返回parent，应该是因为执行的结果被重定向回了parent。但是神奇的是可以通过","position":{"start":{"line":20,"column":33,"offset":620},"end":{"line":20,"column":105,"offset":692},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">stderr</code>","position":{"start":{"line":20,"column":105,"offset":692},"end":{"line":20,"column":113,"offset":700},"indent":[]}},{"type":"text","value":"输出，不知道为什么。。。","position":{"start":{"line":20,"column":113,"offset":700},"end":{"line":20,"column":125,"offset":712},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":588},"end":{"line":20,"column":125,"offset":712},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"问题：","position":{"start":{"line":22,"column":1,"offset":714},"end":{"line":22,"column":4,"offset":717},"indent":[]}}],"position":{"start":{"line":22,"column":1,"offset":714},"end":{"line":22,"column":4,"offset":717},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"exec","position":{"start":{"line":24,"column":3,"offset":721},"end":{"line":24,"column":7,"offset":725},"indent":[]}}],"position":{"start":{"line":24,"column":3,"offset":721},"end":{"line":24,"column":7,"offset":725},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"这里问了几个问题。。。我几乎一个都答不上来。。。","position":{"start":{"line":26,"column":3,"offset":729},"end":{"line":26,"column":27,"offset":753},"indent":[]}}],"position":{"start":{"line":26,"column":3,"offset":729},"end":{"line":26,"column":27,"offset":753},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"why two execv() arguments? 不明白。。。","position":{"start":{"line":28,"column":3,"offset":757},"end":{"line":28,"column":36,"offset":790},"indent":[]}}],"position":{"start":{"line":28,"column":3,"offset":757},"end":{"line":28,"column":36,"offset":790},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"what happens to the arguments? 第一个是调用的可执行文件，第二个是参数列表","position":{"start":{"line":30,"column":3,"offset":794},"end":{"line":30,"column":55,"offset":846},"indent":[]}}],"position":{"start":{"line":30,"column":3,"offset":794},"end":{"line":30,"column":55,"offset":846},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"can execv return? 正常是不返回的，如果返回就说明有error","position":{"start":{"line":32,"column":3,"offset":850},"end":{"line":32,"column":42,"offset":889},"indent":[]}}],"position":{"start":{"line":32,"column":3,"offset":850},"end":{"line":32,"column":42,"offset":889},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"shell是如何继续运行的？用fork实现的","position":{"start":{"line":34,"column":3,"offset":893},"end":{"line":34,"column":25,"offset":915},"indent":[]}}],"position":{"start":{"line":34,"column":3,"offset":893},"end":{"line":34,"column":25,"offset":915},"indent":[]}}],"position":{"start":{"line":24,"column":1,"offset":719},"end":{"line":34,"column":25,"offset":915},"indent":[1,1,1,1,1,1,1,1,1,1]}}],"position":{"start":{"line":24,"column":1,"offset":719},"end":{"line":34,"column":25,"offset":915},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"I/O redirection","position":{"start":{"line":36,"column":4,"offset":920},"end":{"line":36,"column":19,"offset":935},"indent":[]}}],"position":{"start":{"line":36,"column":1,"offset":917},"end":{"line":36,"column":19,"offset":935},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"注意，","position":{"start":{"line":38,"column":1,"offset":937},"end":{"line":38,"column":4,"offset":940},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">open</code>","position":{"start":{"line":38,"column":4,"offset":940},"end":{"line":38,"column":10,"offset":946},"indent":[]}},{"type":"text","value":"，","position":{"start":{"line":38,"column":10,"offset":946},"end":{"line":38,"column":11,"offset":947},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">dup</code>","position":{"start":{"line":38,"column":11,"offset":947},"end":{"line":38,"column":16,"offset":952},"indent":[]}},{"type":"text","value":"都会选择当时没被用的最小的file descriptor。然后io redirection在xv6 book里面有很相似的例子，代码很简单先关掉再打开就好了。","position":{"start":{"line":38,"column":16,"offset":952},"end":{"line":38,"column":95,"offset":1031},"indent":[]}}],"position":{"start":{"line":38,"column":1,"offset":937},"end":{"line":38,"column":95,"offset":1031},"indent":[]}},{"type":"html","lang":"c","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\"><span class=\"token keyword\">case</span> <span class=\"token string\">'>'</span><span class=\"token operator\">:</span>\n<span class=\"token keyword\">case</span> <span class=\"token string\">'&lt;'</span><span class=\"token operator\">:</span>\n    rcmd <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">struct</span> <span class=\"token class-name\">redircmd</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>cmd<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> mode <span class=\"token operator\">=</span> S_IRUSR <span class=\"token operator\">|</span> S_IWUSR<span class=\"token punctuation\">;</span>\n    <span class=\"token function\">close</span><span class=\"token punctuation\">(</span>rcmd<span class=\"token operator\">-></span>fd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span>rcmd<span class=\"token operator\">-></span>file<span class=\"token punctuation\">,</span> rcmd<span class=\"token operator\">-></span>flags<span class=\"token punctuation\">,</span> mode<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">fprintf</span><span class=\"token punctuation\">(</span><span class=\"token constant\">stderr</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Fail to open %s\\n\"</span><span class=\"token punctuation\">,</span> rcmd<span class=\"token operator\">-></span>file<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">_exit</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token function\">runcmd</span><span class=\"token punctuation\">(</span>rcmd<span class=\"token operator\">-></span>cmd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":40,"column":1,"offset":1033},"end":{"line":52,"column":4,"offset":1317},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"问题：","position":{"start":{"line":54,"column":1,"offset":1319},"end":{"line":54,"column":4,"offset":1322},"indent":[]}}],"position":{"start":{"line":54,"column":1,"offset":1319},"end":{"line":54,"column":4,"offset":1322},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"redirect","position":{"start":{"line":56,"column":3,"offset":1326},"end":{"line":56,"column":11,"offset":1334},"indent":[]}}],"position":{"start":{"line":56,"column":3,"offset":1326},"end":{"line":56,"column":11,"offset":1334},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"kernel是通过file descriptor table来进行redirect的","position":{"start":{"line":58,"column":3,"offset":1338},"end":{"line":58,"column":45,"offset":1380},"indent":[]}}],"position":{"start":{"line":58,"column":3,"offset":1338},"end":{"line":58,"column":45,"offset":1380},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"因为用了fork，之后对fd的操作都是和main shell无关的，所以不会影响main shell","position":{"start":{"line":60,"column":3,"offset":1384},"end":{"line":60,"column":53,"offset":1434},"indent":[]}}],"position":{"start":{"line":60,"column":3,"offset":1384},"end":{"line":60,"column":53,"offset":1434},"indent":[]}}],"position":{"start":{"line":56,"column":1,"offset":1324},"end":{"line":60,"column":53,"offset":1434},"indent":[1,1,1,1]}}],"position":{"start":{"line":56,"column":1,"offset":1324},"end":{"line":60,"column":53,"offset":1434},"indent":[1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Implement pipes","position":{"start":{"line":62,"column":4,"offset":1439},"end":{"line":62,"column":19,"offset":1454},"indent":[]}}],"position":{"start":{"line":62,"column":1,"offset":1436},"end":{"line":62,"column":19,"offset":1454},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"这里的难点就是","position":{"start":{"line":64,"column":1,"offset":1456},"end":{"line":64,"column":8,"offset":1463},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">pipe</code>","position":{"start":{"line":64,"column":8,"offset":1463},"end":{"line":64,"column":14,"offset":1469},"indent":[]}},{"type":"text","value":"。对于","position":{"start":{"line":64,"column":14,"offset":1469},"end":{"line":64,"column":17,"offset":1472},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">pipe</code>","position":{"start":{"line":64,"column":17,"offset":1472},"end":{"line":64,"column":23,"offset":1478},"indent":[]}},{"type":"text","value":"的讲解可以用xv6 book里面的例子来说：","position":{"start":{"line":64,"column":23,"offset":1478},"end":{"line":64,"column":45,"offset":1500},"indent":[]}}],"position":{"start":{"line":64,"column":1,"offset":1456},"end":{"line":64,"column":45,"offset":1500},"indent":[]}},{"type":"html","lang":"c","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\"><span class=\"token keyword\">int</span> p<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\nargv<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"wc\"</span><span class=\"token punctuation\">;</span>\nargv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">fork</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>  <span class=\"token comment\">// 在child里面就留两个，一个是0 -> pipe read, 1 -> stdout</span>\n\t<span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// child里不连上stdin了</span>\n\t<span class=\"token function\">dup</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 0 -> pipe read</span>\n\t<span class=\"token function\">close</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// p[0]不连着pipe read</span>\n\t<span class=\"token function\">close</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// p[1]不连着pipe write了</span>\n\t<span class=\"token function\">exec</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/bin/wc\"</span><span class=\"token punctuation\">,</span> argv<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>  <span class=\"token comment\">// parent里面不动0, 1，然后留下p[1] -> pipe write，来向child写入</span>\n\t<span class=\"token function\">close</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">write</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"hello world\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">close</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":66,"column":1,"offset":1502},"end":{"line":83,"column":4,"offset":1923},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"对于","position":{"start":{"line":85,"column":1,"offset":1925},"end":{"line":85,"column":3,"offset":1927},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">pipe</code>","position":{"start":{"line":85,"column":3,"offset":1927},"end":{"line":85,"column":9,"offset":1933},"indent":[]}},{"type":"text","value":"的重要测试例子是","position":{"start":{"line":85,"column":9,"offset":1933},"end":{"line":85,"column":17,"offset":1941},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">/bin/sleep 3 | /bin/echo hi</code>","position":{"start":{"line":85,"column":17,"offset":1941},"end":{"line":85,"column":46,"offset":1970},"indent":[]}},{"type":"text","value":"，这里最开始我也没写对...后来参考了","position":{"start":{"line":85,"column":46,"offset":1970},"end":{"line":85,"column":65,"offset":1989},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">xv6-public</code>","position":{"start":{"line":85,"column":65,"offset":1989},"end":{"line":85,"column":77,"offset":2001},"indent":[]}},{"type":"text","value":"里面的代码才写出来。","position":{"start":{"line":85,"column":77,"offset":2001},"end":{"line":85,"column":87,"offset":2011},"indent":[]}}],"position":{"start":{"line":85,"column":1,"offset":1925},"end":{"line":85,"column":87,"offset":2011},"indent":[]}},{"type":"html","lang":"c","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\"><span class=\"token keyword\">case</span> <span class=\"token string\">'|'</span><span class=\"token operator\">:</span>\n    pcmd <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">struct</span> <span class=\"token class-name\">pipecmd</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>cmd<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">fprintf</span><span class=\"token punctuation\">(</span><span class=\"token constant\">stderr</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Fail to create pipe\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">_exit</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">fork1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n      <span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token function\">dup</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token function\">close</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token function\">close</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token function\">runcmd</span><span class=\"token punctuation\">(</span>pcmd<span class=\"token operator\">-></span>left<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// the execv will end this child</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">fork1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n      <span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token function\">dup</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token function\">close</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token function\">close</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token function\">fprintf</span><span class=\"token punctuation\">(</span><span class=\"token constant\">stderr</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"right\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token function\">runcmd</span><span class=\"token punctuation\">(</span>pcmd<span class=\"token operator\">-></span>right<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// the execv will end this child</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token function\">close</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">close</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">wait</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">wait</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":87,"column":1,"offset":2013},"end":{"line":114,"column":4,"offset":2587},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"在分析问题之前，先简单介绍一下","position":{"start":{"line":116,"column":1,"offset":2589},"end":{"line":116,"column":16,"offset":2604},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">pipe</code>","position":{"start":{"line":116,"column":16,"offset":2604},"end":{"line":116,"column":22,"offset":2610},"indent":[]}},{"type":"text","value":"的原理，本部分来自于xv6 book的Code: pipe部分，现在的理解可能有所欠缺，需要对锁有更好的理解之后再来。","position":{"start":{"line":116,"column":22,"offset":2610},"end":{"line":116,"column":81,"offset":2669},"indent":[]}}],"position":{"start":{"line":116,"column":1,"offset":2589},"end":{"line":116,"column":81,"offset":2669},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"每个pipe的结构如下：","position":{"start":{"line":118,"column":1,"offset":2671},"end":{"line":118,"column":13,"offset":2683},"indent":[]}}],"position":{"start":{"line":118,"column":1,"offset":2671},"end":{"line":118,"column":13,"offset":2683},"indent":[]}},{"type":"html","lang":"c","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\"><span class=\"token keyword\">struct</span> <span class=\"token class-name\">pipe</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">struct</span> <span class=\"token class-name\">spinlock</span> lock<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">char</span> data<span class=\"token punctuation\">[</span>PIPESIZE<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  uint nread<span class=\"token punctuation\">;</span>     <span class=\"token comment\">// number of bytes read</span>\n  uint nwrite<span class=\"token punctuation\">;</span>    <span class=\"token comment\">// number of bytes written</span>\n  <span class=\"token keyword\">int</span> readopen<span class=\"token punctuation\">;</span>   <span class=\"token comment\">// read fd is still open</span>\n  <span class=\"token keyword\">int</span> writeopen<span class=\"token punctuation\">;</span>  <span class=\"token comment\">// write fd is still open</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":120,"column":1,"offset":2685},"end":{"line":129,"column":4,"offset":2931},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"其中","position":{"start":{"line":131,"column":1,"offset":2933},"end":{"line":131,"column":3,"offset":2935},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">data</code>","position":{"start":{"line":131,"column":3,"offset":2935},"end":{"line":131,"column":9,"offset":2941},"indent":[]}},{"type":"text","value":"就是buffer，而这个buffer是循环存储的。","position":{"start":{"line":131,"column":9,"offset":2941},"end":{"line":131,"column":34,"offset":2966},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">nread</code>","position":{"start":{"line":131,"column":34,"offset":2966},"end":{"line":131,"column":41,"offset":2973},"indent":[]}},{"type":"text","value":"和","position":{"start":{"line":131,"column":41,"offset":2973},"end":{"line":131,"column":42,"offset":2974},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">nwrite</code>","position":{"start":{"line":131,"column":42,"offset":2974},"end":{"line":131,"column":50,"offset":2982},"indent":[]}},{"type":"text","value":"分别记录了读入和写入的数量，注意这两个是绝对值，没有对","position":{"start":{"line":131,"column":50,"offset":2982},"end":{"line":131,"column":77,"offset":3009},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">PIPESIZE</code>","position":{"start":{"line":131,"column":77,"offset":3009},"end":{"line":131,"column":87,"offset":3019},"indent":[]}},{"type":"text","value":"进行求余。","position":{"start":{"line":131,"column":87,"offset":3019},"end":{"line":131,"column":92,"offset":3024},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">pipewrite</code>","position":{"start":{"line":131,"column":92,"offset":3024},"end":{"line":131,"column":103,"offset":3035},"indent":[]}},{"type":"text","value":"会先获取","position":{"start":{"line":131,"column":103,"offset":3035},"end":{"line":131,"column":107,"offset":3039},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">lock</code>","position":{"start":{"line":131,"column":107,"offset":3039},"end":{"line":131,"column":113,"offset":3045},"indent":[]}},{"type":"text","value":"，其会进行写入。当buffer满了的时候，会调用","position":{"start":{"line":131,"column":113,"offset":3045},"end":{"line":131,"column":137,"offset":3069},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">wakeup</code>","position":{"start":{"line":131,"column":137,"offset":3069},"end":{"line":131,"column":145,"offset":3077},"indent":[]}},{"type":"text","value":"，来唤醒任何sleeping readers，并sleeps on ","position":{"start":{"line":131,"column":145,"offset":3077},"end":{"line":131,"column":179,"offset":3111},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">$p-&gt;write</code>","position":{"start":{"line":131,"column":179,"offset":3111},"end":{"line":131,"column":190,"offset":3122},"indent":[]}},{"type":"text","value":"以等待一些reader读出一些data。这时","position":{"start":{"line":131,"column":190,"offset":3122},"end":{"line":131,"column":212,"offset":3144},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">piperead</code>","position":{"start":{"line":131,"column":212,"offset":3144},"end":{"line":131,"column":222,"offset":3154},"indent":[]}},{"type":"text","value":"就会获取","position":{"start":{"line":131,"column":222,"offset":3154},"end":{"line":131,"column":226,"offset":3158},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">lock</code>","position":{"start":{"line":131,"column":226,"offset":3158},"end":{"line":131,"column":232,"offset":3164},"indent":[]}},{"type":"text","value":"，开始读入，读到","position":{"start":{"line":131,"column":232,"offset":3164},"end":{"line":131,"column":240,"offset":3172},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">p-&gt;nwrite = p-&gt;nread</code>","position":{"start":{"line":131,"column":240,"offset":3172},"end":{"line":131,"column":262,"offset":3194},"indent":[]}},{"type":"text","value":"或者需要的量为止，然后调用","position":{"start":{"line":131,"column":262,"offset":3194},"end":{"line":131,"column":275,"offset":3207},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">wakeup</code>","position":{"start":{"line":131,"column":275,"offset":3207},"end":{"line":131,"column":283,"offset":3215},"indent":[]}},{"type":"text","value":"唤醒","position":{"start":{"line":131,"column":283,"offset":3215},"end":{"line":131,"column":285,"offset":3217},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">pipewrite</code>","position":{"start":{"line":131,"column":285,"offset":3217},"end":{"line":131,"column":296,"offset":3228},"indent":[]}},{"type":"text","value":"。","position":{"start":{"line":131,"column":296,"offset":3228},"end":{"line":131,"column":297,"offset":3229},"indent":[]}}],"position":{"start":{"line":131,"column":1,"offset":2933},"end":{"line":131,"column":297,"offset":3229},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"问题：","position":{"start":{"line":133,"column":1,"offset":3231},"end":{"line":133,"column":4,"offset":3234},"indent":[]}}],"position":{"start":{"line":133,"column":1,"offset":3231},"end":{"line":133,"column":4,"offset":3234},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":true,"children":[{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"pipe","position":{"start":{"line":135,"column":3,"offset":3238},"end":{"line":135,"column":7,"offset":3242},"indent":[]}}],"position":{"start":{"line":135,"column":3,"offset":3238},"end":{"line":135,"column":7,"offset":3242},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"如果","position":{"start":{"line":137,"column":5,"offset":3248},"end":{"line":137,"column":7,"offset":3250},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">ls</code>","position":{"start":{"line":137,"column":7,"offset":3250},"end":{"line":137,"column":11,"offset":3254},"indent":[]}},{"type":"text","value":"比","position":{"start":{"line":137,"column":11,"offset":3254},"end":{"line":137,"column":12,"offset":3255},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">wc</code>","position":{"start":{"line":137,"column":12,"offset":3255},"end":{"line":137,"column":16,"offset":3259},"indent":[]}},{"type":"text","value":"快很多怎么办？","position":{"start":{"line":137,"column":16,"offset":3259},"end":{"line":137,"column":23,"offset":3266},"indent":[]}}],"position":{"start":{"line":137,"column":5,"offset":3248},"end":{"line":137,"column":23,"offset":3266},"indent":[]}}],"position":{"start":{"line":137,"column":3,"offset":3246},"end":{"line":137,"column":23,"offset":3266},"indent":[]}}],"position":{"start":{"line":137,"column":3,"offset":3246},"end":{"line":137,"column":23,"offset":3266},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"快很多的话会先把信息存在pipe的buffer里，如果buffer满了，会先sleep，等wc开始read之后再继续。","position":{"start":{"line":139,"column":5,"offset":3272},"end":{"line":139,"column":64,"offset":3331},"indent":[]}}],"position":{"start":{"line":139,"column":5,"offset":3272},"end":{"line":139,"column":64,"offset":3331},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"如果","position":{"start":{"line":141,"column":5,"offset":3337},"end":{"line":141,"column":7,"offset":3339},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">ls</code>","position":{"start":{"line":141,"column":7,"offset":3339},"end":{"line":141,"column":11,"offset":3343},"indent":[]}},{"type":"text","value":"比","position":{"start":{"line":141,"column":11,"offset":3343},"end":{"line":141,"column":12,"offset":3344},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">wc</code>","position":{"start":{"line":141,"column":12,"offset":3344},"end":{"line":141,"column":16,"offset":3348},"indent":[]}},{"type":"text","value":"慢很多怎么办？","position":{"start":{"line":141,"column":16,"offset":3348},"end":{"line":141,"column":23,"offset":3355},"indent":[]}}],"position":{"start":{"line":141,"column":5,"offset":3337},"end":{"line":141,"column":23,"offset":3355},"indent":[]}}],"position":{"start":{"line":141,"column":3,"offset":3335},"end":{"line":141,"column":23,"offset":3355},"indent":[]}}],"position":{"start":{"line":141,"column":3,"offset":3335},"end":{"line":141,"column":23,"offset":3355},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"慢很多的话，pipe read会等待有数据读进来再说。","position":{"start":{"line":143,"column":5,"offset":3361},"end":{"line":143,"column":32,"offset":3388},"indent":[]}}],"position":{"start":{"line":143,"column":5,"offset":3361},"end":{"line":143,"column":32,"offset":3388},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"command何时决定结束：有","position":{"start":{"line":145,"column":5,"offset":3394},"end":{"line":145,"column":20,"offset":3409},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">wait</code>","position":{"start":{"line":145,"column":20,"offset":3409},"end":{"line":145,"column":26,"offset":3415},"indent":[]}},{"type":"text","value":"，所以左边右边的command都结束就可以了。","position":{"start":{"line":145,"column":26,"offset":3415},"end":{"line":145,"column":49,"offset":3438},"indent":[]}}],"position":{"start":{"line":145,"column":5,"offset":3394},"end":{"line":145,"column":49,"offset":3438},"indent":[]}}],"position":{"start":{"line":145,"column":3,"offset":3392},"end":{"line":145,"column":49,"offset":3438},"indent":[]}}],"position":{"start":{"line":145,"column":3,"offset":3392},"end":{"line":145,"column":49,"offset":3438},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"下面的两文可以用 (","position":{"start":{"line":147,"column":3,"offset":3442},"end":{"line":147,"column":13,"offset":3452},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">/bin/ls | /usr/bin/wc</code>","position":{"start":{"line":147,"column":13,"offset":3452},"end":{"line":147,"column":36,"offset":3475},"indent":[]}},{"type":"text","value":") 进行测试","position":{"start":{"line":147,"column":36,"offset":3475},"end":{"line":147,"column":42,"offset":3481},"indent":[]}}],"position":{"start":{"line":147,"column":3,"offset":3442},"end":{"line":147,"column":42,"offset":3481},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"reader(右边的指令)没有关闭write end会直接卡住","position":{"start":{"line":149,"column":5,"offset":3487},"end":{"line":149,"column":36,"offset":3518},"indent":[]}}],"position":{"start":{"line":149,"column":5,"offset":3487},"end":{"line":149,"column":36,"offset":3518},"indent":[]}}],"position":{"start":{"line":149,"column":3,"offset":3485},"end":{"line":149,"column":36,"offset":3518},"indent":[]}}],"position":{"start":{"line":149,"column":3,"offset":3485},"end":{"line":149,"column":36,"offset":3518},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"原因是pipe read如果返回的是空数据的话，会等待任何写入（blocking），或者待所有write descriptor都关闭了就返回0。所以如果不关的话，read就无法停止了，而","position":{"start":{"line":151,"column":5,"offset":3524},"end":{"line":151,"column":98,"offset":3617},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">wc</code>","position":{"start":{"line":151,"column":98,"offset":3617},"end":{"line":151,"column":102,"offset":3621},"indent":[]}},{"type":"text","value":"这样的程序里面都是等read返回0来跳出循环的，所以就卡住了。","position":{"start":{"line":151,"column":102,"offset":3621},"end":{"line":151,"column":133,"offset":3652},"indent":[]}}],"position":{"start":{"line":151,"column":5,"offset":3524},"end":{"line":151,"column":133,"offset":3652},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"writer（左边的指令）没有关闭read end则不会卡住","position":{"start":{"line":153,"column":5,"offset":3658},"end":{"line":153,"column":35,"offset":3688},"indent":[]}}],"position":{"start":{"line":153,"column":5,"offset":3658},"end":{"line":153,"column":35,"offset":3688},"indent":[]}}],"position":{"start":{"line":153,"column":3,"offset":3656},"end":{"line":153,"column":35,"offset":3688},"indent":[]}}],"position":{"start":{"line":153,"column":3,"offset":3656},"end":{"line":153,"column":35,"offset":3688},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"原因是write的blocking是关于不能写入的，而和多一个reader没什么关系，因为那个正常的reader会把所有的数据都读走。","position":{"start":{"line":155,"column":5,"offset":3694},"end":{"line":155,"column":72,"offset":3761},"indent":[]}}],"position":{"start":{"line":155,"column":5,"offset":3694},"end":{"line":155,"column":72,"offset":3761},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"how does the kernel know when to free the pipe buffer?","position":{"start":{"line":157,"column":5,"offset":3767},"end":{"line":157,"column":59,"offset":3821},"indent":[]}}],"position":{"start":{"line":157,"column":5,"offset":3767},"end":{"line":157,"column":59,"offset":3821},"indent":[]}}],"position":{"start":{"line":157,"column":3,"offset":3765},"end":{"line":157,"column":59,"offset":3821},"indent":[]}}],"position":{"start":{"line":157,"column":3,"offset":3765},"end":{"line":157,"column":59,"offset":3821},"indent":[]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"When all file descriptors associated with a pipe or FIFO special file are closed, any data remaining in the pipe or FIFO shall be discarded.","position":{"start":{"line":159,"column":7,"offset":3829},"end":{"line":159,"column":147,"offset":3969},"indent":[]}}],"position":{"start":{"line":159,"column":7,"offset":3829},"end":{"line":159,"column":147,"offset":3969},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"http://pubs.opengroup.org/onlinepubs/009695399/functions/close.html","children":[{"type":"text","value":"close","position":{"start":{"line":161,"column":8,"offset":3983},"end":{"line":161,"column":13,"offset":3988},"indent":[]}}],"position":{"start":{"line":161,"column":7,"offset":3982},"end":{"line":161,"column":83,"offset":4058},"indent":[]}}],"position":{"start":{"line":161,"column":7,"offset":3982},"end":{"line":161,"column":83,"offset":4058},"indent":[]}}],"position":{"start":{"line":159,"column":5,"offset":3827},"end":{"line":161,"column":83,"offset":4058},"indent":[5,5]}},{"type":"paragraph","children":[{"type":"text","value":"所以如果关闭了所有的read，或者关闭了所有的write应该pipe就会被free掉了。","position":{"start":{"line":163,"column":5,"offset":4064},"end":{"line":163,"column":49,"offset":4108},"indent":[]}}],"position":{"start":{"line":163,"column":5,"offset":4064},"end":{"line":163,"column":49,"offset":4108},"indent":[]}}],"position":{"start":{"line":135,"column":1,"offset":3236},"end":{"line":164,"column":1,"offset":4109},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"how does the shell know a pipeline end?","position":{"start":{"line":165,"column":3,"offset":4112},"end":{"line":165,"column":42,"offset":4151},"indent":[]}}],"position":{"start":{"line":165,"column":3,"offset":4112},"end":{"line":165,"column":42,"offset":4151},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"两个","position":{"start":{"line":167,"column":3,"offset":4155},"end":{"line":167,"column":5,"offset":4157},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">wait</code>","position":{"start":{"line":167,"column":5,"offset":4157},"end":{"line":167,"column":11,"offset":4163},"indent":[]}},{"type":"text","value":"都跑完了的时候pipeline就结束了。","position":{"start":{"line":167,"column":11,"offset":4163},"end":{"line":167,"column":31,"offset":4183},"indent":[]}}],"position":{"start":{"line":167,"column":3,"offset":4155},"end":{"line":167,"column":31,"offset":4183},"indent":[]}}],"position":{"start":{"line":165,"column":1,"offset":4110},"end":{"line":168,"column":1,"offset":4184},"indent":[1,1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"为什么需要fork两次？","position":{"start":{"line":169,"column":3,"offset":4187},"end":{"line":169,"column":15,"offset":4199},"indent":[]}}],"position":{"start":{"line":169,"column":3,"offset":4187},"end":{"line":169,"column":15,"offset":4199},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"fork两次是为了让左右的程序同时开始运行，且等都结束再返回。不fork的话就没办法用","position":{"start":{"line":171,"column":3,"offset":4203},"end":{"line":171,"column":46,"offset":4246},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">wait</code>","position":{"start":{"line":171,"column":46,"offset":4246},"end":{"line":171,"column":52,"offset":4252},"indent":[]}},{"type":"text","value":"进行限制了。","position":{"start":{"line":171,"column":52,"offset":4252},"end":{"line":171,"column":58,"offset":4258},"indent":[]}}],"position":{"start":{"line":171,"column":3,"offset":4203},"end":{"line":171,"column":58,"offset":4258},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"如果运行pcmd->left不进行fork：","position":{"start":{"line":173,"column":5,"offset":4264},"end":{"line":173,"column":27,"offset":4286},"indent":[]}}],"position":{"start":{"line":173,"column":5,"offset":4264},"end":{"line":173,"column":27,"offset":4286},"indent":[]}}],"position":{"start":{"line":173,"column":3,"offset":4262},"end":{"line":173,"column":27,"offset":4286},"indent":[]}}],"position":{"start":{"line":173,"column":3,"offset":4262},"end":{"line":173,"column":27,"offset":4286},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"那代码大致是这样的：","position":{"start":{"line":175,"column":5,"offset":4292},"end":{"line":175,"column":15,"offset":4302},"indent":[]}}],"position":{"start":{"line":175,"column":5,"offset":4292},"end":{"line":175,"column":15,"offset":4302},"indent":[]}},{"type":"html","lang":"c","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\"><span class=\"token keyword\">case</span> <span class=\"token string\">'|'</span><span class=\"token operator\">:</span>\n    pcmd <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">struct</span> <span class=\"token class-name\">pipecmd</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>cmd<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">fprintf</span><span class=\"token punctuation\">(</span><span class=\"token constant\">stderr</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Fail to create pipe\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">_exit</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">fork1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n      <span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token function\">dup</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token function\">close</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token function\">close</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token function\">runcmd</span><span class=\"token punctuation\">(</span>pcmd<span class=\"token operator\">-></span>right<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// the execv will end this child</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">dup</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">close</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">close</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">runcmd</span><span class=\"token punctuation\">(</span>pcmd<span class=\"token operator\">-></span>left<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// the execv will end this child</span>\n    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":177,"column":5,"offset":4308},"end":{"line":197,"column":8,"offset":4828},"indent":[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5]}},{"type":"paragraph","children":[{"type":"text","value":"因为本来就应该左边作为右边的输入，所以不能","position":{"start":{"line":199,"column":5,"offset":4834},"end":{"line":199,"column":26,"offset":4855},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">wait</code>","position":{"start":{"line":199,"column":26,"offset":4855},"end":{"line":199,"column":32,"offset":4861},"indent":[]}},{"type":"text","value":"，这导致如果左边返回很快，就直接返回了，如运行","position":{"start":{"line":199,"column":32,"offset":4861},"end":{"line":199,"column":55,"offset":4884},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">/bin/ls | /bin/sleep 3</code>","position":{"start":{"line":199,"column":55,"offset":4884},"end":{"line":199,"column":79,"offset":4908},"indent":[]}},{"type":"text","value":"，本来结果应该等3秒的，现在就直接返回了。","position":{"start":{"line":199,"column":79,"offset":4908},"end":{"line":199,"column":100,"offset":4929},"indent":[]}}],"position":{"start":{"line":199,"column":5,"offset":4834},"end":{"line":199,"column":100,"offset":4929},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"如果运行pcmd->right不进行fork：","position":{"start":{"line":201,"column":5,"offset":4935},"end":{"line":201,"column":28,"offset":4958},"indent":[]}}],"position":{"start":{"line":201,"column":5,"offset":4935},"end":{"line":201,"column":28,"offset":4958},"indent":[]}}],"position":{"start":{"line":201,"column":3,"offset":4933},"end":{"line":201,"column":28,"offset":4958},"indent":[]}}],"position":{"start":{"line":201,"column":3,"offset":4933},"end":{"line":201,"column":28,"offset":4958},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"如果right不进行fork，那么代码大致是这样的：","position":{"start":{"line":203,"column":5,"offset":4964},"end":{"line":203,"column":31,"offset":4990},"indent":[]}}],"position":{"start":{"line":203,"column":5,"offset":4964},"end":{"line":203,"column":31,"offset":4990},"indent":[]}},{"type":"html","lang":"c","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\"><span class=\"token keyword\">case</span> <span class=\"token string\">'|'</span><span class=\"token operator\">:</span>\n    pcmd <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">struct</span> <span class=\"token class-name\">pipecmd</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>cmd<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">fprintf</span><span class=\"token punctuation\">(</span><span class=\"token constant\">stderr</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Fail to create pipe\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">_exit</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">fork1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n      <span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token function\">dup</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token function\">close</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token function\">close</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token function\">runcmd</span><span class=\"token punctuation\">(</span>pcmd<span class=\"token operator\">-></span>left<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// the execv will end this child</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token function\">wait</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">dup</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">close</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">close</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">runcmd</span><span class=\"token punctuation\">(</span>pcmd<span class=\"token operator\">-></span>right<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// the execv will end this child</span>\n    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":205,"column":5,"offset":4996},"end":{"line":226,"column":8,"offset":5534},"indent":[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5]}},{"type":"paragraph","children":[{"type":"text","value":"用","position":{"start":{"line":228,"column":5,"offset":5540},"end":{"line":228,"column":6,"offset":5541},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">/bin/sleep 3 | /bin/echo hi</code>","position":{"start":{"line":228,"column":6,"offset":5541},"end":{"line":228,"column":35,"offset":5570},"indent":[]}},{"type":"text","value":"进行测试，这个指令的输出应该是瞬间输出","position":{"start":{"line":228,"column":35,"offset":5570},"end":{"line":228,"column":54,"offset":5589},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">hi</code>","position":{"start":{"line":228,"column":54,"offset":5589},"end":{"line":228,"column":58,"offset":5593},"indent":[]}},{"type":"text","value":"之后等3秒。但是现在这个版本因为等","position":{"start":{"line":228,"column":58,"offset":5593},"end":{"line":228,"column":75,"offset":5610},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">sleep</code>","position":{"start":{"line":228,"column":75,"offset":5610},"end":{"line":228,"column":82,"offset":5617},"indent":[]}},{"type":"text","value":"运行完之后再运行","position":{"start":{"line":228,"column":82,"offset":5617},"end":{"line":228,"column":90,"offset":5625},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">echo</code>","position":{"start":{"line":228,"column":90,"offset":5625},"end":{"line":228,"column":96,"offset":5631},"indent":[]}},{"type":"text","value":"，结果就是先等3秒，再输出","position":{"start":{"line":228,"column":96,"offset":5631},"end":{"line":228,"column":109,"offset":5644},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">hi</code>","position":{"start":{"line":228,"column":109,"offset":5644},"end":{"line":228,"column":113,"offset":5648},"indent":[]}},{"type":"text","value":"。如果去掉","position":{"start":{"line":228,"column":113,"offset":5648},"end":{"line":228,"column":118,"offset":5653},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">wait</code>","position":{"start":{"line":228,"column":118,"offset":5653},"end":{"line":228,"column":124,"offset":5659},"indent":[]}},{"type":"text","value":"运行完","position":{"start":{"line":228,"column":124,"offset":5659},"end":{"line":228,"column":127,"offset":5662},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">echo</code>","position":{"start":{"line":228,"column":127,"offset":5662},"end":{"line":228,"column":133,"offset":5668},"indent":[]}},{"type":"text","value":"就直接返回了，直接忽略了","position":{"start":{"line":228,"column":133,"offset":5668},"end":{"line":228,"column":145,"offset":5680},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">sleep</code>","position":{"start":{"line":228,"column":145,"offset":5680},"end":{"line":228,"column":152,"offset":5687},"indent":[]}},{"type":"text","value":"。","position":{"start":{"line":228,"column":152,"offset":5687},"end":{"line":228,"column":153,"offset":5688},"indent":[]}}],"position":{"start":{"line":228,"column":5,"offset":5540},"end":{"line":228,"column":153,"offset":5688},"indent":[]}}],"position":{"start":{"line":169,"column":1,"offset":4185},"end":{"line":229,"column":1,"offset":5689},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"为什么等两个都运行起来之后再","position":{"start":{"line":230,"column":3,"offset":5692},"end":{"line":230,"column":17,"offset":5706},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">wait</code>","position":{"start":{"line":230,"column":17,"offset":5706},"end":{"line":230,"column":23,"offset":5712},"indent":[]}},{"type":"text","value":"而不是同时wait？","position":{"start":{"line":230,"column":23,"offset":5712},"end":{"line":230,"column":33,"offset":5722},"indent":[]}}],"position":{"start":{"line":230,"column":3,"offset":5692},"end":{"line":230,"column":33,"offset":5722},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"这个的代码就是上面一段代码，原因就是为了能够让两个东西同时运行起来。不然的话，比如说要读进来一个大文件，然后对其进行","position":{"start":{"line":232,"column":3,"offset":5726},"end":{"line":232,"column":61,"offset":5784},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">wc</code>","position":{"start":{"line":232,"column":61,"offset":5784},"end":{"line":232,"column":65,"offset":5788},"indent":[]}},{"type":"text","value":"，就会出现大文件充满了pipe buffer，导致writer block，因为还没有返回，所以没有reader，从而就整体锁住了这样的问题。","position":{"start":{"line":232,"column":65,"offset":5788},"end":{"line":232,"column":136,"offset":5859},"indent":[]}}],"position":{"start":{"line":232,"column":3,"offset":5726},"end":{"line":232,"column":136,"offset":5859},"indent":[]}}],"position":{"start":{"line":230,"column":1,"offset":5690},"end":{"line":232,"column":136,"offset":5859},"indent":[1,1]}}],"position":{"start":{"line":135,"column":1,"offset":3236},"end":{"line":232,"column":136,"offset":5859},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"关于pipe部分的一些内部实现和结构在note10中有提到，有兴趣可以看一下。","position":{"start":{"line":234,"column":1,"offset":5861},"end":{"line":234,"column":40,"offset":5900},"indent":[]}}],"position":{"start":{"line":234,"column":1,"offset":5861},"end":{"line":234,"column":40,"offset":5900},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"还有一些challenge problems，这次就先不写了，以后有机会吧。","position":{"start":{"line":236,"column":1,"offset":5902},"end":{"line":236,"column":39,"offset":5940},"indent":[]}}],"position":{"start":{"line":236,"column":1,"offset":5902},"end":{"line":236,"column":39,"offset":5940},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"写完这三部分之后就可以运行测试代码了，","position":{"start":{"line":238,"column":1,"offset":5942},"end":{"line":238,"column":20,"offset":5961},"indent":[]}}],"position":{"start":{"line":238,"column":1,"offset":5942},"end":{"line":238,"column":20,"offset":5961},"indent":[]}},{"type":"html","lang":"bash","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ ./sh\n6.828$ sh <span class=\"token operator\">&lt;</span> t.sh\n     10      10      51\n     10      10      51</code></pre></div>","position":{"start":{"line":240,"column":1,"offset":5963},"end":{"line":245,"column":4,"offset":6046},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"注意这里我并没有去写","position":{"start":{"line":247,"column":1,"offset":6048},"end":{"line":247,"column":11,"offset":6058},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">PATH</code>","position":{"start":{"line":247,"column":11,"offset":6058},"end":{"line":247,"column":17,"offset":6064},"indent":[]}},{"type":"text","value":"这部分，所以改了","position":{"start":{"line":247,"column":17,"offset":6064},"end":{"line":247,"column":25,"offset":6072},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">t.sh</code>","position":{"start":{"line":247,"column":25,"offset":6072},"end":{"line":247,"column":31,"offset":6078},"indent":[]}},{"type":"text","value":"，具体每个指令在哪里可以通过运行","position":{"start":{"line":247,"column":31,"offset":6078},"end":{"line":247,"column":47,"offset":6094},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">which</code>","position":{"start":{"line":247,"column":47,"offset":6094},"end":{"line":247,"column":54,"offset":6101},"indent":[]}},{"type":"text","value":"指令来获取，如","position":{"start":{"line":247,"column":54,"offset":6101},"end":{"line":247,"column":61,"offset":6108},"indent":[]}}],"position":{"start":{"line":247,"column":1,"offset":6048},"end":{"line":247,"column":61,"offset":6108},"indent":[]}},{"type":"html","lang":"bash","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">which</span> <span class=\"token function\">ls</span>\n/bin/ls</code></pre></div>","position":{"start":{"line":249,"column":1,"offset":6110},"end":{"line":252,"column":4,"offset":6140},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"等项目代码部署到git上之后，会在这里贴一下我的","position":{"start":{"line":254,"column":1,"offset":6142},"end":{"line":254,"column":25,"offset":6166},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">sh.c</code>","position":{"start":{"line":254,"column":25,"offset":6166},"end":{"line":254,"column":31,"offset":6172},"indent":[]}},{"type":"text","value":"的代码链接的。","position":{"start":{"line":254,"column":31,"offset":6172},"end":{"line":254,"column":38,"offset":6179},"indent":[]}}],"position":{"start":{"line":254,"column":1,"offset":6142},"end":{"line":254,"column":38,"offset":6179},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":254,"column":38,"offset":6179}}}}