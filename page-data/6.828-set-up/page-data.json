{"componentChunkName":"component---src-templates-blog-post-js","path":"/6.828-set-up/","webpackCompilationHash":"8e732e940c81013b8aa4","result":{"data":{"markdownRemark":{"html":"<p>从今天开始打算跟着MIT 6.828学习操作系统，做一下相关的lab。配置环境有点麻烦，在这里记录一下，也用来方便后人。</p>\n<h2>环境</h2>\n<p>Ubuntu 18.04</p>\n<h2>安装方式</h2>\n<p>首先运行</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ objdump -i</code></pre></div>\n<p>如果第二行不是<code class=\"language-text\">elf32-i386</code>, 说明不是32位系统，需要安装</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> gcc-multilib</code></pre></div>\n<p>然后安装QEMU：</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> <span class=\"token function\">install</span> libsdl1.2-dev libtool-bin libglib2.0-dev libz-dev libpixman-1-dev\n<span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> <span class=\"token function\">install</span> flex bison\n<span class=\"token function\">cd</span> your/path/6.828/\n<span class=\"token function\">git</span> clone https://github.com/mit-pdos/6.828-qemu.git qemu\n<span class=\"token function\">cd</span> qemu\n./configure --disable-kvm --target-list<span class=\"token operator\">=</span><span class=\"token string\">\"i386-softmmu x86_64-softmmu\"</span> --disable-werror --python<span class=\"token operator\">=</span>/your/python2.7/interpreter/path\n<span class=\"token function\">sudo</span> <span class=\"token function\">make</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">sudo</span> <span class=\"token function\">make</span> <span class=\"token function\">install</span></code></pre></div>\n<p>默认安装地址是<code class=\"language-text\">/user/local/share</code>, 如果需要更改安装地址，可自行查询MIT提供的方法，主要是在<code class=\"language-text\">./config</code>这行加入<code class=\"language-text\">--prefix</code>.</p>\n<p>如果不知道python解释器的位置，可以运行如下代码：</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> sys\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>executable<span class=\"token punctuation\">)</span></code></pre></div>\n<p>安装完毕之后，下载JOS:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">cd</span> /your/path/6.828\n<span class=\"token function\">git</span> clone https://pdos.csail.mit.edu/6.828/2018/jos.git lab\n<span class=\"token function\">cd</span> lab\n<span class=\"token function\">make</span></code></pre></div>\n<p>显示内容应与lab 1相同。</p>\n<p>测试QEMU：</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">cd</span> /your/path/6.828/lab\n<span class=\"token function\">make</span> qemu</code></pre></div>\n<p>应跳出窗口，窗口显示与lab1相同。</p>\n<p>连接gdb，打开两个terminal，在第一个中：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">cd /your/path/6.828/lab\nmake qemu-gdb</code></pre></div>\n<p>应当跳出和刚刚类似的窗口，但是显示stopping。</p>\n<p>在第二个中：</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">cd</span> your/path/6.828/lab\ngdb</code></pre></div>\n<p>注意第一次运行的时候gdb会提示把某一行加入<code class=\"language-text\">~/.gdbinit</code>中，其内容类似</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">add-auto-load-safe-path /your/path/6.828/xv6-public/.gdbinit</code></pre></div>\n<p>加入后重新进行上面的操作（重新打开两个terminal并运行指令），会发现在gdb的文字提示中出现：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">+ target remote localhost:26000</code></pre></div>\n<p>就说明连接成功，可以继续用lab1测试其内容是否正确。</p>","frontmatter":{"title":"6.828 系统配置","date":"2019-02-12T03:05:00.000Z","tags":["OS","6.828"]}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/6.828-set-up/"}}}