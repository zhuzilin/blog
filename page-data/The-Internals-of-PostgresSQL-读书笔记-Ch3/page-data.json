{"componentChunkName":"component---src-templates-blog-post-js","path":"/The-Internals-of-PostgresSQL-读书笔记-Ch3/","result":{"data":{"markdownRemark":{"html":"<p>这一张是介绍 query processing 的，也是我一直非常感兴趣的一个内容。</p>\n<h2>3.1 Overview</h2>\n<p><img src=\"http://www.interdb.jp/pg/img/fig-3-01.png\" alt=\"figure 3.1. Query Prcessing\"></p>\n<p>PostgresSQL 的 query 处理模块包含 5 个子系统：</p>\n<ul>\n<li>Parser</li>\n<li>Analyzer: 对 pase tree 进行语义分析，并生成 query tree</li>\n<li>Rewriter: 利用 rule system 中保存的 rule 对 query tree 进行变形</li>\n<li>Planner: 基于 query tree 生成可以高效执行 query 的 plan tree</li>\n<li>Executor: 依照 query tree 执行 query；plan tree 会指定执行过程中访问 table 和 index 的顺序与方式</li>\n</ul>\n<h3>3.1.1 Parser</h3>\n<p>让我们从一个例子说起：</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> id<span class=\"token punctuation\">,</span> <span class=\"token keyword\">data</span> <span class=\"token keyword\">FROM</span> tbl_a <span class=\"token keyword\">WHERE</span> id <span class=\"token operator\">&lt;</span> <span class=\"token number\">300</span> <span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span> <span class=\"token keyword\">data</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>这样的语句的根节点是 <code class=\"language-text\">SelectStmt</code>，它的 parse tree 如下：</p>\n<p><img src=\"http://www.interdb.jp/pg/img/fig-3-02.png\" alt=\"Fig. 3.2. An example of a parse tree.\"></p>\n<p>注意 Parser 只负责检查语法，不会查出 table 名并不存在这样的问题。这样的语义问题会被留给 analyzer</p>\n<h3>3.1.2 Analyzer</h3>\n<p>Query tree 的根节点是一个名叫 <code class=\"language-text\">Query</code> 的结构体，这个结构体里面保存了 metadata，例如 query 的类型（<code class=\"language-text\">SELECT</code>, <code class=\"language-text\">INSERT</code> 之类的）。除了类型还有一些别的叶节点，拿上面的 select 语句的举例：</p>\n<p><img src=\"http://www.interdb.jp/pg/img/fig-3-03.png\" alt=\"Fig. 3.3. An example of a query tree.\"></p>\n<p>简单介绍一下这里的每个节点的作用：</p>\n<ul>\n<li><code class=\"language-text\">targetList</code> 表示结果的所有列。如果输入的 query 使用的是 <code class=\"language-text\">*</code>，analyzer 会显式替换成所有的列。</li>\n<li><code class=\"language-text\">rtable</code> (range table) 表示的是 query 中使用的 relations。在这个例子中，这里存储了 <code class=\"language-text\">tbl_a</code> 这个表的一些信息。</li>\n<li><code class=\"language-text\">jointree</code> 存储了 <code class=\"language-text\">FROM</code> 和 <code class=\"language-text\">WHERE</code> 语句</li>\n<li><code class=\"language-text\">sortClause</code> 则是 <code class=\"language-text\">SortGroupClause</code> 的 list</li>\n</ul>\n<h3>3.1.3 Rewriter</h3>\n<p>Rewriter 实现了 <a href=\"https://www.postgresql.org/docs/current/rules.html\">rule system</a>。rule system 本身很有趣，但是这一章我们将不会介绍 rewriter 和 rule system 以避免这章变得过长。</p>","frontmatter":{"title":"The Internals of PostgresSQL 读书笔记 Ch3","date":"2021-05-30T21:30:00.000Z","tags":["PL","db"]}}},"pageContext":{"slug":"/The-Internals-of-PostgresSQL-读书笔记-Ch3/"}},"staticQueryHashes":["3159585216"],"slicesMap":{}}