{"componentChunkName":"component---src-pages-index-js","path":"/","webpackCompilationHash":"5e8a56000f330ee4e5bc","result":{"data":{"site":{"siteMetadata":{"title":"zhuzilin's Blog"}},"allMarkdownRemark":{"totalCount":76,"edges":[{"node":{"id":"771a5973-e7b0-53d7-a4bb-3590f5c66316","frontmatter":{"title":"N4 语法 動詞名詞化","date":"21 June, 2020"},"fields":{"slug":"/N4_grammar_6_名词化/"},"excerpt":"工作了之后真的很久没有更过博客了....技术类的内容可能之后都会发在组里的知乎专栏上，所以博客这边就写写日常生活和语言学习吧。最近迷上了学法语，所以可能之后也会有一些法语相关的总结。 自己在尝试说日语的时候经常会遇到不知道是改用する还是するの的情况，所以这次我们来简单总结一下日…"}},{"node":{"id":"24ef83a6-c295-5dbc-aded-f9d5228b117f","frontmatter":{"title":"N4 语法 短语","date":"09 December, 2019"},"fields":{"slug":"/N4_grammar_4/"},"excerpt":"はず <接続>　動詞／形容詞い／形容動詞な／名詞の＋はず <意味>　应该 <用法>　推測的な <例> a. 素直な気持ちを相手に伝えてみよう。きっと何かが変わるはずです。 べき <接続>　動詞／形容詞くある／形容動詞である／名詞である＋べき <意味>　应该 <用法>　義務的な。…"}},{"node":{"id":"c1cdaf1e-aca6-5e43-837f-e2f2dcd3bff2","frontmatter":{"title":"N4 语法 に接続","date":"09 December, 2019"},"fields":{"slug":"/N4_grammar_5/"},"excerpt":"にて <接続>　名詞＋にて <意味>　～で <用法>　大きく分けて３つの意味があります。 物事が発生した場所。 手段・方法・材料 時間的な範囲の終わり いずれも格助詞「で」に置き換えることができます。書き言葉としてよく用いられます。 <例> a. 予約は店頭にて承っております。…"}},{"node":{"id":"cdb65350-e709-5791-911f-e5153f0c5f57","frontmatter":{"title":"N4 语法 受身形　使役系　使役受身形","date":"07 December, 2019"},"fields":{"slug":"/N4_grammar_3/"},"excerpt":"受身形 变形： 第一類動詞(五  段)：【イ段→ア段，ます→れます】 例：飲む→飲まれる、叱る→叱られる 第二類動詞(上下段)：【ます→られます】 例：食べる→食べられる、見る→見られる 第三類動詞(カ行、サ行變格) 例：来(く)る→来(こ)られる、する→される 句型： 基本的…"}},{"node":{"id":"a1ec01a9-6156-5096-98f4-cdcf772872bb","frontmatter":{"title":"N4 语法 わけ　だけ　よう　もの","date":"07 December, 2019"},"fields":{"slug":"/N4_grammar_2/"},"excerpt":"わけ わけだ <接續>　動詞／形容詞い／形容動詞な／名詞な＋わけだ <意思>　当然～のだ／～のは当たり前だ <用法>　用在當然的結果、必然的結果。 <例句> a. 彼女はモデルの仕事をしているそうだ。だから、きれいなわけだ。 b. 内戦状態が十年も続いていれば、犠牲者が多く出る…"}},{"node":{"id":"0ca8e28e-be87-534a-a8a1-929c96b0c875","frontmatter":{"title":"N4 语法 授受动词 敬语","date":"06 December, 2019"},"fields":{"slug":"/N4_grammar_1/"},"excerpt":"单词都背到N2了，发现N3,N4的好多语法都还不清楚，所以最近趁着有时间，来整理一下 授受动词 てあげる・差し上げる 我为别人做xx 私は星野さんに料理を作ってあげる。（私→星野さん） 其敬语形式是差し上げる 先生にお茶を入れて差し上げました。 但是注意，て上げる这个表达有强调…"}},{"node":{"id":"47c74c50-4db5-5141-8fbe-ade4512fe828","frontmatter":{"title":"6.824 阅读笔记4 —— dynamodb","date":"23 October, 2019"},"fields":{"slug":"/6.824-reading-note-4-dynamodb/"},"excerpt":"Dynamo: Amazon’s Highly Available Key-value Store 今天来看dynamodb。前面的introduction，related work啥的先放一边，直接来看system architecture 4 System Architec…"}},{"node":{"id":"23a6c98f-d413-5668-8f1b-644fbe8eaa99","frontmatter":{"title":"15-745 spring 2019 assigment2","date":"23 October, 2019"},"fields":{"slug":"/15-745-assignment2/"},"excerpt":"1 Introduction 讲作业应该怎么交的，跳过 2 Dataflow Analysis 就是需要写一个一般性的dataflow的分析代码。主要要用llvm中的和，前者就是用来快速做集合位运算的，后者相当于。需要注意的是，llvm 5.0把所有类似于，这样的指令都去掉了，…"}},{"node":{"id":"f6452e17-5acb-5fa4-865d-bb15f3b0d543","frontmatter":{"title":"15-418 spring 2016 assigment1","date":"21 October, 2019"},"fields":{"slug":"/15-418-assignment1/"},"excerpt":"作业叙述的链接如下为这里 Program 1: Parallel Fractal Generation Using Pthreads 用pthread分上下块儿计算分型。因为没有critical region，所以直接算就好了，代码如下： 运行后的结果为： 分别跑一下2, 3,…"}},{"node":{"id":"37dc9b4c-e5e5-5593-adc0-b8715ebca95b","frontmatter":{"title":"6.824 阅读笔记3 —— operational transformation","date":"18 October, 2019"},"fields":{"slug":"/6.824-reading-note-3-operational-transformation/"},"excerpt":"今天来看operational transformation, google doc背后的技术。 Operational Transformation in Real-Time Group Editors: Issues, algorithms, and Achievement…"}},{"node":{"id":"dbd3e05f-a764-5428-8a47-97a12c3dba1c","frontmatter":{"title":"15-745 spring 2019 assigment1","date":"16 October, 2019"},"fields":{"slug":"/15-745-assignment1/"},"excerpt":"1 Introduction 讲作业应该怎么交的，跳过 2 LLVM project 2.1 Obtaining the System Image 安装virtualbox 5.2以及对应版本的增强功能。 从http://www.cs.cmu.edu/~15745/vm-ima…"}},{"node":{"id":"cb73d6df-6128-527a-a0ba-3207d59089b9","frontmatter":{"title":"6.824 阅读笔记2 —— Raft","date":"21 September, 2019"},"fields":{"slug":"/6.824-reading-note-2-raft/"},"excerpt":"In Search of an Understandable Consensus Algorithm 5 The Raft consensus algorithm Raft是一个用来处理replicated log的算法。文中的图2进行了算法要点的总结，图3展示了算法的主要特点…"}},{"node":{"id":"9f22a112-451a-5ecf-bc41-34b4f980023e","frontmatter":{"title":"6.824 阅读笔记1 —— MapReduce","date":"20 September, 2019"},"fields":{"slug":"/6.824-reading-note-1-mapreduce/"},"excerpt":"这个学期的主要的任务就是学一下6.824。因为哥大的分布式课是按照6.824 spring 2015的安排走的，那个时候是实现paxos，而现在是实现raft，所以打算都实现一下。然后这个课重要的论文阅读部分也做一下并集。今天是第一篇，来读map reduce。 MapRedu…"}},{"node":{"id":"ea876087-cfd9-5c19-bd78-c3aaa4c98fd3","frontmatter":{"title":"Redis源码阅读 —— 字典","date":"15 August, 2019"},"fields":{"slug":"/redis-source-code-reading-dict/"},"excerpt":"今天来做源码阅读的第二部分。看一下字典结构的实现。这个结构主要位于和中。 字典 字典肯定就不能和SDS依附于一样依附于一个C的原生类型了。所以最开始需要先定义其结构。 可以看到，这里面有2个类型，(hash table)和，一个中有两个。的逻辑是很好理解的： 插图 然后哈希表中…"}},{"node":{"id":"30cdcbc8-88dc-51f4-957c-c55510e8bdc9","frontmatter":{"title":"Redis源码阅读 —— SDS","date":"14 August, 2019"},"fields":{"slug":"/redis-source-code-reading-SDS/"},"excerpt":"今天开始开一个大坑，开始读redis的源码。因为网上大家都说redis的代码非常漂亮~然后读的过程和顺序会按照《Redis 设计与实现》（试读链接）。现在的版本号是5.0.5，希望我能顺利把它读完，也希望读完的那天不要已经跳个大版本，升到6了之类的。 按刚刚提到的那本书的顺序，…"}},{"node":{"id":"787adbde-c6b0-55e2-9f3e-8846fe72e43e","frontmatter":{"title":"校招面经：阿里云安全岗、编译原理","date":"07 August, 2019"},"fields":{"slug":"/interview-note-aliyun-compiler/"},"excerpt":"昨天开始了我校招的第一个面试，是阿里云里面一个用编译原理去检查恶意脚本的组。因为我作死在简历上放了个小的解释器的项目，所以问了我半个小时编译原理，几乎全都不会...今天来记录一下。 gcc编译的流程 粗的来说，分四步 预处理：把include放进去(.i文件) (gcc -E …"}},{"node":{"id":"8f900ad4-5e2b-5e8e-bd04-eb3ee0622cbb","frontmatter":{"title":"Python multiprocessing lock vs threading lock","date":"30 July, 2019"},"fields":{"slug":"/python-multiprocessing-lock-vs-threading-lock/"},"excerpt":"昨天帮舍友debug的时候发现了一个有趣的问题，这里来讨论一下。 舍友写出的问题主要是要做这样一件事。他在用gunicorn加flask做一个可视化项目。gunicorn是一个基于的WSGI server。大致的用法就和官网一样： 通过设置会设置fork的次数，也就是worke…"}},{"node":{"id":"94a10d98-542c-563d-9285-510467e031a9","frontmatter":{"title":"kubernetes basics","date":"29 July, 2019"},"fields":{"slug":"/kubernetes-basics/"},"excerpt":"实习过程中自告奋勇要帮着搞kubernetes，结果发现这个东西有点恶心...在这里总结一下基础知识，省的好不容易看的东西忘了~ 基本结构 Kubernetes的基本结构 Kubernetes主要有两种resources（为啥叫资源...）： master: 管理cluster…"}},{"node":{"id":"36391cd3-f659-52c0-a8e5-dfc51db35ae3","frontmatter":{"title":"Javascript Basics -- prototype","date":"23 July, 2019"},"fields":{"slug":"/js-basic-prototype/"},"excerpt":"最近开始做面试的复习，打算顺便把一些看过好多遍的js知识总结提炼一下。这次的内容是。本文的内容来自于You Don't Know JS: this & Object Prototypes。非常好的一本书，非常推荐。  首先来看一个例子： （后文会介绍，现在暂时把它大会曾创建了一…"}},{"node":{"id":"7ffcffc1-130e-5f1b-87b8-4a61827d41b2","frontmatter":{"title":"Javascript Basics -- this","date":"23 July, 2019"},"fields":{"slug":"/js-basic-this/"},"excerpt":"最近开始做面试的复习，打算顺便把一些看过好多遍的js知识总结提炼一下。这次从开始。本文的内容来自于You Don't Know JS: this & Object Prototypes。非常好的一本书，非常推荐。 可以说是js中非常令人困惑的一个关键词了。首先看一个的用例： 相…"}},{"node":{"id":"7739db80-49a7-5764-828a-c271436eee79","frontmatter":{"title":"计算机网络阅读笔记-- Application Layer","date":"15 July, 2019"},"fields":{"slug":"/computer-network-notes-application-layer/"},"excerpt":"本文为阅读Computer Networking: A Top-Down Approach (7th Edition)的阅读笔记，估计会比较没有条理，只是我比较喜欢在看书的时候旁边随手记两笔。既然读的是电子书，自然笔记也得是。 HTTP Web page consists of…"}},{"node":{"id":"96721999-4bbf-5d63-ad14-e1a556f089ae","frontmatter":{"title":"计算机网络阅读笔记-- Transport Layer","date":"15 July, 2019"},"fields":{"slug":"/computer-network-notes-transport-layer/"},"excerpt":"本文为阅读Computer Networking: A Top-Down Approach (7th Edition)的阅读笔记，估计会比较没有条理，只是我比较喜欢在看书的时候旁边随手记两笔。既然读的是电子书，自然笔记也得是。 在谈及TCP和UDP之前，先说一下transpor…"}},{"node":{"id":"2c19cc99-3cb6-58e5-8230-2dc337493740","frontmatter":{"title":"docker basics","date":"10 July, 2019"},"fields":{"slug":"/docker-basics/"},"excerpt":"本文假设读者已经正确安装了docker。同时，下述指令运行的平台为RHEL 7（因为领英只给我配了这么台东西....）。以及基本指令来自于《第一本docker书——修订版》。 docker常用指令 检查是否正常工作。 查询系统的container列表： 查看所有容器的运行状态：…"}},{"node":{"id":"906b5dc3-9202-555c-a4a5-53f9bef48857","frontmatter":{"title":"Install .NET Core on RHEL7","date":"13 June, 2019"},"fields":{"slug":"/Install-.NET-Core-on-RHEL7/"},"excerpt":"因为工作需要把一个项目从.NET Framework移到.NET Core，而公司给配的工作站是redhat，所以在这里记录一下安装的过程。 首先是下载，默认的下载出现了subscribe相关的问题，不知道该怎么解决，所以就采用了下载binary的方式。从这里找了RHEL6的b…"}},{"node":{"id":"a4cc518c-f18e-5e99-8d36-23b8c9b3987e","frontmatter":{"title":"About Monad","date":"11 June, 2019"},"fields":{"slug":"/about-monad/"},"excerpt":"实习很闲，趁着没事，学学haskell和写parser。对于这两者来说，非常重要的一个概念就是monad。看知乎的解释看得头疼，自己在网上扒了些资源，来这里来讨论一下monad。 本篇的主要引用来自wikibooks中的Haskell。以及不计划设计那种很玄很玄的数学知识。 F…"}},{"node":{"id":"ed411651-1cb8-5626-b167-d57b6a7a788e","frontmatter":{"title":"我的nginx笔记","date":"02 May, 2019"},"fields":{"slug":"/nginx-basics/"},"excerpt":"由于我已经无数次的查过ngnix相关的内容以及像反向代理这样的东西了，每次过了一两个月就忘得一干二净，所以和git一样，我自己记录一份可以直接上手的教程。使用的主要参考是nginx的beginner's guide。 nginx有一个master进程和多个worker进程。ma…"}},{"node":{"id":"5ee47c79-965b-54e5-9bd7-96e8fb9d11da","frontmatter":{"title":"About LDA","date":"25 April, 2019"},"fields":{"slug":"/about-LDA/"},"excerpt":"Probabilistic Topic Model Learns distributions on words called “topics” shared by documents Learns a distribution on topics for each docume…"}},{"node":{"id":"07f5eab9-6cfb-5df2-8170-af9ede8de179","frontmatter":{"title":"About Matrix Factorization","date":"24 April, 2019"},"fields":{"slug":"/about-matrix-factorization/"},"excerpt":"Matrix Factorization is a simple way to do collaborative filtering. matrix-factorization The main idea is that   and is smaller than the ra…"}},{"node":{"id":"f4f8438f-7ede-5e3d-a2f7-cc542a1127cf","frontmatter":{"title":"数据库基本架构","date":"17 April, 2019"},"fields":{"slug":"/database-architecture/"},"excerpt":"database-architecture 这次我们来整理一下数据库的基本架构，内容来自Database Management Systems 3rd Edition. 从最简略的角度，DBMS接受SQL，在数据库中运行他们，并返回结果。 当用户进行一次查询的时候，SQL先被p…"}},{"node":{"id":"aefc1b40-e44f-583c-8e70-1ca9997cac72","frontmatter":{"title":"6.828 lab4 Preemptive Multitasking","date":"31 March, 2019"},"fields":{"slug":"/6.828-lab4/"},"excerpt":"Part A: Multiprocessor Support and Cooperative Multitasking 第一部分要把JOS拓展到多处理器的系统，并实现一些system call来让user-level environments创建新的环境。然后还需要实现coop…"}},{"node":{"id":"ca06b04d-b680-502b-a5c6-0281e6f0ba5b","frontmatter":{"title":"6.828 Homework Barriers","date":"26 March, 2019"},"fields":{"slug":"/6.828-hw-barriers/"},"excerpt":"本次作业的内容是通过使用condition variable来实现barrier功能。barrier，简单来说，就是给线程们画一条线，必须等他们都运行到这条线（其实就是满足某个条件）的时候，才能分别继续运行。 这次作业需要提前去了解一下condition variable，这个…"}},{"node":{"id":"fb4b7770-818b-5b5d-9641-33764473035d","frontmatter":{"title":"6.828 总结","date":"26 March, 2019"},"fields":{"slug":"/6.828-review/"},"excerpt":"Boot Loader 首先当机器启动的时候，会自动加载BIOS。BIOS会检查有无bootable disk，如果有的话，会加载其boot loader（实际上就是加载boot loader）的ELF，也就是boot loader对应的二进制文件。其位于第一个IDE disk…"}},{"node":{"id":"007ff0b0-30d3-5018-95a6-75594b008069","frontmatter":{"title":"6.828 笔记10","date":"25 March, 2019"},"fields":{"slug":"/6.828-note10-coordination-(sleep&wakeup)/"},"excerpt":"这里会记录阅读6.828课程lecture note的我的个人笔记。可能会中英混杂，不是很适合外人阅读，也请见谅。 Lecture 11: Coordination (sleep&wakeup) sequence coordination 有的时候线程需要等待某些事件，比如 d…"}},{"node":{"id":"9f543e67-d8b2-52f6-9e65-05ecffa1e999","frontmatter":{"title":"6.828 笔记11 —— File System","date":"25 March, 2019"},"fields":{"slug":"/6.828-note11-file-system/"},"excerpt":"这里会记录阅读6.828课程lecture note的我的个人笔记。可能会中英混杂，不是很适合外人阅读，也请见谅。 Lecture 12: File System 我们为什么需要file system durability across restart naming and o…"}},{"node":{"id":"744d32e0-8734-52cc-ad82-15117ade880a","frontmatter":{"title":"6.828 Homework User-Level thread","date":"25 March, 2019"},"fields":{"slug":"/6.828-hw-user-level-threads/"},"excerpt":"本次作业会处理一个简单的用户的thread包，用于实现context switching. Switching threads 下载和，然后修改xv6的 需要写的代码在里。 注意这里面的使用了中的结构： 和都是。然后一个stack的结构在函数中体现了： 也就是最上面是32byt…"}},{"node":{"id":"ece7f59f-32b1-5410-8905-73603ad40b84","frontmatter":{"title":"About Matrix Calculus","date":"10 March, 2019"},"fields":{"slug":"/about-matrix-calculus/"},"excerpt":"很长时间以来，虽然学习机器学习，但是我对最基本的矩阵求导仍然是非常模糊，在这里好好的整理一下。以下内容几乎全部来自Matrix calculus的维基页面。 Scope 从一个简单的标量函数对矩阵求导为例： 也可以写成矩阵形式，那就是标量函数关于向量求导： 更复杂一点的例子，就…"}},{"node":{"id":"a02f2878-f508-5970-a457-4e219effa686","frontmatter":{"title":"Google Cloud 配置 ssh","date":"09 March, 2019"},"fields":{"slug":"/Configure-google-cloud-ssh/"},"excerpt":"如果我们需要通过本地的ssh登陆google cloud instance，主要要进行如下几步： 修改ssh配置文件/etc/ssh/sshd_config 然后把该文件修改为： 然后给root用话设置密码： 之后重启ssh 最后在左边的导航栏中的MetaData中的ssh里面…"}},{"node":{"id":"2c06c662-7836-57e7-92c7-41424ef01f2d","frontmatter":{"title":"About EM","date":"08 March, 2019"},"fields":{"slug":"/about-EM/"},"excerpt":"The material of this post is from ESL. Two-Component Mixture Model Suppose we have a model as such: where  Therefore, the density function …"}},{"node":{"id":"061e93e2-e24e-567c-bdcd-4e323b18c3f8","frontmatter":{"title":"About Linear Time Series","date":"08 March, 2019"},"fields":{"slug":"/about-linear-time-series/"},"excerpt":"This post mainly uses material from Analysis of Financial Time Series. Stationarity Stationarity is the foundation of time series analysis.…"}},{"node":{"id":"5ad3b1e4-b184-5838-906b-c99d57aba4b0","frontmatter":{"title":"6.828 笔记9","date":"06 March, 2019"},"fields":{"slug":"/6.828-note9-processes-threads-and-scheduling/"},"excerpt":"这里会记录阅读6.828课程lecture note的我的个人笔记。可能会中英混杂，不是很适合外人阅读，也请见谅。 Lecture 10: Processes, threads, and scheduling 之前的一次作业基本上都是阅读代码和回答问题，所以就不单独列出来了。本…"}},{"node":{"id":"73daaaa2-21f8-50c3-9a0d-11ebbcd56a39","frontmatter":{"title":"6.828 lab3 User Environments","date":"05 March, 2019"},"fields":{"slug":"/6.828-lab3/"},"excerpt":"注意，在运行lab3之前，需要修改文件中的部分为： 非常感谢解决了这个问题的同学，解决的原文在这里。 Part A: User Environments and Exception Handling 首先我们需要看一下新的文件，其中包含了user environment的基本定…"}},{"node":{"id":"e20f48e2-6c15-55b6-b0d4-30f9cef4d938","frontmatter":{"title":"6.828 笔记8","date":"02 March, 2019"},"fields":{"slug":"/6.828-note8-locking/"},"excerpt":"这里会记录阅读6.828课程lecture note的我的个人笔记。可能会中英混杂，不是很适合外人阅读，也请见谅。 Lecture 9: Locking lock的简单抽象： lock就是一个object，如果多个线程调用，只有一个thread能拿到，其他的就需要等待。 程序经…"}},{"node":{"id":"65f4973f-b2fb-515a-9046-7b32c6281b5e","frontmatter":{"title":"6.828 Homework Threads and Locking","date":"01 March, 2019"},"fields":{"slug":"/6.828-hw-threads-and-locking/"},"excerpt":"这次的作业应该是这几次中最简单的一次了。主要就是进行了一个有外链的哈希表的多线程插入和取值。 取值部分不会进行修改，所以不用加锁。只是在插入的部分注意到： 注意到这里的是每个哈希值对应的链表的结尾，所以需要加锁，不然两个线程同时往一个相同的结尾插入，就会丢东西了。所以在中初始化…"}},{"node":{"id":"80655e72-11b7-5ac5-a482-22c288e34db3","frontmatter":{"title":"6.828 笔记7","date":"27 February, 2019"},"fields":{"slug":"/6.828-note7-interrupts-system-calls-and-exceptions/"},"excerpt":"这里会记录阅读6.828课程lecture note的我的个人笔记。可能会中英混杂，不是很适合外人阅读，也请见谅。 Lecture 8: Interrupts, System calls, and Exceptions 这次的主题就是说当硬件want attention的时候，…"}},{"node":{"id":"6b9711f1-0368-55fb-af5a-778e0dd34cd7","frontmatter":{"title":"6.828 Homework xv6 CPU alarm","date":"26 February, 2019"},"fields":{"slug":"/6.828-hw-xv6-cpu-alarm/"},"excerpt":"这次的作业和之前的system call那次的作业非常像，这次是加入一个叫alarm的system call。其主要的功能是每间隔若干个cpu tick就触法一次handle函数。所以这里不再赘述如何创建一个system call，而是关注于不同的地方。 作业中给的测试代码如下…"}},{"node":{"id":"50d80845-2251-5550-9561-6c3941c8af9a","frontmatter":{"title":"About Binary Classifier","date":"25 February, 2019"},"fields":{"slug":"/about-binary-classifier/"},"excerpt":"There is a summary of many rudimental binary classifier. And for more complex ones like SVM, there will be a post in the future. Bayes Clas…"}},{"node":{"id":"de076db5-ad23-5c16-8a05-4abad9271076","frontmatter":{"title":"6.828 lab2 Memory Management","date":"24 February, 2019"},"fields":{"slug":"/6.828-lab2/"},"excerpt":"Part 1: Physical Page Management 写一个physical page allocator。注意分配出来的就是表示了整个物理内存，但是记录的是每个page对应的虚拟地址。用物理地址来找到对应的page，然后用这个page的虚拟地址来得到其实际存的东西…"}},{"node":{"id":"42727c68-144e-52a8-9af4-3edcb482bad7","frontmatter":{"title":"6.828 笔记6","date":"22 February, 2019"},"fields":{"slug":"/6.828-note6-using-virtual-memory/"},"excerpt":"这里会记录阅读6.828课程lecture note的我的个人笔记。可能会中英混杂，不是很适合外人阅读，也请见谅。 Lecture 7: Using Virtual Memory step back: 从整个课程的角度 没有设计OS的最好方式 很多OS都使用虚拟内存，但是这不一…"}},{"node":{"id":"9d06c19e-65c8-58de-99cd-2de30c63df1c","frontmatter":{"title":"6.828 Homework xv6 lazy page allocation","date":"20 February, 2019"},"fields":{"slug":"/6.828-hw-xv6-lazy-page-allocation/"},"excerpt":"Part One: Eliminate allocation from sbrk() 首先是要在中去掉分配内存的部分。函数原来的版本是： 可想而知，分配内存的主要方式来源于（在），就是会给当前进程的page table加n的内存，并把加。注意，阅读函数可以得知，在分配的时候不会…"}},{"node":{"id":"dc2ef6ba-8911-5882-911a-e306d7b67851","frontmatter":{"title":"6.828 笔记5","date":"20 February, 2019"},"fields":{"slug":"/6.828-note5-virtual-memory/"},"excerpt":"这里会记录阅读6.828课程lecture note的我的个人笔记。可能会中英混杂，不是很适合外人阅读，也请见谅。 Lecture 6: Virtual Memory Virual Memory Overview 我们需要隔离开的address space 每个进程都有自己的内…"}},{"node":{"id":"c016e230-2660-5255-b52c-6511ecd5cae5","frontmatter":{"title":"6.828 Homework xv6 system call","date":"19 February, 2019"},"fields":{"slug":"/6.828-hw-xv6-system-call/"},"excerpt":"Part One: System call tracing 第一个任务是让每次调用system call的时候，都会输出其名字和返回值。需要修改的代码是 我就直接用了暴力方法，如下： 至于如何输出system call arguments，应该是要用里面的值吧，具体具体没想好。…"}},{"node":{"id":"5d5486bc-fabe-53cd-b105-7201b36dd4d2","frontmatter":{"title":"6.828 笔记4","date":"18 February, 2019"},"fields":{"slug":"/6.828-note4-isolation-mechanisms/"},"excerpt":"这里会记录阅读6.828课程lecture note的我的个人笔记。可能会中英混杂，不是很适合外人阅读，也请见谅。 Lecture 5: Isolation mechanisms 多个进程同时运行导致了对操作系统的3项主要要求： multiplexing isolation i…"}},{"node":{"id":"b4b04c69-1eac-5a9b-ba02-22b87ae86411","frontmatter":{"title":"6.828 笔记3","date":"17 February, 2019"},"fields":{"slug":"/6.828-note3-shell-and-os-organization/"},"excerpt":"这里会记录阅读6.828课程lecture note的我的个人笔记。可能会中英混杂，不是很适合外人阅读，也请见谅。 Lecture 3: C and gdb 这一讲基本上都是介绍工具，就不在此记录了，C的部分可以看K&R，gdb的部分可以直接搜课件。的例子应该在lab1中已经进…"}},{"node":{"id":"2a57d85f-3a74-5bdd-8070-6d443b0e1fa4","frontmatter":{"title":"6.828 Homework xv6 shell","date":"16 February, 2019"},"fields":{"slug":"/6.828-hw-xv6-shell/"},"excerpt":"这个作业是要求完成这个文件，来写一个shell。做这个作业之前还是需要看一下xv6 book的第一章的，不然有些地方会不明白。以及，真正的xv6的shell版本在中，可以参考学习。同时，lecture 4中的第一部分一些关于这次作业的问题，我们也在这里进行讨论。 Executi…"}},{"node":{"id":"e43be30b-71f7-5ec4-a2dd-bfacc5be4bff","frontmatter":{"title":"6.828 Homework boot xv6","date":"14 February, 2019"},"fields":{"slug":"/6.828-hw-boot-xv6/"},"excerpt":"Boot xv6 没什么需要做的，都在配置的那片里面介绍过了。 Finding and breaking at an address 首先按照要求，运行： 查manul可以知道，nm的作用是GNU nm lists the symbols from object files o…"}},{"node":{"id":"769b76e3-2f3f-5eaa-86ab-5554f1ea22e5","frontmatter":{"title":"About Linear Regression","date":"13 February, 2019"},"fields":{"slug":"/about-linear-regression/"},"excerpt":"This semester, all three of my courses mentioned linear regression. And I believe it would be nice to summarize it. For linear regression, …"}},{"node":{"id":"c43cd609-a92a-5730-915c-7d1bfdd9d758","frontmatter":{"title":"6.828 笔记2 x86 and PC architecture","date":"13 February, 2019"},"fields":{"slug":"/6.828-note2-x86-and-pc-architecture/"},"excerpt":"这里会记录阅读6.828课程lecture note的我的个人笔记。可能会中英混杂，不是很适合外人阅读，也请见谅。 Lecture 2: x86 and PC architecture PC architecture 一个完整的CPU有： x86 CPU与其寄存器，执行单元和内…"}},{"node":{"id":"949043cc-71e4-5726-8e78-59f8f75c69c4","frontmatter":{"title":"6.828 lab1 Booting a PC","date":"12 February, 2019"},"fields":{"slug":"/6.828-lab1/"},"excerpt":"布置好环境之后就可以开始一点一点写作业了。 Part 1: PC Bootstrap Getting Started with x86 assembly 了解汇编代码。 Exercise 1 阅读Brennan's Guide to Inline Assembly的The Sy…"}},{"node":{"id":"48e5ff61-9d7a-5c2c-9bea-af2067a0dae4","frontmatter":{"title":"6.828 笔记1","date":"12 February, 2019"},"fields":{"slug":"/6.828-note1-overview/"},"excerpt":"这里会记录阅读6.828课程lecture note的我的个人笔记。可能会中英混杂，不是很适合外人阅读，也请见谅。 Lecture 1: O/S overview 操作系统的主要目的是： 支持应用 为了便捷对硬件进行抽象 为多种应用multiplexing the hardwa…"}},{"node":{"id":"535fef98-bd59-5828-8526-a716abd98650","frontmatter":{"title":"6.828 系统配置","date":"12 February, 2019"},"fields":{"slug":"/6.828-set-up/"},"excerpt":"从今天开始打算跟着MIT 6.828学习操作系统，做一下相关的lab。配置环境有点麻烦，在这里记录一下，也用来方便后人。 环境 Ubuntu 18.04 安装方式 首先运行 如果第二行不是, 说明不是32位系统，需要安装 然后安装QEMU： 默认安装地址是, 如果需要更改安装地…"}},{"node":{"id":"e9036552-959d-50bd-a24b-ea507a9e7ed3","frontmatter":{"title":"About Python modularity","date":"10 February, 2019"},"fields":{"slug":"/about-python-modularity/"},"excerpt":"This post is full of quote right now. Maybe sometime I will add some of my own understanding. But at the moment, the words in the reference…"}},{"node":{"id":"2ab5279a-262d-509e-b10e-7e0bc15e0fd6","frontmatter":{"title":"How is a Python program run?","date":"09 February, 2019"},"fields":{"slug":"/how-does-a-python-program-run/"},"excerpt":"When running a python program, we would normally use command line or an IDE, but how is the python program actually got run? Or in other wo…"}},{"node":{"id":"f72db303-f594-53c4-ac92-b1811446a89b","frontmatter":{"title":"Pandas read_csv use regex as delimiter","date":"03 February, 2019"},"fields":{"slug":"/pandas-read_csv-use-regex-as-delimiter-reading/"},"excerpt":"When doing my homework, I need to read a badly formed csv into a pandas dataframe. And what I need is to use regular expression for separat…"}},{"node":{"id":"e8c3a276-fc89-5d6b-a4be-9c052dafe3fc","frontmatter":{"title":"我的git笔记","date":"02 February, 2019"},"fields":{"slug":"/my-git-note/"},"excerpt":"使用git也很长时间了，但是使用起来往往是非常机械性的add  commit  push，遇到了稍微复杂一点的问题就变得晕头转向了。所以在这里整理一版更适合我本人理解的git笔记。内容源自Pro Git。 基础概念 git主要有3个部分，如下图： git state 我们将在工…"}},{"node":{"id":"bee8705d-b296-519b-b524-5ffa225b92b7","frontmatter":{"title":"读沈从文先生《从文物来谈古人的胡子问题》","date":"31 January, 2019"},"fields":{"slug":"/关于古人胡子/"},"excerpt":"读书时看到记述古罗马人何时开始有理发师，及何时少有人蓄须，突然对我国古人的胡子问题颇感兴趣。查询之后，找到了沈从文先生的一篇《从文物来谈古人胡子问题》，引经据典，也很有趣，所以在此整理一下。 西汉及之前 从商代遗留下来的各种材质的人头雕件，铸件可以看出，当时的人留胡子的，不留胡…"}},{"node":{"id":"e6c2e6ab-d12d-5c88-926f-c4ff4005a7b3","frontmatter":{"title":"About MLE","date":"30 January, 2019"},"fields":{"slug":"/about-mle/"},"excerpt":"It is really common to use maximum likelihood estimator (MLE) in machine learning. But do you ever think about the reason? Apart from the f…"}},{"node":{"id":"dedd3862-2bcf-54e2-91b4-7a7b80cf5736","frontmatter":{"title":"Transfer to Gatsby!","date":"30 January, 2019"},"fields":{"slug":"/transfer-to-gatsby/"},"excerpt":"This is a blog with nothing technical inside. I just want to express my appreciation and thank to the Gatsby team! It has been a long time …"}},{"node":{"id":"e7f46cc3-2ffe-56c3-a8a3-ddd0428fde5b","frontmatter":{"title":"Node.js events source code reading","date":"16 January, 2019"},"fields":{"slug":"/Node-js-events-source-code-reading/"},"excerpt":"It is well-known that Node.js is an event based JavaScript  runtime environment. And today let's dig deeper into the source code and have a…"}},{"node":{"id":"a1450772-5ca4-5525-9c55-762e4df493db","frontmatter":{"title":"Connect Android to PC with Termux","date":"29 December, 2018"},"fields":{"slug":"/Connect-Android-to-PC-with-Termux/"},"excerpt":"Termux Here is the introduction of termux from its official website: Termux is an Android terminal emulator and Linux environment app that …"}},{"node":{"id":"36976bec-bf2f-52ba-b640-da88dfb8a44b","frontmatter":{"title":"Configure aws-sdk in win10","date":"18 November, 2018"},"fields":{"slug":"/Configure-aws-sdk-in-win10/"},"excerpt":"Install for powershell First we need to run the powershell as administrator. With PowerShell 5.0 or higher, the installation can be done wi…"}},{"node":{"id":"b2c8c212-6c2a-5db5-9bee-a9cc64ffc5ee","frontmatter":{"title":"About CORS","date":"04 November, 2018"},"fields":{"slug":"/About-CORS/"},"excerpt":"Type of CORS First of all, it is very important that CORS error is a restriction from browser. And when a server is sending some request to…"}},{"node":{"id":"e7453c4c-708d-565e-99cb-e807d1532fee","frontmatter":{"title":"First Electron App","date":"03 September, 2018"},"fields":{"slug":"/First-Electron-App/"},"excerpt":"Installation Installing electron is the same as installing any node package.  First, we create a folder and initialize it. And when creatin…"}},{"node":{"id":"6736f738-4a34-5fdf-9c90-ca976113174e","frontmatter":{"title":"About python relative importing","date":"05 July, 2018"},"fields":{"slug":"/About-python-relative-importing/"},"excerpt":"Relative importing is painful The relative importing has always been painful in python. For example, we are writing a web app using Flask. …"}},{"node":{"id":"460c64d0-3a05-55e6-a674-6ce6ce154587","frontmatter":{"title":"Flask Basics","date":"05 July, 2018"},"fields":{"slug":"/Flask-Basics/"},"excerpt":"During my internship at Face++, I participated in upgrading a tool platform for our group to package training data and test models. In this…"}},{"node":{"id":"3c8d7b2e-e809-5012-b0a2-4037a1bd08dc","frontmatter":{"title":"D3 to Hexo","date":"04 July, 2018"},"fields":{"slug":"/D3-in-Hexo/"},"excerpt":"D3.js is a popular package for data visualization. It provides great freedom for designer and data scientists to show data. This time, we a…"}},{"node":{"id":"460dbefa-ef5b-5073-aeb7-92fd85d9310f","frontmatter":{"title":"Write Blog Using Hexo","date":"04 July, 2018"},"fields":{"slug":"/Write-Blog-Using-Hexo/"},"excerpt":"Hexo is a fast static generator that could be used to help us build blog on github pages just like the one you are viewing. And as the firs…"}}]}},"pageContext":{"isCreatedByStatefulCreatePages":true}}}