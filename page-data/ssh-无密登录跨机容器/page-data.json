{"componentChunkName":"component---src-templates-blog-post-js","path":"/ssh-无密登录跨机容器/","webpackCompilationHash":"36b38c574f1d3c5e8b77","result":{"data":{"markdownRemark":{"html":"<p>这两天在裸机上面跑测试的时候，需要让两台机器里面的镜像直接 ssh 无密通信，调了挺久的环境，在这里记录一下。</p>\n<p>大概分为如下几步：</p>\n<ol>\n<li>\n<p>制作镜像</p>\n<p>在制作镜像的时候，要在镜像里面做 ssh keygen，并把生成的公钥放在 <code class=\"language-text\">authorized_keys</code> 里面，这样就可以让任意的两个基于这个镜像的容器都能无密访问。</p>\n</li>\n<li>\n<p>配置 <code class=\"language-text\">ssh_config</code> 和 <code class=\"language-text\">sshd_config</code></p>\n<p>修改 <code class=\"language-text\">/etc/ssh/sshd_config</code>，修改默认的端口，以及监听 <code class=\"language-text\">0.0.0.0</code>。例如改成：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Port 36007\n  ListenAddress 0.0.0.0</code></pre></div>\n<p>之后修改 <code class=\"language-text\">/etc/ssh/ssh_config</code>，把端口改成和 <code class=\"language-text\">sshd_config</code> 一样：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Port 36007</code></pre></div>\n</li>\n<li>\n<p>启动 <code class=\"language-text\">sshd</code></p>\n<p>在镜像里面不能用 <code class=\"language-text\">systemctl</code>，所以直接运行 <code class=\"language-text\">/usr/sbin/sshd</code>。</p>\n</li>\n</ol>\n<p>经过上述步骤，容器之间就应该能相关链接了。如果不能的话，可能是母机的防火墙（iptables）配置的有问题。可以用 <code class=\"language-text\">iptables-save</code> 和 <code class=\"language-text\">iptables-restore</code> 进行修复。</p>\n<p>我这里一个能 work 的防火墙如下：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"># Generated by iptables-save v1.4.21 on Tue Dec 14 19:07:00 2021\n*nat\n:PREROUTING ACCEPT [1677:100660]\n:INPUT ACCEPT [1677:100660]\n:OUTPUT ACCEPT [9586:575136]\n:POSTROUTING ACCEPT [9586:575136]\n:DOCKER - [0:0]\n-A PREROUTING -m addrtype --dst-type LOCAL -j DOCKER\n-A OUTPUT ! -d 127.0.0.0/8 -m addrtype --dst-type LOCAL -j DOCKER\n-A POSTROUTING -s 172.17.0.0/16 ! -o docker0 -j MASQUERADE\n-A DOCKER -i docker0 -j RETURN\nCOMMIT\n# Completed on Tue Dec 14 19:07:00 2021\n# Generated by iptables-save v1.4.21 on Tue Dec 14 19:07:00 2021\n*filter\n:INPUT ACCEPT [2237093:1399949331]\n:FORWARD DROP [0:0]\n:OUTPUT ACCEPT [2483658:360111834]\n:DOCKER - [0:0]\n:DOCKER-ISOLATION-STAGE-1 - [0:0]\n:DOCKER-ISOLATION-STAGE-2 - [0:0]\n:DOCKER-USER - [0:0]\n-A INPUT -i eth0 -p tcp -j DROP\n-A INPUT -i eth0 -p udp -j DROP\n-A INPUT -i bond0 -p tcp -j DROP\n-A INPUT -i bond0 -p udp -j DROP\n-A FORWARD -j DOCKER-USER\n-A FORWARD -j DOCKER-ISOLATION-STAGE-1\n-A FORWARD -o docker0 -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT\n-A FORWARD -o docker0 -j DOCKER\n-A FORWARD -i docker0 ! -o docker0 -j ACCEPT\n-A FORWARD -i docker0 -o docker0 -j ACCEPT\n-A DOCKER-ISOLATION-STAGE-1 -i docker0 ! -o docker0 -j DOCKER-ISOLATION-STAGE-2\n-A DOCKER-ISOLATION-STAGE-1 -j RETURN\n-A DOCKER-ISOLATION-STAGE-2 -o docker0 -j DROP\n-A DOCKER-ISOLATION-STAGE-2 -j RETURN\n-A DOCKER-USER -j RETURN\nCOMMIT\n# Completed on Tue Dec 14 19:07:00 2021</code></pre></div>\n<p>目前还不能看得懂...暂时记录在这里吧...</p>","frontmatter":{"title":"ssh 无密登录跨机容器","date":"2021-12-10T21:30:00.000Z","tags":["shell"]}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/ssh-无密登录跨机容器/"}}}