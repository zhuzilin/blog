{"version":3,"sources":["webpack:///./src/templates/blog-post.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/utils/typography.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/layout.js"],"names":["require","__webpack_exports__","_ref","post","data","markdownRemark","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","_components_layout__WEBPACK_IMPORTED_MODULE_4__","frontmatter","title","className","date","slice","tags","map","tag","gatsby__WEBPACK_IMPORTED_MODULE_3__","to","_","kebabCase","dangerouslySetInnerHTML","__html","html","query","m","module","exports","default","loader","enqueue","StaticQueryContext","React","createContext","StaticQueryDataRenderer","staticQueryData","render","finalData","react__WEBPACK_IMPORTED_MODULE_1___default","a","Fragment","StaticQuery","props","children","Consumer","__webpack_require__","d","rhythm","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","n","typography_theme_kirkham__WEBPACK_IMPORTED_MODULE_1__","typography_theme_kirkham__WEBPACK_IMPORTED_MODULE_1___default","typography","Typography","kirkhamTheme","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","assign","json","_ref2","css","react_helmet__WEBPACK_IMPORTED_MODULE_4__","charSet","site","siteMetadata","_public_static_d_538645758_json__WEBPACK_IMPORTED_MODULE_1__"],"mappings":"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","file":"component---src-templates-blog-post-js-1184d67deee546fd97ba.js","sourcesContent":["import React from \"react\"\nimport _ from \"lodash\";\nimport { graphql, Link } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport '../styles/blog-post.css'\nrequire(`katex/dist/katex.min.css`)\n\nexport default ({ data }) => {\n    const post = data.markdownRemark\n    return (\n        <Layout>\n            <div>\n                <h1>{post.frontmatter.title}</h1>\n                <p className=\"info\">date: {post.frontmatter.date.slice(0, 10)} <br/>\n                   tags: {post.frontmatter.tags.map(tag => \n                            <span>\n                              <Link to={`/tags/${_.kebabCase(tag)}`}>{tag}</Link>&nbsp;&nbsp;\n                            </span>)}</p>\n                <div dangerouslySetInnerHTML={{ __html: post.html }} />\n            </div>\n        </Layout>\n    )\n}\n\nexport const query = graphql`\n  query($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        title\n        date\n        tags\n      }\n    }\n  }\n`","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import Typography from \"typography\"\nimport kirkhamTheme from \"typography-theme-kirkham\"\n\nconst typography = new Typography(kirkhamTheme)\n\nexport default typography\nexport const rhythm = typography.rhythm","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\nimport { css } from \"@emotion/core\"\nimport { StaticQuery, Link, graphql } from \"gatsby\"\nimport { Helmet } from \"react-helmet\"\nimport { rhythm } from \"../utils/typography\"\n\nexport default ({ children }) => (\n    <StaticQuery\n        query={\n          graphql`\n            query {\n              site {\n                siteMetadata {\n                  title\n                }\n              }\n            }\n          `}\n    render={data => (\n      <div css={css`\n                margin: 0 auto;\n                max-width: 900px;\n                padding: ${rhythm(2)};\n                padding-top: ${rhythm(1.5)};`}>\n          <Helmet>\n              <meta charSet=\"utf-8\" />\n              <title>Zilin's Blog</title>\n          </Helmet>\n          <Link to={`/blog/`}>\n              <h3 css={css`\n                      margin-bottom: ${rhythm(2)};\n                      display: inline-block;\n                      font-style: normal;`}>\n                  {data.site.siteMetadata.title}\n              </h3>\n          </Link>\n          <Link to={`/blog/about/`}\n                css={css`\n                    float: right;`}>\n              about\n          </Link>\n          {children}\n      </div>\n  )}\n  />\n)"],"sourceRoot":""}