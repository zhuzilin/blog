{"version":3,"sources":["webpack:///./src/pages/tags.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/utils/typography.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/layout.js"],"names":["TagsPage","_ref","_ref$data","data","group","allMarkdownRemark","title","site","siteMetadata","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","_components_layout__WEBPACK_IMPORTED_MODULE_5__","react_helmet__WEBPACK_IMPORTED_MODULE_3__","map","tag","key","fieldValue","gatsby__WEBPACK_IMPORTED_MODULE_4__","to","_","kebabCase","totalCount","pageQuery","m","module","exports","require","default","loader","enqueue","StaticQueryContext","React","createContext","StaticQueryDataRenderer","staticQueryData","query","render","finalData","react__WEBPACK_IMPORTED_MODULE_1___default","a","Fragment","StaticQuery","props","children","Consumer","theme","baseFontSize","baseLineHeight","scaleRatio","blockMarginBottom","headerFontFamily","bodyFontFamily","googleFonts","name","styles","headerColor","bodyColor","headerWeight","bodyWeight","boldWeight","overrideStyles","options","_ref2","adjustFontSizeTo","rhythm","scale","color","blockquote","gray","paddingLeft","marginLeft","borderLeft","blockquote > :last-child","marginBottom","blockquote cite","assign","fontWeight","blockquote cite:before","content","MOBILE_MEDIA_QUERY","marginRight","typography","Typography","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","json","__webpack_exports__","gatsby__WEBPACK_IMPORTED_MODULE_3__","css","react_helmet__WEBPACK_IMPORTED_MODULE_4__","charSet","_public_static_d_2048793728_json__WEBPACK_IMPORTED_MODULE_1__"],"mappings":"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","file":"component---src-pages-tags-js-f896d11605e01d29b077.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\n\n// Utilities\nimport _ from \"lodash\";\n\n// Components\nimport { Helmet } from \"react-helmet\"\nimport { Link, graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\n\nconst TagsPage = ({\n  data: {\n    allMarkdownRemark: { group },\n    site: {\n      siteMetadata: { title },\n    },\n  },\n}) => (\n    <Layout>\n        <div>\n        <Helmet title={title} />\n        <div>\n        <h1>Tags</h1>\n        <ul>\n            {group.map(tag => (\n            <li key={tag.fieldValue}>\n                <Link to={`/tags/${_.kebabCase(tag.fieldValue)}/`}>\n                {tag.fieldValue} ({tag.totalCount})\n                </Link>\n            </li>\n            ))}\n        </ul>\n        </div>\n    </div>\n    </Layout>\n)\n\nTagsPage.propTypes = {\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      group: PropTypes.arrayOf(\n        PropTypes.shape({\n          fieldValue: PropTypes.string.isRequired,\n          totalCount: PropTypes.number.isRequired,\n        }).isRequired\n      ),\n    }),\n    site: PropTypes.shape({\n      siteMetadata: PropTypes.shape({\n        title: PropTypes.string.isRequired,\n      }),\n    }),\n  }),\n}\n\nexport default TagsPage\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(limit: 2000) {\n      group(field: frontmatter___tags) {\n        fieldValue\n        totalCount\n      }\n    }\n  }\n`","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import Typography from \"typography\"\n\nimport gray from \"gray-percentage\"\nimport {\n  MOBILE_MEDIA_QUERY,\n} from \"typography-breakpoint-constants\"\n\nconst theme = {\n  title: \"Kirkham\",\n  baseFontSize: \"18px\",\n  baseLineHeight: 1.44,\n  scaleRatio: 2.15,\n  blockMarginBottom: 0.75,\n  headerFontFamily: [\"SimHei\", \"Quattrocento Sans\", \"sans-serif\"],\n  bodyFontFamily: [\"SimSun\", \"Quattrocento Sans\", \"serif\"],\n  googleFonts: [\n    {\n      name: \"Quattrocento Sans\",\n      styles: [\"Regular 400\", \"Bold 700\"],\n    }\n  ],\n  headerColor: \"hsla(0,0%,0%,1)\",\n  bodyColor: \"hsla(0,0%,0%,0.8)\",\n  headerWeight: 500,\n  bodyWeight: 400,\n  boldWeight: 700,\n  overrideStyles: ({ adjustFontSizeTo, scale, rhythm }, options) => ({\n    a: {\n      color: \"#9f392b\",\n    },\n    blockquote: {\n      color: gray(41),\n      paddingLeft: rhythm(13 / 16),\n      marginLeft: 0,\n      borderLeft: `${rhythm(3 / 16)} solid ${gray(80)}`,\n    },\n    \"blockquote > :last-child\": {\n      marginBottom: 0,\n    },\n    \"blockquote cite\": {\n      ...adjustFontSizeTo(options.baseFontSize),\n      color: options.bodyColor,\n      fontWeight: options.bodyWeight,\n    },\n    \"blockquote cite:before\": {\n      content: '\"— \"',\n    },\n    [MOBILE_MEDIA_QUERY]: {\n      blockquote: {\n        marginLeft: rhythm(-3 / 4),\n        marginRight: 0,\n        paddingLeft: rhythm(9 / 16),\n      },\n    },\n  }),\n}\n\nconst typography = new Typography(theme)\n\nexport default typography\nexport const rhythm = typography.rhythm","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\nimport { css } from \"@emotion/core\"\nimport { StaticQuery, Link, graphql } from \"gatsby\"\nimport { Helmet } from \"react-helmet\"\nimport { rhythm } from \"../utils/typography\"\n\nexport default ({ children }) => (\n  <StaticQuery\n    query={\n      graphql`\n      query {\n        site {\n        siteMetadata {\n          title\n        }\n        }\n      }\n      `}\n  render={data => (\n    <div css={css`\n        margin: 0 auto;\n        max-width: 900px;\n        padding: ${rhythm(2)};\n        padding-top: ${rhythm(1.5)};`}>\n      <Helmet>\n        <meta charSet=\"utf-8\" />\n        <title>zhuzilin's Blog</title>\n      </Helmet>\n      <Link to={`/`}>\n        <h3 css={css`\n            margin-bottom: ${rhythm(2)};\n            display: inline-block;\n            font-style: normal;`}>\n          {data.site.siteMetadata.title}\n        </h3>\n      </Link>\n      <Link to={`/about/`} css={css`float: right`}>\n        <h4 css={css`\n            margin-bottom: ${rhythm(2)};\n            display: inline-block;\n            font-style: normal;\n            color: #9f392b`}>\n          about\n        </h4>\n      </Link>\n      {children}\n    </div>\n  )}\n  />\n)"],"sourceRoot":""}