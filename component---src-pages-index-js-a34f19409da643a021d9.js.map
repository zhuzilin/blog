{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/utils/typography.js","webpack:///./src/components/layout.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["__webpack_exports__","_ref4","data","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","_components_layout__WEBPACK_IMPORTED_MODULE_4__","css","_ref","site","siteMetadata","title","allMarkdownRemark","totalCount","edges","map","_ref5","node","key","id","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","fields","slug","_ref2","rhythm","frontmatter","_ref3","date","excerpt","query","m","module","exports","require","default","StaticQueryContext","React","createContext","StaticQuery","props","Consumer","staticQueryData","render","children","graphql","Error","propTypes","PropTypes","object","string","isRequired","func","__webpack_require__","d","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","n","typography_theme_kirkham__WEBPACK_IMPORTED_MODULE_1__","typography_theme_kirkham__WEBPACK_IMPORTED_MODULE_1___default","typography","Typography","kirkhamTheme","gatsby__WEBPACK_IMPORTED_MODULE_3__","_public_static_d_3892401927_json__WEBPACK_IMPORTED_MODULE_1__","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","createElement","InternalPageRenderer","assign","json","shape"],"mappings":"iWAMeA,EAAA,iBAAAC,GAAc,IAAXC,EAAWD,EAAXC,KACd,OACIC,OAAAC,EAAA,EAAAD,CAACE,EAAA,EAAD,KACIF,OAAAC,EAAA,EAAAD,CAAA,WACIA,OAAAC,EAAA,EAAAD,CAAA,MACIG,IAAGC,GAKFL,EAAKM,KAAKC,aAAaC,OAE5BP,OAAAC,EAAA,EAAAD,CAAA,UAAKD,EAAKS,kBAAkBC,WAA5B,UACCV,EAAKS,kBAAkBE,MAAMC,IAAI,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,KAAH,OAC9Bb,OAAAC,EAAA,EAAAD,CAAA,OAAKc,IAAKD,EAAKE,IACXf,OAAAC,EAAA,EAAAD,CAACgB,EAAA,KAAD,CACIC,GAAIJ,EAAKK,OAAOC,KAChBhB,IAAGiB,GAMHpB,OAAAC,EAAA,EAAAD,CAAA,MACIG,IAAKA,YAAF,iBACAkB,YAAO,KADP,MAIFR,EAAKS,YAAYf,MAAO,IACzBP,OAAAC,EAAA,EAAAD,CAAA,QACIG,IAAGoB,GADP,KAKXV,EAAKS,YAAYE,OAGVxB,OAAAC,EAAA,EAAAD,CAAA,SAAIa,EAAKY,gBAS9B,IAAMC,EAAK,kCCpDlB,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,qnBCY/C,IAAMK,EAAqBC,IAAMC,cAAc,IAEzCC,EAAc,SAAAC,GAAK,OACvBpC,OAAAC,EAAA,EAAAD,CAACgC,EAAmBK,SAApB,KACG,SAAAC,GACC,OACEF,EAAMrC,MACLuC,EAAgBF,EAAMV,QAAUY,EAAgBF,EAAMV,OAAO3B,MAEtDqC,EAAMG,QAAUH,EAAMI,UAC5BJ,EAAMrC,KAAOqC,EAAMrC,KAAKA,KAAOuC,EAAgBF,EAAMV,OAAO3B,MAGvDC,OAAAC,EAAA,EAAAD,CAAA,uCAaf,SAASyC,IACP,MAAM,IAAIC,MACR,gVATJP,EAAYQ,UAAY,CACtB5C,KAAM6C,IAAUC,OAChBnB,MAAOkB,IAAUE,OAAOC,WACxBR,OAAQK,IAAUI,KAClBR,SAAUI,IAAUI,wCCnCtBC,EAAAC,EAAArD,EAAA,sBAAAwB,IAAA,IAAA8B,EAAAF,EAAA,KAAAG,EAAAH,EAAAI,EAAAF,GAAAG,EAAAL,EAAA,KAAAM,EAAAN,EAAAI,EAAAC,GAGME,EAAa,IAAIC,IAAWC,KAGrBrC,EAASmC,EAAWnC,+HCAlBxB,EAAA,WAAAuB,GAAA,IAAGoB,EAAHpB,EAAGoB,SAAH,OACXxC,OAAAC,EAAA,EAAAD,CAAC2D,EAAA,YAAD,CACIjC,MAAK,aAULa,OAAQ,SAAAxC,GAAI,OACRC,OAAAC,EAAA,EAAAD,CAAA,OACIG,IAAKA,YAAF,yCAGMkB,YAAO,GAHb,gBAIUA,YAAO,KAJjB,MAOHrB,OAAAC,EAAA,EAAAD,CAAC2D,EAAA,KAAD,CAAM1C,GAAE,KACJjB,OAAAC,EAAA,EAAAD,CAAA,MACIG,IAAKA,YAAF,iBACQkB,YAAO,GADf,6CAMFtB,EAAKM,KAAKC,aAAaC,QAGhCP,OAAAC,EAAA,EAAAD,CAAC2D,EAAA,KAAD,CACI1C,GAAE,UACFd,IAAGC,GAFP,SAQCoC,IAvCbzC,KAAA6D,sLCDEC,EAAmB,SAAAzD,GAAkB,IAAf0D,EAAe1D,EAAf0D,SACpBC,EAAgBC,UAAOC,4BAA4BH,EAASI,UAClE,OAAOjC,IAAMkC,cAAcC,IAApBpE,OAAAqE,OAAA,CACLP,WACAC,iBACGA,EAAcO,QAIrBT,EAAiBlB,UAAY,CAC3BmB,SAAUlB,IAAU2B,MAAM,CACxBL,SAAUtB,IAAUE,OAAOC,aAC1BA,YAGUc","file":"component---src-pages-index-js-a34f19409da643a021d9.js","sourcesContent":["import React from \"react\"\r\nimport { css } from \"@emotion/core\"\r\nimport { Link, graphql } from \"gatsby\"\r\nimport { rhythm } from \"../utils/typography\"\r\nimport Layout from \"../components/layout\"\r\n\r\nexport default ({ data }) => {\r\n    return (\r\n        <Layout>\r\n            <div>\r\n                <h1\r\n                    css={css`\r\n            display: inline-block;\r\n            border-bottom: 1px solid;\r\n          `}\r\n                >\r\n                    {data.site.siteMetadata.title}\r\n                </h1>\r\n                <h4>{data.allMarkdownRemark.totalCount} Posts</h4>\r\n                {data.allMarkdownRemark.edges.map(({ node }) => (\r\n                    <div key={node.id}>\r\n                        <Link\r\n                            to={node.fields.slug}\r\n                            css={css`\r\n                text-decoration: none;\r\n                color: inherit;\r\n              `\r\n                            }\r\n                        >\r\n                            <h3\r\n                                css={css`\r\n                  margin-bottom: ${rhythm(1 / 4)};\r\n                `}\r\n                            >\r\n                                {node.frontmatter.title}{\" \"}\r\n                                <span\r\n                                    css={css`\r\n                    color: #bbb;\r\n                  `}\r\n                                >\r\n                  â€” {node.frontmatter.date}\r\n                </span>\r\n                            </h3>\r\n                            <p>{node.excerpt}</p>\r\n                        </Link>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport const query = graphql`\r\n  query {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\r\n      totalCount\r\n      edges {\r\n        node {\r\n          id\r\n          frontmatter {\r\n            title\r\n            date(formatString: \"DD MMMM, YYYY\")\r\n          }\r\n          fields {\r\n            slug\r\n          }\r\n          excerpt\r\n        }\r\n      }\r\n    }\r\n  }\r\n`","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","import Typography from \"typography\"\r\nimport kirkhamTheme from \"typography-theme-kirkham\"\r\n\r\nconst typography = new Typography(kirkhamTheme)\r\n\r\nexport default typography\r\nexport const rhythm = typography.rhythm","import React from \"react\"\r\nimport { css } from \"@emotion/core\"\r\nimport { StaticQuery, Link, graphql } from \"gatsby\"\r\n\r\nimport { rhythm } from \"../utils/typography\"\r\n\r\nexport default ({ children }) => (\r\n    <StaticQuery\r\n        query={graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n          }\r\n        }\r\n      }\r\n    `\r\n        }\r\n        render={data => (\r\n            <div\r\n                css={css`\r\n              margin: 0 auto;\r\n              max-width: 800px;\r\n              padding: ${rhythm(2)};\r\n              padding-top: ${rhythm(1.5)};\r\n            `}\r\n            >\r\n                <Link to={`/`}>\r\n                    <h3\r\n                        css={css`\r\n                  margin-bottom: ${rhythm(2)};\r\n                  display: inline-block;\r\n                  font-style: normal;\r\n                `}\r\n                    >\r\n                        {data.site.siteMetadata.title}\r\n                    </h3>\r\n                </Link>\r\n                <Link\r\n                    to={`/about/`}\r\n                    css={css`\r\n                float: right;\r\n              `}\r\n                >\r\n                    About\r\n                </Link>\r\n                {children}\r\n            </div>\r\n        )}\r\n    />\r\n)","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}